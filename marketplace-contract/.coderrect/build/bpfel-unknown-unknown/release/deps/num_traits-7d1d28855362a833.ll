; ModuleID = 'num_traits.cba9cd87-cgu.0'
source_filename = "num_traits.cba9cd87-cgu.0"
target datalayout = "e-m:e-p:64:64-i64:64-n32:64-S128"
target triple = "bpfel"

%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>" = type { { i8*, i8* }, { i8*, i8* }, i64, i64, i64 }
%"core::iter::Zip<core::str::Bytes, core::str::Bytes>" = type { { i8*, i8* }, { i8*, i8* }, i64, i64, i64 }
%"core::option::Option<(u8, u8)>" = type { i8, [2 x i8] }
%"core::ops::ControlFlow<(), core::convert::Infallible>::Break" = type { {} }
%"core::ops::ControlFlow<()>::Break" = type { [1 x i8], {} }
%"core::iter::Enumerate<core::str::Chars>" = type { { i8*, i8* }, i64 }
%"core::option::Option<core::convert::Infallible>::None" = type {}
%"core::panic::Location" = type { { [0 x i8]*, i64 }, i32, i32 }
%"core::option::Option<(u8, u8)>::Some" = type { [1 x i8], { i8, i8 } }
%"core::fmt::Formatter" = type { { i64, i64 }, { i64, i64 }, { {}*, [3 x i64]* }, i32, i32, i8, [7 x i8] }
%"core::option::Option<u64>::Some" = type { [1 x i64], i64 }
%"core::num::dec2flt::decimal::Decimal" = type { i64, i32, i8, [768 x i8], [3 x i8] }
%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]" = type {}
%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]" = type {}
%"core::option::Option<(f64, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(f64, usize)>::Some" = type { [1 x i64], { double, i64 } }
%"core::option::Option<f64>::Some" = type { [1 x i64], double }
%"core::option::Option<(f32, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(f32, usize)>::Some" = type { [1 x i64], { float, i64 } }
%"core::option::Option<f32>::Some" = type { [1 x i32], float }
%"core::result::Result<f32, core::num::ParseFloatError>" = type { i8, [7 x i8] }
%"core::result::Result<f64, core::num::ParseFloatError>" = type { i8, [15 x i8] }
%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]" = type {}
%"core::num::dec2flt::number::Number" = type { i64, i64, i8, i8, [6 x i8] }
%"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue" = type { [1 x i64], i64 }
%"core::option::Option<core::num::dec2flt::number::Number>" = type { [16 x i8], i8, [7 x i8] }
%"core::result::Result<f32, core::num::ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::option::Option<core::num::dec2flt::number::Number>::Some" = type { %"core::num::dec2flt::number::Number" }
%"core::result::Result<f32, core::num::ParseFloatError>::Ok" = type { [1 x i32], float }
%"core::result::Result<f64, core::num::ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<f64, core::num::ParseFloatError>::Ok" = type { [1 x i64], double }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::option::Option<u32>::Some" = type { [1 x i32], i32 }
%"core::result::Result<usize, core::num::ParseIntError>" = type { i8, [15 x i8] }
%"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]" = type {}
%"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]" = type { %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]" }
%"[closure@<core::str::Chars as core::iter::Iterator>::next::{closure#0}]" = type {}
%"core::result::Result<f64, ParseFloatError>" = type { i8, [15 x i8] }
%"core::result::Result<f64, ParseFloatError>::Ok" = type { [1 x i64], double }
%"core::result::Result<f64, ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::result::Result<f32, ParseFloatError>" = type { i8, [7 x i8] }
%"core::result::Result<f32, ParseFloatError>::Ok" = type { [1 x i32], float }
%"core::result::Result<f32, ParseFloatError>::Err" = type { [1 x i8], i8 }
%"core::ops::ControlFlow<()>::Continue" = type { [1 x i8], {} }
%"core::option::Option<usize>::Some" = type { [1 x i64], i64 }
%"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Continue" = type { [1 x i8], {} }
%"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Break" = type { [1 x i8], %"core::ops::ControlFlow<(), core::convert::Infallible>::Break" }
%"core::fmt::DebugTuple" = type { %"core::fmt::Formatter"*, i64, i8, i8, [6 x i8] }
%"core::fmt::DebugStruct" = type { %"core::fmt::Formatter"*, i8, i8, [6 x i8] }
%"core::option::Option<(char, &str)>" = type { i32, [5 x i32] }
%"core::option::Option<(char, &str)>::Some" = type { { i32, [1 x i32], { [0 x i8]*, i64 } } }
%"core::result::Result<usize, core::num::ParseIntError>::Ok" = type { [1 x i64], i64 }

@alloc2941 = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/enumerate.rs" }>, align 1
@alloc2942 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [90 x i8] }>, <{ [90 x i8] }>* @alloc2941, i32 0, i32 0, i32 0), [16 x i8] c"Z\00\00\00\00\00\00\000\00\00\00\09\00\00\00" }>, align 8
@str.0 = internal constant [28 x i8] c"attempt to add with overflow"
@0 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"\00\03\06\09\0D\10\13\17\1A\1D!$'+.158;" }>, align 1
@alloc2945 = private unnamed_addr constant <{ [83 x i8] }> <{ [83 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/slow.rs" }>, align 1
@alloc2946 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [83 x i8] }>, <{ [83 x i8] }>* @alloc2945, i32 0, i32 0, i32 0), [16 x i8] c"S\00\00\00\00\00\00\00!\00\00\00\1D\00\00\00" }>, align 8
@alloc2980 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"nan" }>, align 1
@alloc2976 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"inf" }>, align 1
@alloc2947 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/common.rs" }>, align 1
@alloc2948 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2947, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\000\00\00\00\0A\00\00\00" }>, align 8
@1 = private unnamed_addr constant <{ [128 x i8] }> <{ [128 x i8] c"\01\00\00\00\00\00\00\00\0A\00\00\00\00\00\00\00d\00\00\00\00\00\00\00\E8\03\00\00\00\00\00\00\10'\00\00\00\00\00\00\A0\86\01\00\00\00\00\00@B\0F\00\00\00\00\00\80\96\98\00\00\00\00\00\00\E1\F5\05\00\00\00\00\00\CA\9A;\00\00\00\00\00\E4\0BT\02\00\00\00\00\E8vH\17\00\00\00\00\10\A5\D4\E8\00\00\00\00\A0rN\18\09\00\00\00@z\10\F3Z\00\00\00\80\C6\A4~\8D\03\00" }>, align 8
@alloc2949 = private unnamed_addr constant <{ [85 x i8] }> <{ [85 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/number.rs" }>, align 1
@alloc2950 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [85 x i8] }>, <{ [85 x i8] }>* @alloc2949, i32 0, i32 0, i32 0), [16 x i8] c"U\00\00\00\00\00\00\00H\00\00\00:\00\00\00" }>, align 8
@alloc2951 = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"to_digit: radix is too high (maximum 36)" }>, align 1
@alloc2952 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/char/methods.rs" }>, align 1
@alloc2953 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [79 x i8] }>, <{ [79 x i8] }>* @alloc2952, i32 0, i32 0, i32 0), [16 x i8] c"O\00\00\00\00\00\00\00M\01\00\00\09\00\00\00" }>, align 8
@alloc2846 = private unnamed_addr constant <{ [1 x i8] }> zeroinitializer, align 1
@alloc2956 = private unnamed_addr constant <{ [93 x i8] }> <{ [93 x i8] c"/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/float.rs" }>, align 1
@alloc2955 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [93 x i8] }>, <{ [93 x i8] }>* @alloc2956, i32 0, i32 0, i32 0), [16 x i8] c"]\00\00\00\00\00\00\00\F7\07\00\00\05\00\00\00" }>, align 8
@str.1 = internal constant [33 x i8] c"attempt to subtract with overflow"
@alloc2957 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [93 x i8] }>, <{ [93 x i8] }>* @alloc2956, i32 0, i32 0, i32 0), [16 x i8] c"]\00\00\00\00\00\00\00\07\08\00\00\05\00\00\00" }>, align 8
@alloc2958 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"invalid float literal" }>, align 1
@alloc2959 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"cannot parse float from empty string" }>, align 1
@alloc2960 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"Invalid" }>, align 1
@alloc2961 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Empty" }>, align 1
@alloc2962 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"ParseFloatError" }>, align 1
@alloc2963 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"kind" }>, align 1
@vtable.2 = private unnamed_addr constant <{ i8*, [16 x i8], i8*, [0 x i8] }> <{ i8* bitcast (void (i8**)* @"_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17hacc6e33a0073cd64E" to i8*), [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", i8* bitcast (i1 (i8**, %"core::fmt::Formatter"*)* @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff085c70b3d512c9E" to i8*), [0 x i8] zeroinitializer }>, align 8, !dbg !0
@alloc2977 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"infinity" }>, align 1
@alloc2978 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-inf" }>, align 1
@alloc2979 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"-infinity" }>, align 1
@alloc2981 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-nan" }>, align 1
@alloc2982 = private unnamed_addr constant <{ [0 x i8] }> zeroinitializer, align 1
@alloc2974 = private unnamed_addr constant <{ [91 x i8] }> <{ [91 x i8] c"/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs" }>, align 1
@alloc2975 = private unnamed_addr constant <{ i8*, [16 x i8] }> <{ i8* getelementptr inbounds (<{ [91 x i8] }>, <{ [91 x i8] }>* @alloc2974, i32 0, i32 0, i32 0), [16 x i8] c"[\00\00\00\00\00\00\00\8E\01\00\00\01\00\00\00" }>, align 8

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17habbf0680fb239970E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !56 {
start:
  %self.dbg.spill = alloca %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"*, align 8
  store %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"** %self.dbg.spill, metadata !116, metadata !DIExpression()), !dbg !117
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %0 = call { i8*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h3d63ccb7f72d129fE"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* align 8 dereferenceable(56) %self), !dbg !118
  %1 = extractvalue { i8*, i8* } %0, 0, !dbg !118
  %2 = extractvalue { i8*, i8* } %0, 1, !dbg !118
  br label %bb1, !dbg !118

bb1:                                              ; preds = %start
  %3 = insertvalue { i8*, i8* } undef, i8* %1, 0, !dbg !119
  %4 = insertvalue { i8*, i8* } %3, i8* %2, 1, !dbg !119
  ret { i8*, i8* } %4, !dbg !119
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define i24 @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he53a662ae4d6ffb2E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !120 {
start:
  %0 = alloca i24, align 4
  %self.dbg.spill = alloca %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"*, align 8
  %1 = alloca %"core::option::Option<(u8, u8)>", align 1
  store %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, metadata !163, metadata !DIExpression()), !dbg !164
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %2 = call i24 @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h5d88cd68a95ed554E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self), !dbg !165
  store i24 %2, i24* %0, align 4, !dbg !165
  %3 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i8*, !dbg !165
  %4 = bitcast i24* %0 to i8*, !dbg !165
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false), !dbg !165
  br label %bb1, !dbg !165

bb1:                                              ; preds = %start
  %5 = bitcast %"core::option::Option<(u8, u8)>"* %1 to i24*, !dbg !166
  %6 = load i24, i24* %5, align 1, !dbg !166
  ret i24 %6, !dbg !166
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nounwind
define i8 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17habce9b3f3ab3f3ffE"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %idx) unnamed_addr #1 !dbg !167 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !174, metadata !DIExpression()), !dbg !177
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !175, metadata !DIExpression()), !dbg !178
; call core::iter::adapters::zip::try_get_unchecked
  %_3 = call align 1 dereferenceable(1) i8* @_ZN4core4iter8adapters3zip17try_get_unchecked17h721846e5d9984395E({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %idx), !dbg !179
  br label %bb1, !dbg !179

bb1:                                              ; preds = %start
  %0 = load i8, i8* %_3, align 1, !dbg !180
  ret i8 %0, !dbg !181
}

; <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: nounwind
define void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h873532b9b576354dE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !182 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !203, metadata !DIExpression()), !dbg !204
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha1de5e1f1190acc2E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !205
  br label %bb1, !dbg !205

bb1:                                              ; preds = %start
  ret void, !dbg !206
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf95ea245bbc93a5E"() unnamed_addr #0 !dbg !207 {
start:
  %b.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"core::ops::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata %"core::ops::ControlFlow<(), core::convert::Infallible>::Break"* %residual.dbg.spill, metadata !229, metadata !DIExpression()), !dbg !234
  call void @llvm.dbg.declare(metadata {}* %b.dbg.spill, metadata !230, metadata !DIExpression()), !dbg !235
  %1 = bitcast i8* %0 to %"core::ops::ControlFlow<()>::Break"*, !dbg !236
  %2 = getelementptr inbounds %"core::ops::ControlFlow<()>::Break", %"core::ops::ControlFlow<()>::Break"* %1, i32 0, i32 1, !dbg !236
  store i8 1, i8* %0, align 1, !dbg !236
  %3 = load i8, i8* %0, align 1, !dbg !237, !range !238
  %4 = trunc i8 %3 to i1, !dbg !237
  ret i1 %4, !dbg !237
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h15708020735db847E"(i64 %self.0, i64 %self.1, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !239 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { i64, i64 }, align 8
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 0
  store i64 %self.0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self.dbg.spill, metadata !257, metadata !DIExpression()), !dbg !259
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !258, metadata !DIExpression()), !dbg !260
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6bb91fbf2dc375fbE"([0 x i8]* %slice.0, i64 %slice.1), !dbg !261
  br label %bb1, !dbg !261

bb1:                                              ; preds = %start
  store i8* %_4, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !262, metadata !DIExpression()), !dbg !271
  store i64 %self.0, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !270, metadata !DIExpression()), !dbg !273
  store i8* %_4, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !274, metadata !DIExpression()), !dbg !281
  store i64 %self.0, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !280, metadata !DIExpression()), !dbg !283
  %5 = getelementptr inbounds i8, i8* %_4, i64 %self.0, !dbg !284
  store i8* %5, i8** %0, align 8, !dbg !284
  %6 = load i8*, i8** %0, align 8, !dbg !284
  br label %bb2, !dbg !261

bb2:                                              ; preds = %bb1
  %_7 = sub i64 %self.1, %self.0, !dbg !285
; call core::ptr::slice_from_raw_parts
  %7 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc86f76d7a6485995E(i8* %6, i64 %_7), !dbg !286
  %8 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !286
  %9 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !286
  br label %bb3, !dbg !286

bb3:                                              ; preds = %bb2
  %10 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !287
  %11 = insertvalue { [0 x i8]*, i64 } %10, i64 %9, 1, !dbg !287
  ret { [0 x i8]*, i64 } %11, !dbg !287
}

; <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define { i64, i32 } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h25a9e1fc1ba2b9adE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !288 {
start:
  %i.dbg.spill = alloca i64, align 8
  %a.dbg.spill = alloca i32, align 4
  %val.dbg.spill = alloca i32, align 4
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %self.dbg.spill = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  %_12 = alloca { i64, i32 }, align 8
  %_3 = alloca i32, align 4
  %0 = alloca { i64, i32 }, align 8
  store %"core::iter::Enumerate<core::str::Chars>"* %self, %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, metadata !324, metadata !DIExpression()), !dbg !341
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !327, metadata !DIExpression()), !dbg !342
  %_5 = bitcast %"core::iter::Enumerate<core::str::Chars>"* %self to { i8*, i8* }*, !dbg !343
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %_4 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb51acee8bd391655E"({ i8*, i8* }* align 8 dereferenceable(16) %_5), !dbg !343, !range !344
  br label %bb1, !dbg !343

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hedeb98747c67b596E"(i32 %_4), !dbg !343, !range !344
  store i32 %1, i32* %_3, align 4, !dbg !343
  br label %bb2, !dbg !343

bb2:                                              ; preds = %bb1
  %2 = load i32, i32* %_3, align 4, !dbg !343, !range !344
  %3 = sub i32 %2, 1114112, !dbg !343
  %4 = icmp eq i32 %3, 0, !dbg !343
  %_6 = select i1 %4, i64 1, i64 0, !dbg !343
  switch i64 %_6, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !343

bb4:                                              ; preds = %bb2
  unreachable, !dbg !343

bb3:                                              ; preds = %bb2
  %val = load i32, i32* %_3, align 4, !dbg !343, !range !345
  store i32 %val, i32* %val.dbg.spill, align 4, !dbg !343
  call void @llvm.dbg.declare(metadata i32* %val.dbg.spill, metadata !337, metadata !DIExpression()), !dbg !346
  store i32 %val, i32* %a.dbg.spill, align 4, !dbg !346
  call void @llvm.dbg.declare(metadata i32* %a.dbg.spill, metadata !325, metadata !DIExpression()), !dbg !347
  %5 = getelementptr inbounds %"core::iter::Enumerate<core::str::Chars>", %"core::iter::Enumerate<core::str::Chars>"* %self, i32 0, i32 1, !dbg !348
  %i = load i64, i64* %5, align 8, !dbg !348
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !348
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !339, metadata !DIExpression()), !dbg !349
  %6 = getelementptr inbounds %"core::iter::Enumerate<core::str::Chars>", %"core::iter::Enumerate<core::str::Chars>"* %self, i32 0, i32 1, !dbg !350
  %7 = load i64, i64* %6, align 8, !dbg !350
  %8 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %7, i64 1), !dbg !350
  %_11.0 = extractvalue { i64, i1 } %8, 0, !dbg !350
  %_11.1 = extractvalue { i64, i1 } %8, 1, !dbg !350
  %9 = call i1 @llvm.expect.i1(i1 %_11.1, i1 false), !dbg !350
  br i1 %9, label %panic, label %bb7, !dbg !350

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %10 = call { i64, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he188c053a388e2b1E"(), !dbg !351
  store { i64, i32 } %10, { i64, i32 }* %0, align 8, !dbg !351
  br label %bb6, !dbg !351

bb6:                                              ; preds = %bb5
  br label %bb8, !dbg !352

bb8:                                              ; preds = %bb7, %bb6
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !352
  %12 = load i64, i64* %11, align 8, !dbg !352
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !352
  %14 = load i32, i32* %13, align 8, !dbg !352, !range !344
  %15 = insertvalue { i64, i32 } undef, i64 %12, 0, !dbg !352
  %16 = insertvalue { i64, i32 } %15, i32 %14, 1, !dbg !352
  ret { i64, i32 } %16, !dbg !352

bb7:                                              ; preds = %bb3
  %17 = getelementptr inbounds %"core::iter::Enumerate<core::str::Chars>", %"core::iter::Enumerate<core::str::Chars>"* %self, i32 0, i32 1, !dbg !350
  store i64 %_11.0, i64* %17, align 8, !dbg !350
  %18 = bitcast { i64, i32 }* %_12 to i64*, !dbg !353
  store i64 %i, i64* %18, align 8, !dbg !353
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 1, !dbg !353
  store i32 %val, i32* %19, align 8, !dbg !353
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 0, !dbg !354
  %21 = load i64, i64* %20, align 8, !dbg !354
  %22 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_12, i32 0, i32 1, !dbg !354
  %23 = load i32, i32* %22, align 8, !dbg !354, !range !345
  %24 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !354
  store i64 %21, i64* %24, align 8, !dbg !354
  %25 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !354
  store i32 %23, i32* %25, align 8, !dbg !354
  br label %bb8, !dbg !352

panic:                                            ; preds = %bb3
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2942 to %"core::panic::Location"*)), !dbg !350
  unreachable, !dbg !350
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb65db3c83737715cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !355 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !363, metadata !DIExpression()), !dbg !365
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !364, metadata !DIExpression()), !dbg !366
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_5 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hec0269ed6419e823E"([0 x i8]* %slice.0, i64 %slice.1), !dbg !367
  br label %bb1, !dbg !367

bb1:                                              ; preds = %start
  %2 = bitcast { i64, i64 }* %_3 to i64*, !dbg !368
  store i64 %self, i64* %2, align 8, !dbg !368
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !368
  store i64 %_5, i64* %3, align 8, !dbg !368
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 0, !dbg !368
  %5 = load i64, i64* %4, align 8, !dbg !368
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_3, i32 0, i32 1, !dbg !368
  %7 = load i64, i64* %6, align 8, !dbg !368
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %8 = call { [0 x i8]*, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h15708020735db847E"(i64 %5, i64 %7, [0 x i8]* %slice.0, i64 %slice.1), !dbg !368
  %9 = extractvalue { [0 x i8]*, i64 } %8, 0, !dbg !368
  %10 = extractvalue { [0 x i8]*, i64 } %8, 1, !dbg !368
  br label %bb2, !dbg !368

bb2:                                              ; preds = %bb1
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !369
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !369
  ret { [0 x i8]*, i64 } %12, !dbg !369
}

; <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h9c2d9b358cf72ee1E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !370 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !390, metadata !DIExpression()), !dbg !392
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !391, metadata !DIExpression()), !dbg !393
  %_3 = icmp ugt i64 %self, %slice.1, !dbg !394
  br i1 %_3, label %bb1, label %bb2, !dbg !394

bb2:                                              ; preds = %start
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb65db3c83737715cE"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !395
  %_10.0 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !395
  %_10.1 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !395
  br label %bb3, !dbg !395

bb1:                                              ; preds = %start
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64 %self, i64 %slice.1, %"core::panic::Location"* align 8 dereferenceable(24) %0), !dbg !396
  unreachable, !dbg !396

bb3:                                              ; preds = %bb2
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_10.0, 0, !dbg !397
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %_10.1, 1, !dbg !397
  ret { [0 x i8]*, i64 } %5, !dbg !397
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nounwind
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h7d9e762bf9c54f99E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %0, i8* nonnull %1, i8* %2, i8* nonnull %3, i8* %4) unnamed_addr #1 !dbg !398 {
start:
  %len.dbg.spill = alloca i64, align 8
  %a_len.dbg.spill = alloca i64, align 8
  %b = alloca { i8*, i8* }, align 8
  %a = alloca { i8*, i8* }, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0
  store i8* %3, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1
  store i8* %4, i8** %8, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a, metadata !403, metadata !DIExpression()), !dbg !409
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b, metadata !404, metadata !DIExpression()), !dbg !410
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = call i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h0fedc2414066c9baE({ i8*, i8* }* align 8 dereferenceable(16) %a), !dbg !411
  store i64 %a_len, i64* %a_len.dbg.spill, align 8, !dbg !411
  call void @llvm.dbg.declare(metadata i64* %a_len.dbg.spill, metadata !405, metadata !DIExpression()), !dbg !412
  br label %bb1, !dbg !411

bb1:                                              ; preds = %start
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %_7 = call i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h0fedc2414066c9baE({ i8*, i8* }* align 8 dereferenceable(16) %b), !dbg !413
  br label %bb2, !dbg !413

bb2:                                              ; preds = %bb1
; call core::cmp::min
  %len = call i64 @_ZN4core3cmp3min17hd0c19dbaf1480053E(i64 %a_len, i64 %_7), !dbg !414
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !414
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !407, metadata !DIExpression()), !dbg !415
  br label %bb3, !dbg !414

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0, !dbg !416
  %_9.0 = load i8*, i8** %9, align 8, !dbg !416, !nonnull !4
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1, !dbg !416
  %_9.1 = load i8*, i8** %10, align 8, !dbg !416
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0, !dbg !417
  %_10.0 = load i8*, i8** %11, align 8, !dbg !417, !nonnull !4
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1, !dbg !417
  %_10.1 = load i8*, i8** %12, align 8, !dbg !417
  %13 = bitcast %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %0 to { i8*, i8* }*, !dbg !418
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %13, i32 0, i32 0, !dbg !418
  store i8* %_9.0, i8** %14, align 8, !dbg !418
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %13, i32 0, i32 1, !dbg !418
  store i8* %_9.1, i8** %15, align 8, !dbg !418
  %16 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %0, i32 0, i32 1, !dbg !418
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 0, !dbg !418
  store i8* %_10.0, i8** %17, align 8, !dbg !418
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 1, !dbg !418
  store i8* %_10.1, i8** %18, align 8, !dbg !418
  %19 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %0, i32 0, i32 2, !dbg !418
  store i64 0, i64* %19, align 8, !dbg !418
  %20 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %0, i32 0, i32 3, !dbg !418
  store i64 %len, i64* %20, align 8, !dbg !418
  %21 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %0, i32 0, i32 4, !dbg !418
  store i64 %a_len, i64* %21, align 8, !dbg !418
  ret void, !dbg !419
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nounwind
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17hb72b2badc854bf7fE"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %0, i8* nonnull %1, i8* %2, i8* nonnull %3, i8* %4) unnamed_addr #1 !dbg !420 {
start:
  %len.dbg.spill = alloca i64, align 8
  %a_len.dbg.spill = alloca i64, align 8
  %b = alloca { i8*, i8* }, align 8
  %a = alloca { i8*, i8* }, align 8
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1
  store i8* %2, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0
  store i8* %3, i8** %7, align 8
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1
  store i8* %4, i8** %8, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a, metadata !424, metadata !DIExpression()), !dbg !430
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b, metadata !425, metadata !DIExpression()), !dbg !431
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = call i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h19b34300de56c82fE({ i8*, i8* }* align 8 dereferenceable(16) %a), !dbg !432
  store i64 %a_len, i64* %a_len.dbg.spill, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata i64* %a_len.dbg.spill, metadata !426, metadata !DIExpression()), !dbg !433
  br label %bb1, !dbg !432

bb1:                                              ; preds = %start
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %_7 = call i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h19b34300de56c82fE({ i8*, i8* }* align 8 dereferenceable(16) %b), !dbg !434
  br label %bb2, !dbg !434

bb2:                                              ; preds = %bb1
; call core::cmp::min
  %len = call i64 @_ZN4core3cmp3min17hd0c19dbaf1480053E(i64 %a_len, i64 %_7), !dbg !435
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !435
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !428, metadata !DIExpression()), !dbg !436
  br label %bb3, !dbg !435

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 0, !dbg !437
  %_9.0 = load i8*, i8** %9, align 8, !dbg !437, !nonnull !4
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a, i32 0, i32 1, !dbg !437
  %_9.1 = load i8*, i8** %10, align 8, !dbg !437
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 0, !dbg !438
  %_10.0 = load i8*, i8** %11, align 8, !dbg !438, !nonnull !4
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b, i32 0, i32 1, !dbg !438
  %_10.1 = load i8*, i8** %12, align 8, !dbg !438
  %13 = bitcast %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %0 to { i8*, i8* }*, !dbg !439
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %13, i32 0, i32 0, !dbg !439
  store i8* %_9.0, i8** %14, align 8, !dbg !439
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %13, i32 0, i32 1, !dbg !439
  store i8* %_9.1, i8** %15, align 8, !dbg !439
  %16 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %0, i32 0, i32 1, !dbg !439
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 0, !dbg !439
  store i8* %_10.0, i8** %17, align 8, !dbg !439
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %16, i32 0, i32 1, !dbg !439
  store i8* %_10.1, i8** %18, align 8, !dbg !439
  %19 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %0, i32 0, i32 2, !dbg !439
  store i64 0, i64* %19, align 8, !dbg !439
  %20 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %0, i32 0, i32 3, !dbg !439
  store i64 %len, i64* %20, align 8, !dbg !439
  %21 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %0, i32 0, i32 4, !dbg !439
  store i64 %a_len, i64* %21, align 8, !dbg !439
  ret void, !dbg !440
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h3d63ccb7f72d129fE"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !441 {
start:
  %i.dbg.spill2 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"*, align 8
  %_13 = alloca i8, align 1
  %_6 = alloca { i8*, i8* }, align 8
  %0 = alloca { i8*, i8* }, align 8
  store %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"** %self.dbg.spill, metadata !443, metadata !DIExpression()), !dbg !448
  %1 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !449
  %_3 = load i64, i64* %1, align 8, !dbg !449
  %2 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 3, !dbg !450
  %_4 = load i64, i64* %2, align 8, !dbg !450
  %_2 = icmp ult i64 %_3, %_4, !dbg !449
  br i1 %_2, label %bb1, label %bb4, !dbg !449

bb4:                                              ; preds = %start
  br i1 false, label %bb6, label %bb5, !dbg !451

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !452
  %i = load i64, i64* %3, align 8, !dbg !452
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !452
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !444, metadata !DIExpression()), !dbg !453
  %4 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !454
  %5 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !454
  %6 = load i64, i64* %5, align 8, !dbg !454
  %7 = add i64 %6, 1, !dbg !454
  store i64 %7, i64* %4, align 8, !dbg !454
  %_8 = bitcast %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self to { i8*, i8* }*, !dbg !455
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call align 1 dereferenceable(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE"({ i8*, i8* }* align 8 dereferenceable(16) %_8, i64 %i), !dbg !455
  br label %bb2, !dbg !455

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 1, !dbg !456
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = call align 1 dereferenceable(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE"({ i8*, i8* }* align 8 dereferenceable(16) %_11, i64 %i), !dbg !456
  br label %bb3, !dbg !456

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8*, i8* }* %_6 to i8**, !dbg !457
  store i8* %_7, i8** %8, align 8, !dbg !457
  %9 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 1, !dbg !457
  store i8* %_10, i8** %9, align 8, !dbg !457
  %10 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 0, !dbg !458
  %11 = load i8*, i8** %10, align 8, !dbg !458, !nonnull !4
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_6, i32 0, i32 1, !dbg !458
  %13 = load i8*, i8** %12, align 8, !dbg !458, !nonnull !4
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !458
  store i8* %11, i8** %14, align 8, !dbg !458
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !458
  store i8* %13, i8** %15, align 8, !dbg !458
  br label %bb13, !dbg !459

bb13:                                             ; preds = %bb12, %bb3
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !460
  %17 = load i8*, i8** %16, align 8, !dbg !460
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !460
  %19 = load i8*, i8** %18, align 8, !dbg !460
  %20 = insertvalue { i8*, i8* } undef, i8* %17, 0, !dbg !460
  %21 = insertvalue { i8*, i8* } %20, i8* %19, 1, !dbg !460
  ret { i8*, i8* } %21, !dbg !460

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_13, align 1, !dbg !451
  br label %bb7, !dbg !451

bb6:                                              ; preds = %bb4
  %22 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !461
  %_15 = load i64, i64* %22, align 8, !dbg !461
  %23 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 4, !dbg !462
  %_16 = load i64, i64* %23, align 8, !dbg !462
  %_14 = icmp ult i64 %_15, %_16, !dbg !461
  %24 = zext i1 %_14 to i8, !dbg !451
  store i8 %24, i8* %_13, align 1, !dbg !451
  br label %bb7, !dbg !451

bb7:                                              ; preds = %bb5, %bb6
  %25 = load i8, i8* %_13, align 1, !dbg !451, !range !238
  %26 = trunc i8 %25 to i1, !dbg !451
  br i1 %26, label %bb8, label %bb11, !dbg !451

bb11:                                             ; preds = %bb7
  %27 = bitcast { i8*, i8* }* %0 to {}**, !dbg !463
  store {}* null, {}** %27, align 8, !dbg !463
  br label %bb12, !dbg !464

bb8:                                              ; preds = %bb7
  %28 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !465
  %i1 = load i64, i64* %28, align 8, !dbg !465
  store i64 %i1, i64* %i.dbg.spill2, align 8, !dbg !465
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill2, metadata !446, metadata !DIExpression()), !dbg !466
  %29 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !467
  %30 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 2, !dbg !467
  %31 = load i64, i64* %30, align 8, !dbg !467
  %32 = add i64 %31, 1, !dbg !467
  store i64 %32, i64* %29, align 8, !dbg !467
  %33 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 3, !dbg !468
  %34 = getelementptr inbounds %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, i32 0, i32 3, !dbg !468
  %35 = load i64, i64* %34, align 8, !dbg !468
  %36 = add i64 %35, 1, !dbg !468
  store i64 %36, i64* %33, align 8, !dbg !468
  %_19 = bitcast %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self to { i8*, i8* }*, !dbg !469
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_18 = call align 1 dereferenceable(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE"({ i8*, i8* }* align 8 dereferenceable(16) %_19, i64 %i1), !dbg !469
  br label %bb9, !dbg !469

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !470

bb10:                                             ; preds = %bb9
  %37 = bitcast { i8*, i8* }* %0 to {}**, !dbg !471
  store {}* null, {}** %37, align 8, !dbg !471
  br label %bb12, !dbg !464

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13, !dbg !459
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nounwind
define i24 @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h5d88cd68a95ed554E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !472 {
start:
  %i.dbg.spill2 = alloca i64, align 8
  %i.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"*, align 8
  %_13 = alloca i8, align 1
  %_6 = alloca { i8, i8 }, align 1
  %0 = alloca %"core::option::Option<(u8, u8)>", align 1
  store %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, metadata !474, metadata !DIExpression()), !dbg !479
  %1 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !480
  %_3 = load i64, i64* %1, align 8, !dbg !480
  %2 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 3, !dbg !481
  %_4 = load i64, i64* %2, align 8, !dbg !481
  %_2 = icmp ult i64 %_3, %_4, !dbg !480
  br i1 %_2, label %bb1, label %bb4, !dbg !480

bb4:                                              ; preds = %start
  br i1 false, label %bb6, label %bb5, !dbg !482

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !483
  %i = load i64, i64* %3, align 8, !dbg !483
  store i64 %i, i64* %i.dbg.spill, align 8, !dbg !483
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !475, metadata !DIExpression()), !dbg !484
  %4 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !485
  %5 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !485
  %6 = load i64, i64* %5, align 8, !dbg !485
  %7 = add i64 %6, 1, !dbg !485
  store i64 %7, i64* %4, align 8, !dbg !485
  %_8 = bitcast %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self to { i8*, i8* }*, !dbg !486
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h21872b9da702deb4E"({ i8*, i8* }* align 8 dereferenceable(16) %_8, i64 %i), !dbg !486
  br label %bb2, !dbg !486

bb2:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 1, !dbg !487
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_10 = call i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h21872b9da702deb4E"({ i8*, i8* }* align 8 dereferenceable(16) %_11, i64 %i), !dbg !487
  br label %bb3, !dbg !487

bb3:                                              ; preds = %bb2
  %8 = bitcast { i8, i8 }* %_6 to i8*, !dbg !488
  store i8 %_7, i8* %8, align 1, !dbg !488
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !488
  store i8 %_10, i8* %9, align 1, !dbg !488
  %10 = bitcast %"core::option::Option<(u8, u8)>"* %0 to %"core::option::Option<(u8, u8)>::Some"*, !dbg !489
  %11 = getelementptr inbounds %"core::option::Option<(u8, u8)>::Some", %"core::option::Option<(u8, u8)>::Some"* %10, i32 0, i32 1, !dbg !489
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !489
  %13 = load i8, i8* %12, align 1, !dbg !489
  %14 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !489
  %15 = load i8, i8* %14, align 1, !dbg !489
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %11, i32 0, i32 0, !dbg !489
  store i8 %13, i8* %16, align 1, !dbg !489
  %17 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %11, i32 0, i32 1, !dbg !489
  store i8 %15, i8* %17, align 1, !dbg !489
  %18 = bitcast %"core::option::Option<(u8, u8)>"* %0 to i8*, !dbg !489
  store i8 1, i8* %18, align 1, !dbg !489
  br label %bb13, !dbg !490

bb13:                                             ; preds = %bb12, %bb3
  %19 = bitcast %"core::option::Option<(u8, u8)>"* %0 to i24*, !dbg !491
  %20 = load i24, i24* %19, align 1, !dbg !491
  ret i24 %20, !dbg !491

bb5:                                              ; preds = %bb4
  store i8 0, i8* %_13, align 1, !dbg !482
  br label %bb7, !dbg !482

bb6:                                              ; preds = %bb4
  %21 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !492
  %_15 = load i64, i64* %21, align 8, !dbg !492
  %22 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 4, !dbg !493
  %_16 = load i64, i64* %22, align 8, !dbg !493
  %_14 = icmp ult i64 %_15, %_16, !dbg !492
  %23 = zext i1 %_14 to i8, !dbg !482
  store i8 %23, i8* %_13, align 1, !dbg !482
  br label %bb7, !dbg !482

bb7:                                              ; preds = %bb5, %bb6
  %24 = load i8, i8* %_13, align 1, !dbg !482, !range !238
  %25 = trunc i8 %24 to i1, !dbg !482
  br i1 %25, label %bb8, label %bb11, !dbg !482

bb11:                                             ; preds = %bb7
  %26 = bitcast %"core::option::Option<(u8, u8)>"* %0 to i8*, !dbg !494
  store i8 0, i8* %26, align 1, !dbg !494
  br label %bb12, !dbg !495

bb8:                                              ; preds = %bb7
  %27 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !496
  %i1 = load i64, i64* %27, align 8, !dbg !496
  store i64 %i1, i64* %i.dbg.spill2, align 8, !dbg !496
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill2, metadata !477, metadata !DIExpression()), !dbg !497
  %28 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !498
  %29 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 2, !dbg !498
  %30 = load i64, i64* %29, align 8, !dbg !498
  %31 = add i64 %30, 1, !dbg !498
  store i64 %31, i64* %28, align 8, !dbg !498
  %32 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 3, !dbg !499
  %33 = getelementptr inbounds %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, i32 0, i32 3, !dbg !499
  %34 = load i64, i64* %33, align 8, !dbg !499
  %35 = add i64 %34, 1, !dbg !499
  store i64 %35, i64* %32, align 8, !dbg !499
  %_19 = bitcast %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self to { i8*, i8* }*, !dbg !500
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_18 = call i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h21872b9da702deb4E"({ i8*, i8* }* align 8 dereferenceable(16) %_19, i64 %i1), !dbg !500
  br label %bb9, !dbg !500

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !501

bb10:                                             ; preds = %bb9
  %36 = bitcast %"core::option::Option<(u8, u8)>"* %0 to i8*, !dbg !502
  store i8 0, i8* %36, align 1, !dbg !502
  br label %bb12, !dbg !495

bb12:                                             ; preds = %bb11, %bb10
  br label %bb13, !dbg !490
}

; std::f32::<impl f32>::powi
; Function Attrs: inlinehint nounwind
define internal float @"_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17h346b69919f8c3eb6E"(float %self, i32 %n) unnamed_addr #0 !dbg !503 {
start:
  %0 = alloca float, align 4
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !513, metadata !DIExpression()), !dbg !515
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !514, metadata !DIExpression()), !dbg !516
  %1 = call float @llvm.powi.f32.i32(float %self, i32 %n), !dbg !517
  store float %1, float* %0, align 4, !dbg !517
  %2 = load float, float* %0, align 4, !dbg !517
  br label %bb1, !dbg !517

bb1:                                              ; preds = %start
  ret float %2, !dbg !518
}

; std::f64::<impl f64>::powi
; Function Attrs: inlinehint nounwind
define internal double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17hc5b39c35377ec9d5E"(double %self, i32 %n) unnamed_addr #0 !dbg !519 {
start:
  %0 = alloca double, align 8
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !527, metadata !DIExpression()), !dbg !529
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !528, metadata !DIExpression()), !dbg !530
  %1 = call double @llvm.powi.f64.i32(double %self, i32 %n), !dbg !531
  store double %1, double* %0, align 8, !dbg !531
  %2 = load double, double* %0, align 8, !dbg !531
  br label %bb1, !dbg !531

bb1:                                              ; preds = %start
  ret double %2, !dbg !532
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff085c70b3d512c9E"(i8** align 8 dereferenceable(8) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !533 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8**, align 8
  store i8** %self, i8*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %self.dbg.spill, metadata !558, metadata !DIExpression()), !dbg !562
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !559, metadata !DIExpression()), !dbg !563
  %_4 = load i8*, i8** %self, align 8, !dbg !564, !nonnull !4
; call <num_traits::FloatErrorKind as core::fmt::Debug>::fmt
  %0 = call zeroext i1 @"_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hb7677d240ac5cfebE"(i8* align 1 dereferenceable(1) %_4, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !565
  br label %bb1, !dbg !565

bb1:                                              ; preds = %start
  ret i1 %0, !dbg !566
}

; <f32 as core::ops::arith::Div>::div
; Function Attrs: inlinehint nounwind
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17he6073f501bfa0ee7E"(float %self, float %other) unnamed_addr #0 !dbg !567 {
start:
  %other.dbg.spill = alloca float, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !574, metadata !DIExpression()), !dbg !576
  store float %other, float* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %other.dbg.spill, metadata !575, metadata !DIExpression()), !dbg !577
  %0 = fdiv float %self, %other, !dbg !578
  ret float %0, !dbg !579
}

; <f32 as core::ops::arith::Mul>::mul
; Function Attrs: inlinehint nounwind
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17hcf55b7e176d8b17bE"(float %self, float %other) unnamed_addr #0 !dbg !580 {
start:
  %other.dbg.spill = alloca float, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !583, metadata !DIExpression()), !dbg !585
  store float %other, float* %other.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %other.dbg.spill, metadata !584, metadata !DIExpression()), !dbg !586
  %0 = fmul float %self, %other, !dbg !587
  ret float %0, !dbg !588
}

; <f32 as core::ops::arith::Neg>::neg
; Function Attrs: inlinehint nounwind
define internal float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17h57e55d56d9e42651E"(float %self) unnamed_addr #0 !dbg !589 {
start:
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !594, metadata !DIExpression()), !dbg !595
  %0 = fneg float %self, !dbg !596
  ret float %0, !dbg !597
}

; <f64 as core::ops::arith::Div>::div
; Function Attrs: inlinehint nounwind
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h3f3cf0a934854f68E"(double %self, double %other) unnamed_addr #0 !dbg !598 {
start:
  %other.dbg.spill = alloca double, align 8
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !603, metadata !DIExpression()), !dbg !605
  store double %other, double* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %other.dbg.spill, metadata !604, metadata !DIExpression()), !dbg !606
  %0 = fdiv double %self, %other, !dbg !607
  ret double %0, !dbg !608
}

; <f64 as core::ops::arith::Mul>::mul
; Function Attrs: inlinehint nounwind
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17hbd1481c8bcbc57e1E"(double %self, double %other) unnamed_addr #0 !dbg !609 {
start:
  %other.dbg.spill = alloca double, align 8
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !612, metadata !DIExpression()), !dbg !614
  store double %other, double* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %other.dbg.spill, metadata !613, metadata !DIExpression()), !dbg !615
  %0 = fmul double %self, %other, !dbg !616
  ret double %0, !dbg !617
}

; <f64 as core::ops::arith::Neg>::neg
; Function Attrs: inlinehint nounwind
define internal double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h725e8e59798aaf5fE"(double %self) unnamed_addr #0 !dbg !618 {
start:
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !623, metadata !DIExpression()), !dbg !624
  %0 = fneg double %self, !dbg !625
  ret double %0, !dbg !626
}

; core::cmp::Ord::min
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3Ord3min17hf1c029e7f2107ff3E(i64 %self, i64 %other) unnamed_addr #0 !dbg !627 {
start:
  %other.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !633, metadata !DIExpression()), !dbg !637
  store i64 %other, i64* %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %other.dbg.spill, metadata !634, metadata !DIExpression()), !dbg !638
; call core::cmp::min_by
  %0 = call i64 @_ZN4core3cmp6min_by17h83b5bcb5037deac0E(i64 %self, i64 %other), !dbg !639
  br label %bb1, !dbg !639

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !640
}

; core::cmp::min
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp3min17hd0c19dbaf1480053E(i64 %v1, i64 %v2) unnamed_addr #0 !dbg !641 {
start:
  %v2.dbg.spill = alloca i64, align 8
  %v1.dbg.spill = alloca i64, align 8
  store i64 %v1, i64* %v1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v1.dbg.spill, metadata !643, metadata !DIExpression()), !dbg !645
  store i64 %v2, i64* %v2.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %v2.dbg.spill, metadata !644, metadata !DIExpression()), !dbg !646
; call core::cmp::Ord::min
  %0 = call i64 @_ZN4core3cmp3Ord3min17hf1c029e7f2107ff3E(i64 %v1, i64 %v2), !dbg !647
  br label %bb1, !dbg !647

bb1:                                              ; preds = %start
  ret i64 %0, !dbg !648
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc38d608d3e030fabE"(i64* align 8 dereferenceable(8) %self, i64* align 8 dereferenceable(8) %other) unnamed_addr #0 !dbg !649 {
start:
  %other.dbg.spill = alloca i64*, align 8
  %self.dbg.spill = alloca i64*, align 8
  %0 = alloca i8, align 1
  store i64* %self, i64** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %self.dbg.spill, metadata !656, metadata !DIExpression()), !dbg !658
  store i64* %other, i64** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %other.dbg.spill, metadata !657, metadata !DIExpression()), !dbg !659
  %_4 = load i64, i64* %self, align 8, !dbg !660
  %_5 = load i64, i64* %other, align 8, !dbg !661
  %_3 = icmp ult i64 %_4, %_5, !dbg !660
  br i1 %_3, label %bb1, label %bb2, !dbg !660

bb2:                                              ; preds = %start
  %_7 = load i64, i64* %self, align 8, !dbg !662
  %_8 = load i64, i64* %other, align 8, !dbg !663
  %_6 = icmp eq i64 %_7, %_8, !dbg !662
  br i1 %_6, label %bb3, label %bb4, !dbg !662

bb1:                                              ; preds = %start
  store i8 -1, i8* %0, align 1, !dbg !664
  br label %bb6, !dbg !665

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, i8* %0, align 1, !dbg !666, !range !667
  ret i8 %1, !dbg !666

bb4:                                              ; preds = %bb2
  store i8 1, i8* %0, align 1, !dbg !668
  br label %bb5, !dbg !669

bb3:                                              ; preds = %bb2
  store i8 0, i8* %0, align 1, !dbg !670
  br label %bb5, !dbg !669

bb5:                                              ; preds = %bb4, %bb3
  br label %bb6, !dbg !665
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h264c06fe5bf4a2f5E"({}* nonnull align 1 %self, {}* nonnull align 1 %_other) unnamed_addr #0 !dbg !671 {
start:
  %_other.dbg.spill = alloca {}*, align 8
  %self.dbg.spill = alloca {}*, align 8
  store {}* %self, {}** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %self.dbg.spill, metadata !678, metadata !DIExpression()), !dbg !680
  store {}* %_other, {}** %_other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %_other.dbg.spill, metadata !679, metadata !DIExpression()), !dbg !681
  ret i1 true, !dbg !682
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h19ec8da187428af2E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %self, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %other) unnamed_addr #0 !dbg !683 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }*, align 8
  store { [0 x i8]*, i64 }* %self, { [0 x i8]*, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %self.dbg.spill, metadata !689, metadata !DIExpression()), !dbg !697
  store { [0 x i8]*, i64 }* %other, { [0 x i8]*, i64 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }** %other.dbg.spill, metadata !690, metadata !DIExpression()), !dbg !698
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 0, !dbg !699
  %_3.0 = load [0 x i8]*, [0 x i8]** %0, align 8, !dbg !699, !nonnull !4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self, i32 0, i32 1, !dbg !699
  %_3.1 = load i64, i64* %1, align 8, !dbg !699
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 0, !dbg !700
  %_4.0 = load [0 x i8]*, [0 x i8]** %2, align 8, !dbg !700, !nonnull !4
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other, i32 0, i32 1, !dbg !700
  %_4.1 = load i64, i64* %3, align 8, !dbg !700
; call core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
  %4 = call zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h9fdb2abeb156c430E"([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1, [0 x i8]* nonnull align 1 %_4.0, i64 %_4.1), !dbg !701
  br label %bb1, !dbg !701

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !702
}

; core::cmp::min_by
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3cmp6min_by17h83b5bcb5037deac0E(i64 %0, i64 %1) unnamed_addr #0 !dbg !703 {
start:
  %compare.dbg.spill = alloca {}, align 1
  %_13 = alloca i8, align 1
  %_12 = alloca i8, align 1
  %_6 = alloca { i64*, i64* }, align 8
  %_4 = alloca i8, align 1
  %2 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, i64* %v1, align 8
  store i64 %1, i64* %v2, align 8
  call void @llvm.dbg.declare(metadata i64* %v1, metadata !708, metadata !DIExpression()), !dbg !713
  call void @llvm.dbg.declare(metadata i64* %v2, metadata !709, metadata !DIExpression()), !dbg !714
  call void @llvm.dbg.declare(metadata {}* %compare.dbg.spill, metadata !710, metadata !DIExpression()), !dbg !715
  store i8 0, i8* %_13, align 1, !dbg !716
  store i8 0, i8* %_12, align 1, !dbg !716
  store i8 1, i8* %_13, align 1, !dbg !716
  store i8 1, i8* %_12, align 1, !dbg !716
  %3 = bitcast { i64*, i64* }* %_6 to i64**, !dbg !716
  store i64* %v1, i64** %3, align 8, !dbg !716
  %4 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !716
  store i64* %v2, i64** %4, align 8, !dbg !716
  %5 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 0, !dbg !716
  %6 = load i64*, i64** %5, align 8, !dbg !716, !nonnull !4
  %7 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_6, i32 0, i32 1, !dbg !716
  %8 = load i64*, i64** %7, align 8, !dbg !716, !nonnull !4
; call core::ops::function::FnOnce::call_once
  %9 = call i8 @_ZN4core3ops8function6FnOnce9call_once17h5d8b4d52c0e39bb0E(i64* align 8 dereferenceable(8) %6, i64* align 8 dereferenceable(8) %8), !dbg !716, !range !667
  store i8 %9, i8* %_4, align 1, !dbg !716
  br label %bb1, !dbg !716

bb1:                                              ; preds = %start
  %10 = load i8, i8* %_4, align 1, !dbg !716, !range !667
  %_11 = sext i8 %10 to i64, !dbg !716
  switch i64 %_11, label %bb3 [
    i64 -1, label %bb4
    i64 0, label %bb4
    i64 1, label %bb2
  ], !dbg !717

bb3:                                              ; preds = %bb1
  unreachable, !dbg !716

bb4:                                              ; preds = %bb1, %bb1
  store i8 0, i8* %_13, align 1, !dbg !718
  %11 = load i64, i64* %v1, align 8, !dbg !718
  store i64 %11, i64* %2, align 8, !dbg !718
  br label %bb5, !dbg !718

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_12, align 1, !dbg !719
  %12 = load i64, i64* %v2, align 8, !dbg !719
  store i64 %12, i64* %2, align 8, !dbg !719
  br label %bb5, !dbg !719

bb5:                                              ; preds = %bb4, %bb2
  %13 = load i8, i8* %_12, align 1, !dbg !720, !range !238
  %14 = trunc i8 %13 to i1, !dbg !720
  br i1 %14, label %bb8, label %bb6, !dbg !720

bb6:                                              ; preds = %bb8, %bb5
  %15 = load i8, i8* %_13, align 1, !dbg !720, !range !238
  %16 = trunc i8 %15 to i1, !dbg !720
  br i1 %16, label %bb9, label %bb7, !dbg !720

bb8:                                              ; preds = %bb5
  br label %bb6, !dbg !720

bb7:                                              ; preds = %bb9, %bb6
  %17 = load i64, i64* %2, align 8, !dbg !721
  ret i64 %17, !dbg !721

bb9:                                              ; preds = %bb6
  br label %bb7, !dbg !720
}

; core::mem::size_of_val
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3mem11size_of_val17h8cf98265f313b93aE([0 x i8]* nonnull align 1 %val.0, i64 %val.1) unnamed_addr #0 !dbg !722 {
start:
  %0 = alloca i64, align 8
  %val.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 0
  store [0 x i8]* %val.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %val.dbg.spill, i32 0, i32 1
  store i64 %val.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %val.dbg.spill, metadata !728, metadata !DIExpression()), !dbg !731
  %3 = mul i64 %val.1, 1, !dbg !732
  store i64 %3, i64* %0, align 8, !dbg !732
  %4 = load i64, i64* %0, align 8, !dbg !732
  br label %bb1, !dbg !732

bb1:                                              ; preds = %start
  ret i64 %4, !dbg !733
}

; core::num::<impl u64>::checked_mul
; Function Attrs: inlinehint nounwind
define internal { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h4cf3e0f6afebc40eE"(i64 %self, i64 %rhs) unnamed_addr #0 !dbg !734 {
start:
  %b.dbg.spill.i = alloca i8, align 1
  %a.dbg.spill.i = alloca i64, align 8
  %0 = alloca { i64, i8 }, align 8
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %1 = alloca { i64, i8 }, align 8
  %2 = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i64, align 8
  %rhs.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca i64, align 8
  %3 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !752, metadata !DIExpression()), !dbg !757
  store i64 %rhs, i64* %rhs.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill, metadata !753, metadata !DIExpression()), !dbg !758
  store i64 %self, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !759, metadata !DIExpression()) #7, !dbg !772
  store i64 %rhs, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !768, metadata !DIExpression()) #7, !dbg !774
  %4 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self, i64 %rhs) #7, !dbg !775
  %5 = extractvalue { i64, i1 } %4, 0, !dbg !775
  %6 = extractvalue { i64, i1 } %4, 1, !dbg !775
  %7 = zext i1 %6 to i8, !dbg !775
  %8 = bitcast { i64, i8 }* %0 to i64*, !dbg !775
  store i64 %5, i64* %8, align 8, !dbg !775
  %9 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !775
  store i8 %7, i8* %9, align 8, !dbg !775
  %10 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 0, !dbg !775
  %_5.0.i = load i64, i64* %10, align 8, !dbg !775
  %11 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %0, i32 0, i32 1, !dbg !775
  %12 = load i8, i8* %11, align 8, !dbg !775, !range !238
  %_5.1.i = trunc i8 %12 to i1, !dbg !775
  store i64 %_5.0.i, i64* %a.dbg.spill.i, align 8, !dbg !776
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill.i, metadata !769, metadata !DIExpression()) #7, !dbg !777
  %13 = zext i1 %_5.1.i to i8, !dbg !778
  store i8 %13, i8* %b.dbg.spill.i, align 1, !dbg !778
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill.i, metadata !771, metadata !DIExpression()) #7, !dbg !779
  %14 = bitcast { i64, i8 }* %1 to i64*, !dbg !780
  store i64 %_5.0.i, i64* %14, align 8, !dbg !780
  %15 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !780
  %16 = zext i1 %_5.1.i to i8, !dbg !780
  store i8 %16, i8* %15, align 8, !dbg !780
  %17 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 0, !dbg !781
  %18 = load i64, i64* %17, align 8, !dbg !781
  %19 = getelementptr inbounds { i64, i8 }, { i64, i8 }* %1, i32 0, i32 1, !dbg !781
  %20 = load i8, i8* %19, align 8, !dbg !781, !range !238
  %21 = trunc i8 %20 to i1, !dbg !781
  %22 = zext i1 %21 to i8, !dbg !781
  %23 = insertvalue { i64, i8 } undef, i64 %18, 0, !dbg !781
  %24 = insertvalue { i64, i8 } %23, i8 %22, 1, !dbg !781
  %_5.0 = extractvalue { i64, i8 } %24, 0, !dbg !782
  %25 = extractvalue { i64, i8 } %24, 1, !dbg !782
  %_5.1 = trunc i8 %25 to i1, !dbg !782
  br label %bb1, !dbg !782

bb1:                                              ; preds = %start
  store i64 %_5.0, i64* %a.dbg.spill, align 8, !dbg !783
  call void @llvm.dbg.declare(metadata i64* %a.dbg.spill, metadata !754, metadata !DIExpression()), !dbg !784
  %26 = zext i1 %_5.1 to i8, !dbg !785
  store i8 %26, i8* %b.dbg.spill, align 1, !dbg !785
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !756, metadata !DIExpression()), !dbg !786
  %27 = call i1 @llvm.expect.i1(i1 %_5.1, i1 false), !dbg !787
  %28 = zext i1 %27 to i8, !dbg !787
  store i8 %28, i8* %2, align 1, !dbg !787
  %29 = load i8, i8* %2, align 1, !dbg !787, !range !238
  %_8 = trunc i8 %29 to i1, !dbg !787
  br label %bb2, !dbg !787

bb2:                                              ; preds = %bb1
  br i1 %_8, label %bb3, label %bb4, !dbg !787

bb4:                                              ; preds = %bb2
  %30 = bitcast { i64, i64 }* %3 to %"core::option::Option<u64>::Some"*, !dbg !788
  %31 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %30, i32 0, i32 1, !dbg !788
  store i64 %_5.0, i64* %31, align 8, !dbg !788
  %32 = bitcast { i64, i64 }* %3 to i64*, !dbg !788
  store i64 1, i64* %32, align 8, !dbg !788
  br label %bb5, !dbg !789

bb3:                                              ; preds = %bb2
  %33 = bitcast { i64, i64 }* %3 to i64*, !dbg !790
  store i64 0, i64* %33, align 8, !dbg !790
  br label %bb5, !dbg !789

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0, !dbg !791
  %35 = load i64, i64* %34, align 8, !dbg !791, !range !792
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1, !dbg !791
  %37 = load i64, i64* %36, align 8, !dbg !791
  %38 = insertvalue { i64, i64 } undef, i64 %35, 0, !dbg !791
  %39 = insertvalue { i64, i64 } %38, i64 %37, 1, !dbg !791
  ret { i64, i64 } %39, !dbg !791
}

; core::num::dec2flt::biased_fp_to_float
; Function Attrs: nounwind
define float @_ZN4core3num7dec2flt18biased_fp_to_float17h35fd2ba36433138cE(i64 %x.0, i32 %x.1) unnamed_addr #1 !dbg !793 {
start:
  %x.dbg.spill = alloca { i64, i32 }, align 8
  %word = alloca i64, align 8
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 0
  store i64 %x.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 1
  store i32 %x.1, i32* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }* %x.dbg.spill, metadata !803, metadata !DIExpression()), !dbg !808
  call void @llvm.dbg.declare(metadata i64* %word, metadata !804, metadata !DIExpression()), !dbg !809
  store i64 %x.0, i64* %word, align 8, !dbg !810
  %_4 = sext i32 %x.1 to i64, !dbg !811
  %_3 = shl i64 %_4, 23, !dbg !811
  %2 = load i64, i64* %word, align 8, !dbg !812
  %3 = or i64 %2, %_3, !dbg !812
  store i64 %3, i64* %word, align 8, !dbg !812
  %_6 = load i64, i64* %word, align 8, !dbg !813
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits
  %4 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h97cfb0a3db1092d0E"(i64 %_6), !dbg !814
  br label %bb1, !dbg !814

bb1:                                              ; preds = %start
  ret float %4, !dbg !815
}

; core::num::dec2flt::biased_fp_to_float
; Function Attrs: nounwind
define double @_ZN4core3num7dec2flt18biased_fp_to_float17h6a560688513527b2E(i64 %x.0, i32 %x.1) unnamed_addr #1 !dbg !816 {
start:
  %x.dbg.spill = alloca { i64, i32 }, align 8
  %word = alloca i64, align 8
  %0 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 0
  store i64 %x.0, i64* %0, align 8
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %x.dbg.spill, i32 0, i32 1
  store i32 %x.1, i32* %1, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }* %x.dbg.spill, metadata !820, metadata !DIExpression()), !dbg !825
  call void @llvm.dbg.declare(metadata i64* %word, metadata !821, metadata !DIExpression()), !dbg !826
  store i64 %x.0, i64* %word, align 8, !dbg !827
  %_4 = sext i32 %x.1 to i64, !dbg !828
  %_3 = shl i64 %_4, 52, !dbg !828
  %2 = load i64, i64* %word, align 8, !dbg !829
  %3 = or i64 %2, %_3, !dbg !829
  store i64 %3, i64* %word, align 8, !dbg !829
  %_6 = load i64, i64* %word, align 8, !dbg !830
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64_bits
  %4 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17hbeb87971dba26564E"(i64 %_6), !dbg !831
  br label %bb1, !dbg !831

bb1:                                              ; preds = %start
  ret double %4, !dbg !832
}

; core::num::dec2flt::fpu::fpu_precision::set_precision
; Function Attrs: nounwind
define void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h574ca4041d6482d6E() unnamed_addr #1 !dbg !833 {
start:
  ret void, !dbg !839
}

; core::num::dec2flt::fpu::fpu_precision::set_precision
; Function Attrs: nounwind
define void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h678315491519b81dE() unnamed_addr #1 !dbg !840 {
start:
  ret void, !dbg !841
}

; core::num::dec2flt::slow::parse_long_mantissa
; Function Attrs: nounwind
define { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17h2b64145d4e379df0E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !842 {
start:
  %digit.dbg.spill4 = alloca i8, align 1
  %digit.dbg.spill = alloca i8*, align 8
  %shift.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %n = alloca i64, align 8
  %_40 = alloca i64, align 8
  %shift = alloca i64, align 8
  %_20 = alloca i64, align 8
  %exp2 = alloca i32, align 4
  %_7 = alloca i8, align 1
  %d = alloca %"core::num::dec2flt::decimal::Decimal", align 8
  %get_shift = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]", align 1
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !848, metadata !DIExpression()), !dbg !888
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* %get_shift, metadata !849, metadata !DIExpression()), !dbg !889
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::decimal::Decimal"* %d, metadata !857, metadata !DIExpression()), !dbg !890
  call void @llvm.dbg.declare(metadata i32* %exp2, metadata !869, metadata !DIExpression()), !dbg !891
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !875, metadata !DIExpression()), !dbg !892
  call void @llvm.dbg.declare(metadata i64* %n, metadata !880, metadata !DIExpression()), !dbg !893
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !882, metadata !DIExpression()), !dbg !894
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !884, metadata !DIExpression()), !dbg !895
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 0), !dbg !896
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !896
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !896
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !896
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !896
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !896
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !896
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !853, metadata !DIExpression()), !dbg !897
  br label %bb1, !dbg !896

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 2047), !dbg !898
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !898
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !898
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !898
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !898
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !898
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !898
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !855, metadata !DIExpression()), !dbg !899
  br label %bb2, !dbg !898

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::decimal::parse_decimal
  call void @_ZN4core3num7dec2flt7decimal13parse_decimal17h6f1c7f033d9ec072E(%"core::num::dec2flt::decimal::Decimal"* noalias nocapture sret(%"core::num::dec2flt::decimal::Decimal") dereferenceable(784) %d, [0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !900
  br label %bb3, !dbg !900

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::num::dec2flt::decimal::Decimal"* %d to i64*, !dbg !901
  %_8 = load i64, i64* %9, align 8, !dbg !901
  %10 = icmp eq i64 %_8, 0, !dbg !901
  br i1 %10, label %bb4, label %bb5, !dbg !901

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_7, align 1, !dbg !901
  br label %bb6, !dbg !901

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !902
  %_10 = load i32, i32* %11, align 8, !dbg !902
  %_9 = icmp slt i32 %_10, -324, !dbg !902
  %12 = zext i1 %_9 to i8, !dbg !901
  store i8 %12, i8* %_7, align 1, !dbg !901
  br label %bb6, !dbg !901

bb6:                                              ; preds = %bb4, %bb5
  %13 = load i8, i8* %_7, align 1, !dbg !901, !range !238
  %14 = trunc i8 %13 to i1, !dbg !901
  br i1 %14, label %bb7, label %bb8, !dbg !901

bb8:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !903
  %_12 = load i32, i32* %15, align 8, !dbg !903
  %_11 = icmp sge i32 %_12, 310, !dbg !903
  br i1 %_11, label %bb9, label %bb10, !dbg !903

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !904
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !904
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !904
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !904
  br label %bb53, !dbg !905

bb53:                                             ; preds = %bb9, %bb7
  br label %bb54, !dbg !906

bb10:                                             ; preds = %bb8
  store i32 0, i32* %exp2, align 4, !dbg !909
  br label %bb11, !dbg !910

bb9:                                              ; preds = %bb8
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !911
  store i64 %fp_inf.0, i64* %18, align 8, !dbg !911
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !911
  store i32 %fp_inf.1, i32* %19, align 8, !dbg !911
  br label %bb53, !dbg !906

bb54:                                             ; preds = %bb52, %bb53
  br label %bb55, !dbg !912

bb11:                                             ; preds = %bb16, %bb10
  %20 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !913
  %_15 = load i32, i32* %20, align 8, !dbg !913
  %_14 = icmp sgt i32 %_15, 0, !dbg !913
  br i1 %_14, label %bb12, label %bb17, !dbg !913

bb17:                                             ; preds = %bb11
  br label %bb18, !dbg !914

bb12:                                             ; preds = %bb11
  %21 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !915
  %_17 = load i32, i32* %21, align 8, !dbg !915
  %n1 = sext i32 %_17 to i64, !dbg !915
  store i64 %n1, i64* %n.dbg.spill, align 8, !dbg !915
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !871, metadata !DIExpression()), !dbg !916
  store i64 %n1, i64* %_20, align 8, !dbg !917
  %22 = load i64, i64* %_20, align 8, !dbg !917
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %shift2 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hbfed245ebaebca70E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* nonnull align 1 %get_shift, i64 %22), !dbg !917
  store i64 %shift2, i64* %shift.dbg.spill, align 8, !dbg !917
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !873, metadata !DIExpression()), !dbg !918
  br label %bb13, !dbg !917

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %shift2), !dbg !919
  br label %bb14, !dbg !919

bb14:                                             ; preds = %bb13
  %23 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !920
  %_26 = load i32, i32* %23, align 8, !dbg !920
  %_25 = icmp slt i32 %_26, -2047, !dbg !920
  br i1 %_25, label %bb15, label %bb16, !dbg !920

bb16:                                             ; preds = %bb14
  %_28 = trunc i64 %shift2 to i32, !dbg !921
  %24 = load i32, i32* %exp2, align 4, !dbg !922
  %25 = add i32 %24, %_28, !dbg !922
  store i32 %25, i32* %exp2, align 4, !dbg !922
  br label %bb11, !dbg !910

bb15:                                             ; preds = %bb14
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !923
  store i64 %fp_zero.0, i64* %26, align 8, !dbg !923
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !923
  store i32 %fp_zero.1, i32* %27, align 8, !dbg !923
  br label %bb52, !dbg !924

bb52:                                             ; preds = %bb47, %bb40, %bb30, %bb15
  br label %bb54, !dbg !906

bb18:                                             ; preds = %bb31, %bb17
  %28 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !926
  %_31 = load i32, i32* %28, align 8, !dbg !926
  %_30 = icmp sle i32 %_31, 0, !dbg !926
  br i1 %_30, label %bb19, label %bb32, !dbg !926

bb32:                                             ; preds = %bb18
  br label %bb33, !dbg !924

bb19:                                             ; preds = %bb18
  %29 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !927
  %_33 = load i32, i32* %29, align 8, !dbg !927
  %30 = icmp eq i32 %_33, 0, !dbg !927
  br i1 %30, label %bb20, label %bb26, !dbg !927

bb20:                                             ; preds = %bb19
  %31 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !928
  %digit = getelementptr inbounds [768 x i8], [768 x i8]* %31, i64 0, i64 0, !dbg !928
  store i8* %digit, i8** %digit.dbg.spill, align 8, !dbg !928
  call void @llvm.dbg.declare(metadata i8** %digit.dbg.spill, metadata !879, metadata !DIExpression()), !dbg !929
  %_38 = load i8, i8* %digit, align 1, !dbg !930
  %_37 = icmp uge i8 %_38, 5, !dbg !930
  br i1 %_37, label %bb22, label %bb23, !dbg !930

bb26:                                             ; preds = %bb19
  %32 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !931
  %_44 = load i32, i32* %32, align 8, !dbg !931
  %_43 = sub i32 0, %_44, !dbg !932
  %_42 = sext i32 %_43 to i64, !dbg !932
  store i64 %_42, i64* %_40, align 8, !dbg !933
  %33 = load i64, i64* %_40, align 8, !dbg !933
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %34 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hbfed245ebaebca70E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* nonnull align 1 %get_shift, i64 %33), !dbg !933
  store i64 %34, i64* %shift, align 8, !dbg !933
  br label %bb27, !dbg !933

bb27:                                             ; preds = %bb26
  br label %bb28, !dbg !934

bb28:                                             ; preds = %bb25, %bb27
  %_47 = load i64, i64* %shift, align 8, !dbg !935
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h1fb9a5e7afe46baaE(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %_47), !dbg !936
  br label %bb29, !dbg !936

bb23:                                             ; preds = %bb20
  %35 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !937
  %36 = getelementptr inbounds [768 x i8], [768 x i8]* %35, i64 0, i64 0, !dbg !937
  %37 = load i8, i8* %36, align 1, !dbg !937
  switch i8 %37, label %bb21 [
    i8 0, label %bb24
    i8 1, label %bb24
  ], !dbg !937

bb22:                                             ; preds = %bb20
  %38 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !928
  %39 = getelementptr inbounds [768 x i8], [768 x i8]* %38, i64 0, i64 0, !dbg !928
  %digit3 = load i8, i8* %39, align 1, !dbg !928
  store i8 %digit3, i8* %digit.dbg.spill4, align 1, !dbg !928
  call void @llvm.dbg.declare(metadata i8* %digit.dbg.spill4, metadata !877, metadata !DIExpression()), !dbg !929
  br label %bb33, !dbg !924

bb33:                                             ; preds = %bb32, %bb22
  %40 = load i32, i32* %exp2, align 4, !dbg !938
  %41 = sub i32 %40, 1, !dbg !938
  store i32 %41, i32* %exp2, align 4, !dbg !938
  br label %bb34, !dbg !939

bb21:                                             ; preds = %bb23
  store i64 1, i64* %shift, align 8, !dbg !940
  br label %bb25, !dbg !940

bb24:                                             ; preds = %bb23, %bb23
  store i64 2, i64* %shift, align 8, !dbg !941
  br label %bb25, !dbg !941

bb25:                                             ; preds = %bb24, %bb21
  br label %bb28, !dbg !934

bb29:                                             ; preds = %bb28
  %42 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !942
  %_49 = load i32, i32* %42, align 8, !dbg !942
  %_48 = icmp sgt i32 %_49, 2047, !dbg !942
  br i1 %_48, label %bb30, label %bb31, !dbg !942

bb31:                                             ; preds = %bb29
  %_51 = load i64, i64* %shift, align 8, !dbg !943
  %_50 = trunc i64 %_51 to i32, !dbg !943
  %43 = load i32, i32* %exp2, align 4, !dbg !944
  %44 = sub i32 %43, %_50, !dbg !944
  store i32 %44, i32* %exp2, align 4, !dbg !944
  br label %bb18, !dbg !914

bb30:                                             ; preds = %bb29
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !945
  store i64 %fp_inf.0, i64* %45, align 8, !dbg !945
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !945
  store i32 %fp_inf.1, i32* %46, align 8, !dbg !945
  br label %bb52, !dbg !924

bb34:                                             ; preds = %bb38, %bb33
  %_54 = load i32, i32* %exp2, align 4, !dbg !946
  %_52 = icmp sgt i32 -1022, %_54, !dbg !947
  br i1 %_52, label %bb35, label %bb39, !dbg !947

bb39:                                             ; preds = %bb34
  %_68 = load i32, i32* %exp2, align 4, !dbg !948
  %_67 = sub i32 %_68, -1023, !dbg !949
  %_66 = icmp sge i32 %_67, 2047, !dbg !949
  br i1 %_66, label %bb40, label %bb41, !dbg !949

bb35:                                             ; preds = %bb34
  %_58 = load i32, i32* %exp2, align 4, !dbg !950
  %_56 = sub i32 -1022, %_58, !dbg !951
  %47 = sext i32 %_56 to i64, !dbg !951
  store i64 %47, i64* %n, align 8, !dbg !951
  %_60 = load i64, i64* %n, align 8, !dbg !952
  %_59 = icmp ugt i64 %_60, 60, !dbg !952
  br i1 %_59, label %bb36, label %bb37, !dbg !952

bb37:                                             ; preds = %bb36, %bb35
  %_63 = load i64, i64* %n, align 8, !dbg !953
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %_63), !dbg !954
  br label %bb38, !dbg !954

bb36:                                             ; preds = %bb35
  store i64 60, i64* %n, align 8, !dbg !955
  br label %bb37, !dbg !956

bb38:                                             ; preds = %bb37
  %_65 = load i64, i64* %n, align 8, !dbg !957
  %_64 = trunc i64 %_65 to i32, !dbg !957
  %48 = load i32, i32* %exp2, align 4, !dbg !958
  %49 = add i32 %48, %_64, !dbg !958
  store i32 %49, i32* %exp2, align 4, !dbg !958
  br label %bb34, !dbg !939

bb41:                                             ; preds = %bb39
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h1fb9a5e7afe46baaE(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 53), !dbg !959
  br label %bb42, !dbg !959

bb40:                                             ; preds = %bb39
  %50 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !960
  store i64 %fp_inf.0, i64* %50, align 8, !dbg !960
  %51 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !960
  store i32 %fp_inf.1, i32* %51, align 8, !dbg !960
  br label %bb52, !dbg !924

bb42:                                             ; preds = %bb41
; call core::num::dec2flt::decimal::Decimal::round
  %52 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h43feb4dd3873aaa7E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d), !dbg !961
  store i64 %52, i64* %mantissa, align 8, !dbg !961
  br label %bb43, !dbg !961

bb43:                                             ; preds = %bb42
  %_75 = load i64, i64* %mantissa, align 8, !dbg !962
  %_74 = icmp uge i64 %_75, 9007199254740992, !dbg !962
  br i1 %_74, label %bb44, label %bb49, !dbg !962

bb49:                                             ; preds = %bb48, %bb43
  %_86 = load i32, i32* %exp2, align 4, !dbg !963
  %53 = sub i32 %_86, -1023, !dbg !963
  store i32 %53, i32* %power2, align 4, !dbg !963
  %_88 = load i64, i64* %mantissa, align 8, !dbg !964
  %_87 = icmp ult i64 %_88, 4503599627370496, !dbg !964
  br i1 %_87, label %bb50, label %bb51, !dbg !964

bb44:                                             ; preds = %bb43
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 1), !dbg !965
  br label %bb45, !dbg !965

bb45:                                             ; preds = %bb44
  %54 = load i32, i32* %exp2, align 4, !dbg !966
  %55 = add i32 %54, 1, !dbg !966
  store i32 %55, i32* %exp2, align 4, !dbg !966
; call core::num::dec2flt::decimal::Decimal::round
  %_80 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h43feb4dd3873aaa7E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d), !dbg !967
  br label %bb46, !dbg !967

bb46:                                             ; preds = %bb45
  store i64 %_80, i64* %mantissa, align 8, !dbg !968
  %_84 = load i32, i32* %exp2, align 4, !dbg !969
  %_83 = sub i32 %_84, -1023, !dbg !970
  %_82 = icmp sge i32 %_83, 2047, !dbg !970
  br i1 %_82, label %bb47, label %bb48, !dbg !970

bb48:                                             ; preds = %bb46
  br label %bb49, !dbg !971

bb47:                                             ; preds = %bb46
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !972
  store i64 %fp_inf.0, i64* %56, align 8, !dbg !972
  %57 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !972
  store i32 %fp_inf.1, i32* %57, align 8, !dbg !972
  br label %bb52, !dbg !924

bb55:                                             ; preds = %bb51, %bb54
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !912
  %59 = load i64, i64* %58, align 8, !dbg !912
  %60 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !912
  %61 = load i32, i32* %60, align 8, !dbg !912
  %62 = insertvalue { i64, i32 } undef, i64 %59, 0, !dbg !912
  %63 = insertvalue { i64, i32 } %62, i32 %61, 1, !dbg !912
  ret { i64, i32 } %63, !dbg !912

bb51:                                             ; preds = %bb50, %bb49
  %64 = load i64, i64* %mantissa, align 8, !dbg !973
  %65 = and i64 %64, 4503599627370495, !dbg !973
  store i64 %65, i64* %mantissa, align 8, !dbg !973
  %_92 = load i64, i64* %mantissa, align 8, !dbg !974
  %_93 = load i32, i32* %power2, align 4, !dbg !975
  %66 = bitcast { i64, i32 }* %0 to i64*, !dbg !976
  store i64 %_92, i64* %66, align 8, !dbg !976
  %67 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !976
  store i32 %_93, i32* %67, align 8, !dbg !976
  br label %bb55, !dbg !912

bb50:                                             ; preds = %bb49
  %68 = load i32, i32* %power2, align 4, !dbg !977
  %69 = sub i32 %68, 1, !dbg !977
  store i32 %69, i32* %power2, align 4, !dbg !977
  br label %bb51, !dbg !978
}

; core::num::dec2flt::slow::parse_long_mantissa
; Function Attrs: nounwind
define { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17h62bb7aad644caa2fE([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !979 {
start:
  %digit.dbg.spill4 = alloca i8, align 1
  %digit.dbg.spill = alloca i8*, align 8
  %shift.dbg.spill = alloca i64, align 8
  %n.dbg.spill = alloca i64, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %n = alloca i64, align 8
  %_40 = alloca i64, align 8
  %shift = alloca i64, align 8
  %_20 = alloca i64, align 8
  %exp2 = alloca i32, align 4
  %_7 = alloca i8, align 1
  %d = alloca %"core::num::dec2flt::decimal::Decimal", align 8
  %get_shift = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]", align 1
  %0 = alloca { i64, i32 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !981, metadata !DIExpression()), !dbg !1010
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* %get_shift, metadata !982, metadata !DIExpression()), !dbg !1011
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::decimal::Decimal"* %d, metadata !989, metadata !DIExpression()), !dbg !1012
  call void @llvm.dbg.declare(metadata i32* %exp2, metadata !991, metadata !DIExpression()), !dbg !1013
  call void @llvm.dbg.declare(metadata i64* %shift, metadata !997, metadata !DIExpression()), !dbg !1014
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1002, metadata !DIExpression()), !dbg !1015
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1004, metadata !DIExpression()), !dbg !1016
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1006, metadata !DIExpression()), !dbg !1017
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 0), !dbg !1018
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1018
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1018
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1018
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1018
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1018
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1018
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !985, metadata !DIExpression()), !dbg !1019
  br label %bb1, !dbg !1018

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 255), !dbg !1020
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1020
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1020
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1020
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1020
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1020
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1020
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !987, metadata !DIExpression()), !dbg !1021
  br label %bb2, !dbg !1020

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::decimal::parse_decimal
  call void @_ZN4core3num7dec2flt7decimal13parse_decimal17h6f1c7f033d9ec072E(%"core::num::dec2flt::decimal::Decimal"* noalias nocapture sret(%"core::num::dec2flt::decimal::Decimal") dereferenceable(784) %d, [0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !1022
  br label %bb3, !dbg !1022

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::num::dec2flt::decimal::Decimal"* %d to i64*, !dbg !1023
  %_8 = load i64, i64* %9, align 8, !dbg !1023
  %10 = icmp eq i64 %_8, 0, !dbg !1023
  br i1 %10, label %bb4, label %bb5, !dbg !1023

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_7, align 1, !dbg !1023
  br label %bb6, !dbg !1023

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1024
  %_10 = load i32, i32* %11, align 8, !dbg !1024
  %_9 = icmp slt i32 %_10, -324, !dbg !1024
  %12 = zext i1 %_9 to i8, !dbg !1023
  store i8 %12, i8* %_7, align 1, !dbg !1023
  br label %bb6, !dbg !1023

bb6:                                              ; preds = %bb4, %bb5
  %13 = load i8, i8* %_7, align 1, !dbg !1023, !range !238
  %14 = trunc i8 %13 to i1, !dbg !1023
  br i1 %14, label %bb7, label %bb8, !dbg !1023

bb8:                                              ; preds = %bb6
  %15 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1025
  %_12 = load i32, i32* %15, align 8, !dbg !1025
  %_11 = icmp sge i32 %_12, 310, !dbg !1025
  br i1 %_11, label %bb9, label %bb10, !dbg !1025

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1026
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1026
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1026
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1026
  br label %bb53, !dbg !1027

bb53:                                             ; preds = %bb9, %bb7
  br label %bb54, !dbg !1028

bb10:                                             ; preds = %bb8
  store i32 0, i32* %exp2, align 4, !dbg !1030
  br label %bb11, !dbg !1031

bb9:                                              ; preds = %bb8
  %18 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1032
  store i64 %fp_inf.0, i64* %18, align 8, !dbg !1032
  %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1032
  store i32 %fp_inf.1, i32* %19, align 8, !dbg !1032
  br label %bb53, !dbg !1028

bb54:                                             ; preds = %bb52, %bb53
  br label %bb55, !dbg !1033

bb11:                                             ; preds = %bb16, %bb10
  %20 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1034
  %_15 = load i32, i32* %20, align 8, !dbg !1034
  %_14 = icmp sgt i32 %_15, 0, !dbg !1034
  br i1 %_14, label %bb12, label %bb17, !dbg !1034

bb17:                                             ; preds = %bb11
  br label %bb18, !dbg !1035

bb12:                                             ; preds = %bb11
  %21 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1036
  %_17 = load i32, i32* %21, align 8, !dbg !1036
  %n1 = sext i32 %_17 to i64, !dbg !1036
  store i64 %n1, i64* %n.dbg.spill, align 8, !dbg !1036
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !993, metadata !DIExpression()), !dbg !1037
  store i64 %n1, i64* %_20, align 8, !dbg !1038
  %22 = load i64, i64* %_20, align 8, !dbg !1038
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %shift2 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hacbee32165cf28c3E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* nonnull align 1 %get_shift, i64 %22), !dbg !1038
  store i64 %shift2, i64* %shift.dbg.spill, align 8, !dbg !1038
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !995, metadata !DIExpression()), !dbg !1039
  br label %bb13, !dbg !1038

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %shift2), !dbg !1040
  br label %bb14, !dbg !1040

bb14:                                             ; preds = %bb13
  %23 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1041
  %_26 = load i32, i32* %23, align 8, !dbg !1041
  %_25 = icmp slt i32 %_26, -2047, !dbg !1041
  br i1 %_25, label %bb15, label %bb16, !dbg !1041

bb16:                                             ; preds = %bb14
  %_28 = trunc i64 %shift2 to i32, !dbg !1042
  %24 = load i32, i32* %exp2, align 4, !dbg !1043
  %25 = add i32 %24, %_28, !dbg !1043
  store i32 %25, i32* %exp2, align 4, !dbg !1043
  br label %bb11, !dbg !1031

bb15:                                             ; preds = %bb14
  %26 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1044
  store i64 %fp_zero.0, i64* %26, align 8, !dbg !1044
  %27 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1044
  store i32 %fp_zero.1, i32* %27, align 8, !dbg !1044
  br label %bb52, !dbg !1045

bb52:                                             ; preds = %bb47, %bb40, %bb30, %bb15
  br label %bb54, !dbg !1028

bb18:                                             ; preds = %bb31, %bb17
  %28 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1047
  %_31 = load i32, i32* %28, align 8, !dbg !1047
  %_30 = icmp sle i32 %_31, 0, !dbg !1047
  br i1 %_30, label %bb19, label %bb32, !dbg !1047

bb32:                                             ; preds = %bb18
  br label %bb33, !dbg !1045

bb19:                                             ; preds = %bb18
  %29 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1048
  %_33 = load i32, i32* %29, align 8, !dbg !1048
  %30 = icmp eq i32 %_33, 0, !dbg !1048
  br i1 %30, label %bb20, label %bb26, !dbg !1048

bb20:                                             ; preds = %bb19
  %31 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1049
  %digit = getelementptr inbounds [768 x i8], [768 x i8]* %31, i64 0, i64 0, !dbg !1049
  store i8* %digit, i8** %digit.dbg.spill, align 8, !dbg !1049
  call void @llvm.dbg.declare(metadata i8** %digit.dbg.spill, metadata !1001, metadata !DIExpression()), !dbg !1050
  %_38 = load i8, i8* %digit, align 1, !dbg !1051
  %_37 = icmp uge i8 %_38, 5, !dbg !1051
  br i1 %_37, label %bb22, label %bb23, !dbg !1051

bb26:                                             ; preds = %bb19
  %32 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1052
  %_44 = load i32, i32* %32, align 8, !dbg !1052
  %_43 = sub i32 0, %_44, !dbg !1053
  %_42 = sext i32 %_43 to i64, !dbg !1053
  store i64 %_42, i64* %_40, align 8, !dbg !1054
  %33 = load i64, i64* %_40, align 8, !dbg !1054
; call core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
  %34 = call i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hacbee32165cf28c3E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* nonnull align 1 %get_shift, i64 %33), !dbg !1054
  store i64 %34, i64* %shift, align 8, !dbg !1054
  br label %bb27, !dbg !1054

bb27:                                             ; preds = %bb26
  br label %bb28, !dbg !1055

bb28:                                             ; preds = %bb25, %bb27
  %_47 = load i64, i64* %shift, align 8, !dbg !1056
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h1fb9a5e7afe46baaE(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %_47), !dbg !1057
  br label %bb29, !dbg !1057

bb23:                                             ; preds = %bb20
  %35 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1058
  %36 = getelementptr inbounds [768 x i8], [768 x i8]* %35, i64 0, i64 0, !dbg !1058
  %37 = load i8, i8* %36, align 1, !dbg !1058
  switch i8 %37, label %bb21 [
    i8 0, label %bb24
    i8 1, label %bb24
  ], !dbg !1058

bb22:                                             ; preds = %bb20
  %38 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 3, !dbg !1049
  %39 = getelementptr inbounds [768 x i8], [768 x i8]* %38, i64 0, i64 0, !dbg !1049
  %digit3 = load i8, i8* %39, align 1, !dbg !1049
  store i8 %digit3, i8* %digit.dbg.spill4, align 1, !dbg !1049
  call void @llvm.dbg.declare(metadata i8* %digit.dbg.spill4, metadata !999, metadata !DIExpression()), !dbg !1050
  br label %bb33, !dbg !1045

bb33:                                             ; preds = %bb32, %bb22
  %40 = load i32, i32* %exp2, align 4, !dbg !1059
  %41 = sub i32 %40, 1, !dbg !1059
  store i32 %41, i32* %exp2, align 4, !dbg !1059
  br label %bb34, !dbg !1060

bb21:                                             ; preds = %bb23
  store i64 1, i64* %shift, align 8, !dbg !1061
  br label %bb25, !dbg !1061

bb24:                                             ; preds = %bb23, %bb23
  store i64 2, i64* %shift, align 8, !dbg !1062
  br label %bb25, !dbg !1062

bb25:                                             ; preds = %bb24, %bb21
  br label %bb28, !dbg !1055

bb29:                                             ; preds = %bb28
  %42 = getelementptr inbounds %"core::num::dec2flt::decimal::Decimal", %"core::num::dec2flt::decimal::Decimal"* %d, i32 0, i32 1, !dbg !1063
  %_49 = load i32, i32* %42, align 8, !dbg !1063
  %_48 = icmp sgt i32 %_49, 2047, !dbg !1063
  br i1 %_48, label %bb30, label %bb31, !dbg !1063

bb31:                                             ; preds = %bb29
  %_51 = load i64, i64* %shift, align 8, !dbg !1064
  %_50 = trunc i64 %_51 to i32, !dbg !1064
  %43 = load i32, i32* %exp2, align 4, !dbg !1065
  %44 = sub i32 %43, %_50, !dbg !1065
  store i32 %44, i32* %exp2, align 4, !dbg !1065
  br label %bb18, !dbg !1035

bb30:                                             ; preds = %bb29
  %45 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1066
  store i64 %fp_inf.0, i64* %45, align 8, !dbg !1066
  %46 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1066
  store i32 %fp_inf.1, i32* %46, align 8, !dbg !1066
  br label %bb52, !dbg !1045

bb34:                                             ; preds = %bb38, %bb33
  %_54 = load i32, i32* %exp2, align 4, !dbg !1067
  %_52 = icmp sgt i32 -126, %_54, !dbg !1068
  br i1 %_52, label %bb35, label %bb39, !dbg !1068

bb39:                                             ; preds = %bb34
  %_68 = load i32, i32* %exp2, align 4, !dbg !1069
  %_67 = sub i32 %_68, -127, !dbg !1070
  %_66 = icmp sge i32 %_67, 255, !dbg !1070
  br i1 %_66, label %bb40, label %bb41, !dbg !1070

bb35:                                             ; preds = %bb34
  %_58 = load i32, i32* %exp2, align 4, !dbg !1071
  %_56 = sub i32 -126, %_58, !dbg !1072
  %47 = sext i32 %_56 to i64, !dbg !1072
  store i64 %47, i64* %n, align 8, !dbg !1072
  %_60 = load i64, i64* %n, align 8, !dbg !1073
  %_59 = icmp ugt i64 %_60, 60, !dbg !1073
  br i1 %_59, label %bb36, label %bb37, !dbg !1073

bb37:                                             ; preds = %bb36, %bb35
  %_63 = load i64, i64* %n, align 8, !dbg !1074
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 %_63), !dbg !1075
  br label %bb38, !dbg !1075

bb36:                                             ; preds = %bb35
  store i64 60, i64* %n, align 8, !dbg !1076
  br label %bb37, !dbg !1077

bb38:                                             ; preds = %bb37
  %_65 = load i64, i64* %n, align 8, !dbg !1078
  %_64 = trunc i64 %_65 to i32, !dbg !1078
  %48 = load i32, i32* %exp2, align 4, !dbg !1079
  %49 = add i32 %48, %_64, !dbg !1079
  store i32 %49, i32* %exp2, align 4, !dbg !1079
  br label %bb34, !dbg !1060

bb41:                                             ; preds = %bb39
; call core::num::dec2flt::decimal::Decimal::left_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h1fb9a5e7afe46baaE(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 24), !dbg !1080
  br label %bb42, !dbg !1080

bb40:                                             ; preds = %bb39
  %50 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1081
  store i64 %fp_inf.0, i64* %50, align 8, !dbg !1081
  %51 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1081
  store i32 %fp_inf.1, i32* %51, align 8, !dbg !1081
  br label %bb52, !dbg !1045

bb42:                                             ; preds = %bb41
; call core::num::dec2flt::decimal::Decimal::round
  %52 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h43feb4dd3873aaa7E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d), !dbg !1082
  store i64 %52, i64* %mantissa, align 8, !dbg !1082
  br label %bb43, !dbg !1082

bb43:                                             ; preds = %bb42
  %_75 = load i64, i64* %mantissa, align 8, !dbg !1083
  %_74 = icmp uge i64 %_75, 16777216, !dbg !1083
  br i1 %_74, label %bb44, label %bb49, !dbg !1083

bb49:                                             ; preds = %bb48, %bb43
  %_86 = load i32, i32* %exp2, align 4, !dbg !1084
  %53 = sub i32 %_86, -127, !dbg !1084
  store i32 %53, i32* %power2, align 4, !dbg !1084
  %_88 = load i64, i64* %mantissa, align 8, !dbg !1085
  %_87 = icmp ult i64 %_88, 8388608, !dbg !1085
  br i1 %_87, label %bb50, label %bb51, !dbg !1085

bb44:                                             ; preds = %bb43
; call core::num::dec2flt::decimal::Decimal::right_shift
  call void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d, i64 1), !dbg !1086
  br label %bb45, !dbg !1086

bb45:                                             ; preds = %bb44
  %54 = load i32, i32* %exp2, align 4, !dbg !1087
  %55 = add i32 %54, 1, !dbg !1087
  store i32 %55, i32* %exp2, align 4, !dbg !1087
; call core::num::dec2flt::decimal::Decimal::round
  %_80 = call i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h43feb4dd3873aaa7E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784) %d), !dbg !1088
  br label %bb46, !dbg !1088

bb46:                                             ; preds = %bb45
  store i64 %_80, i64* %mantissa, align 8, !dbg !1089
  %_84 = load i32, i32* %exp2, align 4, !dbg !1090
  %_83 = sub i32 %_84, -127, !dbg !1091
  %_82 = icmp sge i32 %_83, 255, !dbg !1091
  br i1 %_82, label %bb47, label %bb48, !dbg !1091

bb48:                                             ; preds = %bb46
  br label %bb49, !dbg !1092

bb47:                                             ; preds = %bb46
  %56 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1093
  store i64 %fp_inf.0, i64* %56, align 8, !dbg !1093
  %57 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1093
  store i32 %fp_inf.1, i32* %57, align 8, !dbg !1093
  br label %bb52, !dbg !1045

bb55:                                             ; preds = %bb51, %bb54
  %58 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !1033
  %59 = load i64, i64* %58, align 8, !dbg !1033
  %60 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1033
  %61 = load i32, i32* %60, align 8, !dbg !1033
  %62 = insertvalue { i64, i32 } undef, i64 %59, 0, !dbg !1033
  %63 = insertvalue { i64, i32 } %62, i32 %61, 1, !dbg !1033
  ret { i64, i32 } %63, !dbg !1033

bb51:                                             ; preds = %bb50, %bb49
  %64 = load i64, i64* %mantissa, align 8, !dbg !1094
  %65 = and i64 %64, 8388607, !dbg !1094
  store i64 %65, i64* %mantissa, align 8, !dbg !1094
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1095
  %_93 = load i32, i32* %power2, align 4, !dbg !1096
  %66 = bitcast { i64, i32 }* %0 to i64*, !dbg !1097
  store i64 %_92, i64* %66, align 8, !dbg !1097
  %67 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !1097
  store i32 %_93, i32* %67, align 8, !dbg !1097
  br label %bb55, !dbg !1033

bb50:                                             ; preds = %bb49
  %68 = load i32, i32* %power2, align 4, !dbg !1098
  %69 = sub i32 %68, 1, !dbg !1098
  store i32 %69, i32* %power2, align 4, !dbg !1098
  br label %bb51, !dbg !1099
}

; core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hacbee32165cf28c3E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* nonnull align 1 %_1, i64 %n) unnamed_addr #0 !dbg !1100 {
start:
  %n.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"*, align 8
  %_6 = alloca [19 x i8], align 1
  %0 = alloca i64, align 8
  store %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"* %_1, %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f32>::{closure#0}]"** %_1.dbg.spill, metadata !1106, metadata !DIExpression()), !dbg !1107
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1105, metadata !DIExpression()), !dbg !1108
  %_3 = icmp ult i64 %n, 19, !dbg !1109
  br i1 %_3, label %bb1, label %bb3, !dbg !1109

bb3:                                              ; preds = %start
  store i64 60, i64* %0, align 8, !dbg !1110
  br label %bb4, !dbg !1111

bb1:                                              ; preds = %start
  %1 = bitcast [19 x i8]* %_6 to i8*, !dbg !1112
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @0, i32 0, i32 0, i32 0), i64 19, i1 false), !dbg !1112
  %_9 = icmp ult i64 %n, 19, !dbg !1112
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !1112
  br i1 %2, label %bb2, label %panic, !dbg !1112

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* %_6, i64 0, i64 %n, !dbg !1112
  %_5 = load i8, i8* %3, align 1, !dbg !1112
  %4 = zext i8 %_5 to i64, !dbg !1112
  store i64 %4, i64* %0, align 8, !dbg !1112
  br label %bb4, !dbg !1111

panic:                                            ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %n, i64 19, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2946 to %"core::panic::Location"*)), !dbg !1112
  unreachable, !dbg !1112

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i64, i64* %0, align 8, !dbg !1113
  ret i64 %5, !dbg !1113
}

; core::num::dec2flt::slow::parse_long_mantissa::{{closure}}
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hbfed245ebaebca70E"(%"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* nonnull align 1 %_1, i64 %n) unnamed_addr #0 !dbg !1114 {
start:
  %n.dbg.spill = alloca i64, align 8
  %_1.dbg.spill = alloca %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"*, align 8
  %_6 = alloca [19 x i8], align 1
  %0 = alloca i64, align 8
  store %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"* %_1, %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@core::num::dec2flt::slow::parse_long_mantissa<f64>::{closure#0}]"** %_1.dbg.spill, metadata !1120, metadata !DIExpression()), !dbg !1121
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1119, metadata !DIExpression()), !dbg !1122
  %_3 = icmp ult i64 %n, 19, !dbg !1123
  br i1 %_3, label %bb1, label %bb3, !dbg !1123

bb3:                                              ; preds = %start
  store i64 60, i64* %0, align 8, !dbg !1124
  br label %bb4, !dbg !1125

bb1:                                              ; preds = %start
  %1 = bitcast [19 x i8]* %_6 to i8*, !dbg !1126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds (<{ [19 x i8] }>, <{ [19 x i8] }>* @0, i32 0, i32 0, i32 0), i64 19, i1 false), !dbg !1126
  %_9 = icmp ult i64 %n, 19, !dbg !1126
  %2 = call i1 @llvm.expect.i1(i1 %_9, i1 true), !dbg !1126
  br i1 %2, label %bb2, label %panic, !dbg !1126

bb2:                                              ; preds = %bb1
  %3 = getelementptr inbounds [19 x i8], [19 x i8]* %_6, i64 0, i64 %n, !dbg !1126
  %_5 = load i8, i8* %3, align 1, !dbg !1126
  %4 = zext i8 %_5 to i64, !dbg !1126
  store i64 %4, i64* %0, align 8, !dbg !1126
  br label %bb4, !dbg !1125

panic:                                            ; preds = %bb1
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %n, i64 19, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2946 to %"core::panic::Location"*)), !dbg !1126
  unreachable, !dbg !1126

bb4:                                              ; preds = %bb3, %bb2
  %5 = load i64, i64* %0, align 8, !dbg !1127
  ret i64 %5, !dbg !1127
}

; core::num::dec2flt::parse::parse_inf_nan
; Function Attrs: nounwind
define { i64, double } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h2ed54d37b5155d4fE([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i1 zeroext %negative) unnamed_addr #1 !dbg !1128 {
start:
  %rest.dbg.spill = alloca i64, align 8
  %negative.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca double, align 8
  %_3 = alloca %"core::option::Option<(f64, usize)>", align 8
  %0 = alloca { i64, double }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1144, metadata !DIExpression()), !dbg !1149
  %3 = zext i1 %negative to i8
  store i8 %3, i8* %negative.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1145, metadata !DIExpression()), !dbg !1150
  call void @llvm.dbg.declare(metadata double* %float, metadata !1146, metadata !DIExpression()), !dbg !1151
; call core::num::dec2flt::parse::parse_partial_inf_nan
  call void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17hb063fb5513d5f9f2E(%"core::option::Option<(f64, usize)>"* noalias nocapture sret(%"core::option::Option<(f64, usize)>") dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !1152
  br label %bb1, !dbg !1152

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to i64*, !dbg !1153
  %_5 = load i64, i64* %4, align 8, !dbg !1153, !range !792
  %5 = icmp eq i64 %_5, 1, !dbg !1153
  br i1 %5, label %bb2, label %bb8, !dbg !1153

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1154
  %7 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %6, i32 0, i32 1, !dbg !1154
  %8 = bitcast { double, i64 }* %7 to double*, !dbg !1154
  %9 = load double, double* %8, align 8, !dbg !1154
  store double %9, double* %float, align 8, !dbg !1154
  %10 = bitcast %"core::option::Option<(f64, usize)>"* %_3 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1155
  %11 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %10, i32 0, i32 1, !dbg !1155
  %12 = getelementptr inbounds { double, i64 }, { double, i64 }* %11, i32 0, i32 1, !dbg !1155
  %rest = load i64, i64* %12, align 8, !dbg !1155
  store i64 %rest, i64* %rest.dbg.spill, align 8, !dbg !1155
  call void @llvm.dbg.declare(metadata i64* %rest.dbg.spill, metadata !1148, metadata !DIExpression()), !dbg !1156
  %_8 = icmp eq i64 %rest, %s.1, !dbg !1157
  br i1 %_8, label %bb3, label %bb7, !dbg !1157

bb8:                                              ; preds = %bb7, %bb1
  %13 = bitcast { i64, double }* %0 to i64*, !dbg !1158
  store i64 0, i64* %13, align 8, !dbg !1158
  br label %bb9, !dbg !1159

bb7:                                              ; preds = %bb2
  br label %bb8, !dbg !1160

bb3:                                              ; preds = %bb2
  br i1 %negative, label %bb4, label %bb6, !dbg !1161

bb6:                                              ; preds = %bb5, %bb3
  %_15 = load double, double* %float, align 8, !dbg !1162
  %14 = bitcast { i64, double }* %0 to %"core::option::Option<f64>::Some"*, !dbg !1163
  %15 = getelementptr inbounds %"core::option::Option<f64>::Some", %"core::option::Option<f64>::Some"* %14, i32 0, i32 1, !dbg !1163
  store double %_15, double* %15, align 8, !dbg !1163
  %16 = bitcast { i64, double }* %0 to i64*, !dbg !1163
  store i64 1, i64* %16, align 8, !dbg !1163
  br label %bb9, !dbg !1159

bb4:                                              ; preds = %bb3
  %_14 = load double, double* %float, align 8, !dbg !1164
; call <f64 as core::ops::arith::Neg>::neg
  %_13 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h725e8e59798aaf5fE"(double %_14), !dbg !1165
  br label %bb5, !dbg !1165

bb5:                                              ; preds = %bb4
  store double %_13, double* %float, align 8, !dbg !1166
  br label %bb6, !dbg !1167

bb9:                                              ; preds = %bb8, %bb6
  %17 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !1159
  %18 = load i64, i64* %17, align 8, !dbg !1159, !range !792
  %19 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !1159
  %20 = load double, double* %19, align 8, !dbg !1159
  %21 = insertvalue { i64, double } undef, i64 %18, 0, !dbg !1159
  %22 = insertvalue { i64, double } %21, double %20, 1, !dbg !1159
  ret { i64, double } %22, !dbg !1159
}

; core::num::dec2flt::parse::parse_inf_nan
; Function Attrs: nounwind
define { i32, float } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h96bd8654992402f6E([0 x i8]* nonnull align 1 %s.0, i64 %s.1, i1 zeroext %negative) unnamed_addr #1 !dbg !1168 {
start:
  %rest.dbg.spill = alloca i64, align 8
  %negative.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca float, align 4
  %_3 = alloca %"core::option::Option<(f32, usize)>", align 8
  %0 = alloca { i32, float }, align 4
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1183, metadata !DIExpression()), !dbg !1188
  %3 = zext i1 %negative to i8
  store i8 %3, i8* %negative.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1184, metadata !DIExpression()), !dbg !1189
  call void @llvm.dbg.declare(metadata float* %float, metadata !1185, metadata !DIExpression()), !dbg !1190
; call core::num::dec2flt::parse::parse_partial_inf_nan
  call void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17ha92addea830f1984E(%"core::option::Option<(f32, usize)>"* noalias nocapture sret(%"core::option::Option<(f32, usize)>") dereferenceable(24) %_3, [0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !1191
  br label %bb1, !dbg !1191

bb1:                                              ; preds = %start
  %4 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to i64*, !dbg !1192
  %_5 = load i64, i64* %4, align 8, !dbg !1192, !range !792
  %5 = icmp eq i64 %_5, 1, !dbg !1192
  br i1 %5, label %bb2, label %bb8, !dbg !1192

bb2:                                              ; preds = %bb1
  %6 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1193
  %7 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %6, i32 0, i32 1, !dbg !1193
  %8 = bitcast { float, i64 }* %7 to float*, !dbg !1193
  %9 = load float, float* %8, align 8, !dbg !1193
  store float %9, float* %float, align 4, !dbg !1193
  %10 = bitcast %"core::option::Option<(f32, usize)>"* %_3 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1194
  %11 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %10, i32 0, i32 1, !dbg !1194
  %12 = getelementptr inbounds { float, i64 }, { float, i64 }* %11, i32 0, i32 1, !dbg !1194
  %rest = load i64, i64* %12, align 8, !dbg !1194
  store i64 %rest, i64* %rest.dbg.spill, align 8, !dbg !1194
  call void @llvm.dbg.declare(metadata i64* %rest.dbg.spill, metadata !1187, metadata !DIExpression()), !dbg !1195
  %_8 = icmp eq i64 %rest, %s.1, !dbg !1196
  br i1 %_8, label %bb3, label %bb7, !dbg !1196

bb8:                                              ; preds = %bb7, %bb1
  %13 = bitcast { i32, float }* %0 to i32*, !dbg !1197
  store i32 0, i32* %13, align 4, !dbg !1197
  br label %bb9, !dbg !1198

bb7:                                              ; preds = %bb2
  br label %bb8, !dbg !1199

bb3:                                              ; preds = %bb2
  br i1 %negative, label %bb4, label %bb6, !dbg !1200

bb6:                                              ; preds = %bb5, %bb3
  %_15 = load float, float* %float, align 4, !dbg !1201
  %14 = bitcast { i32, float }* %0 to %"core::option::Option<f32>::Some"*, !dbg !1202
  %15 = getelementptr inbounds %"core::option::Option<f32>::Some", %"core::option::Option<f32>::Some"* %14, i32 0, i32 1, !dbg !1202
  store float %_15, float* %15, align 4, !dbg !1202
  %16 = bitcast { i32, float }* %0 to i32*, !dbg !1202
  store i32 1, i32* %16, align 4, !dbg !1202
  br label %bb9, !dbg !1198

bb4:                                              ; preds = %bb3
  %_14 = load float, float* %float, align 4, !dbg !1203
; call <f32 as core::ops::arith::Neg>::neg
  %_13 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17h57e55d56d9e42651E"(float %_14), !dbg !1204
  br label %bb5, !dbg !1204

bb5:                                              ; preds = %bb4
  store float %_13, float* %float, align 4, !dbg !1205
  br label %bb6, !dbg !1206

bb9:                                              ; preds = %bb8, %bb6
  %17 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !1198
  %18 = load i32, i32* %17, align 4, !dbg !1198, !range !1207
  %19 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !1198
  %20 = load float, float* %19, align 4, !dbg !1198
  %21 = insertvalue { i32, float } undef, i32 %18, 0, !dbg !1198
  %22 = insertvalue { i32, float } %21, float %20, 1, !dbg !1198
  ret { i32, float } %22, !dbg !1198
}

; core::num::dec2flt::parse::parse_partial_inf_nan
; Function Attrs: nounwind
define void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17ha92addea830f1984E(%"core::option::Option<(f32, usize)>"* noalias nocapture sret(%"core::option::Option<(f32, usize)>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1208 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_16 = alloca { float, i64 }, align 8
  %_10 = alloca { float, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1228, metadata !DIExpression()), !dbg !1229
  %_2 = icmp uge i64 %s.1, 3, !dbg !1230
  br i1 %_2, label %bb1, label %bb9, !dbg !1230

bb9:                                              ; preds = %bb8, %start
  %3 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1231
  store i64 0, i64* %3, align 8, !dbg !1231
  br label %bb11, !dbg !1232

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::ByteSlice::eq_ignore_case
  %_5 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2980 to [0 x i8]*), i64 3), !dbg !1233
  br label %bb2, !dbg !1233

bb2:                                              ; preds = %bb1
  br i1 %_5, label %bb3, label %bb4, !dbg !1233

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::common::ByteSlice::eq_ignore_case
  %_11 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2976 to [0 x i8]*), i64 3), !dbg !1234
  br label %bb5, !dbg !1234

bb3:                                              ; preds = %bb2
  %4 = bitcast { float, i64 }* %_10 to float*, !dbg !1235
  store float 0x7FF8000000000000, float* %4, align 8, !dbg !1235
  %5 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 1, !dbg !1235
  store i64 3, i64* %5, align 8, !dbg !1235
  %6 = bitcast %"core::option::Option<(f32, usize)>"* %0 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1236
  %7 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %6, i32 0, i32 1, !dbg !1236
  %8 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 0, !dbg !1236
  %9 = load float, float* %8, align 8, !dbg !1236
  %10 = getelementptr inbounds { float, i64 }, { float, i64 }* %_10, i32 0, i32 1, !dbg !1236
  %11 = load i64, i64* %10, align 8, !dbg !1236
  %12 = getelementptr inbounds { float, i64 }, { float, i64 }* %7, i32 0, i32 0, !dbg !1236
  store float %9, float* %12, align 8, !dbg !1236
  %13 = getelementptr inbounds { float, i64 }, { float, i64 }* %7, i32 0, i32 1, !dbg !1236
  store i64 %11, i64* %13, align 8, !dbg !1236
  %14 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1236
  store i64 1, i64* %14, align 8, !dbg !1236
  br label %bb10, !dbg !1237

bb10:                                             ; preds = %bb7, %bb3
  br label %bb11, !dbg !1232

bb5:                                              ; preds = %bb4
  br i1 %_11, label %bb6, label %bb8, !dbg !1234

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !1238

bb6:                                              ; preds = %bb5
; call core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
  %_17 = call i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17ha83298bc484b1119E([0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !1239
  br label %bb7, !dbg !1239

bb7:                                              ; preds = %bb6
  %15 = bitcast { float, i64 }* %_16 to float*, !dbg !1240
  store float 0x7FF0000000000000, float* %15, align 8, !dbg !1240
  %16 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 1, !dbg !1240
  store i64 %_17, i64* %16, align 8, !dbg !1240
  %17 = bitcast %"core::option::Option<(f32, usize)>"* %0 to %"core::option::Option<(f32, usize)>::Some"*, !dbg !1241
  %18 = getelementptr inbounds %"core::option::Option<(f32, usize)>::Some", %"core::option::Option<(f32, usize)>::Some"* %17, i32 0, i32 1, !dbg !1241
  %19 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 0, !dbg !1241
  %20 = load float, float* %19, align 8, !dbg !1241
  %21 = getelementptr inbounds { float, i64 }, { float, i64 }* %_16, i32 0, i32 1, !dbg !1241
  %22 = load i64, i64* %21, align 8, !dbg !1241
  %23 = getelementptr inbounds { float, i64 }, { float, i64 }* %18, i32 0, i32 0, !dbg !1241
  store float %20, float* %23, align 8, !dbg !1241
  %24 = getelementptr inbounds { float, i64 }, { float, i64 }* %18, i32 0, i32 1, !dbg !1241
  store i64 %22, i64* %24, align 8, !dbg !1241
  %25 = bitcast %"core::option::Option<(f32, usize)>"* %0 to i64*, !dbg !1241
  store i64 1, i64* %25, align 8, !dbg !1241
  br label %bb10, !dbg !1242

bb11:                                             ; preds = %bb9, %bb10
  ret void, !dbg !1232
}

; core::num::dec2flt::parse::parse_partial_inf_nan
; Function Attrs: nounwind
define void @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17hb063fb5513d5f9f2E(%"core::option::Option<(f64, usize)>"* noalias nocapture sret(%"core::option::Option<(f64, usize)>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1244 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_16 = alloca { double, i64 }, align 8
  %_10 = alloca { double, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1264, metadata !DIExpression()), !dbg !1265
  %_2 = icmp uge i64 %s.1, 3, !dbg !1266
  br i1 %_2, label %bb1, label %bb9, !dbg !1266

bb9:                                              ; preds = %bb8, %start
  %3 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1267
  store i64 0, i64* %3, align 8, !dbg !1267
  br label %bb11, !dbg !1268

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::ByteSlice::eq_ignore_case
  %_5 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2980 to [0 x i8]*), i64 3), !dbg !1269
  br label %bb2, !dbg !1269

bb2:                                              ; preds = %bb1
  br i1 %_5, label %bb3, label %bb4, !dbg !1269

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::common::ByteSlice::eq_ignore_case
  %_11 = call zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE([0 x i8]* nonnull align 1 %s.0, i64 %s.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2976 to [0 x i8]*), i64 3), !dbg !1270
  br label %bb5, !dbg !1270

bb3:                                              ; preds = %bb2
  %4 = bitcast { double, i64 }* %_10 to double*, !dbg !1271
  store double 0x7FF8000000000000, double* %4, align 8, !dbg !1271
  %5 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 1, !dbg !1271
  store i64 3, i64* %5, align 8, !dbg !1271
  %6 = bitcast %"core::option::Option<(f64, usize)>"* %0 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1272
  %7 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %6, i32 0, i32 1, !dbg !1272
  %8 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 0, !dbg !1272
  %9 = load double, double* %8, align 8, !dbg !1272
  %10 = getelementptr inbounds { double, i64 }, { double, i64 }* %_10, i32 0, i32 1, !dbg !1272
  %11 = load i64, i64* %10, align 8, !dbg !1272
  %12 = getelementptr inbounds { double, i64 }, { double, i64 }* %7, i32 0, i32 0, !dbg !1272
  store double %9, double* %12, align 8, !dbg !1272
  %13 = getelementptr inbounds { double, i64 }, { double, i64 }* %7, i32 0, i32 1, !dbg !1272
  store i64 %11, i64* %13, align 8, !dbg !1272
  %14 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1272
  store i64 1, i64* %14, align 8, !dbg !1272
  br label %bb10, !dbg !1273

bb10:                                             ; preds = %bb7, %bb3
  br label %bb11, !dbg !1268

bb5:                                              ; preds = %bb4
  br i1 %_11, label %bb6, label %bb8, !dbg !1270

bb8:                                              ; preds = %bb5
  br label %bb9, !dbg !1274

bb6:                                              ; preds = %bb5
; call core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
  %_17 = call i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17ha83298bc484b1119E([0 x i8]* nonnull align 1 %s.0, i64 %s.1), !dbg !1275
  br label %bb7, !dbg !1275

bb7:                                              ; preds = %bb6
  %15 = bitcast { double, i64 }* %_16 to double*, !dbg !1276
  store double 0x7FF0000000000000, double* %15, align 8, !dbg !1276
  %16 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 1, !dbg !1276
  store i64 %_17, i64* %16, align 8, !dbg !1276
  %17 = bitcast %"core::option::Option<(f64, usize)>"* %0 to %"core::option::Option<(f64, usize)>::Some"*, !dbg !1277
  %18 = getelementptr inbounds %"core::option::Option<(f64, usize)>::Some", %"core::option::Option<(f64, usize)>::Some"* %17, i32 0, i32 1, !dbg !1277
  %19 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 0, !dbg !1277
  %20 = load double, double* %19, align 8, !dbg !1277
  %21 = getelementptr inbounds { double, i64 }, { double, i64 }* %_16, i32 0, i32 1, !dbg !1277
  %22 = load i64, i64* %21, align 8, !dbg !1277
  %23 = getelementptr inbounds { double, i64 }, { double, i64 }* %18, i32 0, i32 0, !dbg !1277
  store double %20, double* %23, align 8, !dbg !1277
  %24 = getelementptr inbounds { double, i64 }, { double, i64 }* %18, i32 0, i32 1, !dbg !1277
  store i64 %22, i64* %24, align 8, !dbg !1277
  %25 = bitcast %"core::option::Option<(f64, usize)>"* %0 to i64*, !dbg !1277
  store i64 1, i64* %25, align 8, !dbg !1277
  br label %bb10, !dbg !1278

bb11:                                             ; preds = %bb9, %bb10
  ret void, !dbg !1268
}

; core::num::dec2flt::<impl core::str::traits::FromStr for f32>::from_str
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17hfddf7cf9edc5ca06E"([0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #0 !dbg !1280 {
start:
  %0 = alloca i64, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f32, core::num::ParseFloatError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !1303, metadata !DIExpression()), !dbg !1304
; call core::num::dec2flt::dec2flt
  %4 = call i64 @_ZN4core3num7dec2flt7dec2flt17h193ae62556cd86b5E([0 x i8]* nonnull align 1 %src.0, i64 %src.1), !dbg !1305
  store i64 %4, i64* %0, align 8, !dbg !1305
  %5 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1305
  %6 = bitcast i64* %0 to i8*, !dbg !1305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !1305
  br label %bb1, !dbg !1305

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i64*, !dbg !1306
  %8 = load i64, i64* %7, align 4, !dbg !1306
  ret i64 %8, !dbg !1306
}

; core::num::dec2flt::<impl core::str::traits::FromStr for f64>::from_str
; Function Attrs: inlinehint nounwind
define internal i128 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17h91e473d99ed96614E"([0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #0 !dbg !1307 {
start:
  %0 = alloca i128, align 8
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f64, core::num::ParseFloatError>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !1325, metadata !DIExpression()), !dbg !1326
; call core::num::dec2flt::dec2flt
  %4 = call i128 @_ZN4core3num7dec2flt7dec2flt17he47d22f84eb69cc7E([0 x i8]* nonnull align 1 %src.0, i64 %src.1), !dbg !1327
  store i128 %4, i128* %0, align 8, !dbg !1327
  %5 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1327
  %6 = bitcast i128* %0 to i8*, !dbg !1327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !1327
  br label %bb1, !dbg !1327

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i128*, !dbg !1328
  %8 = load i128, i128* %7, align 8, !dbg !1328
  ret i128 %8, !dbg !1328
}

; core::num::dec2flt::common::ByteSlice::eq_ignore_case
; Function Attrs: nounwind
define zeroext i1 @_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %u.0, i64 %u.1) unnamed_addr #1 !dbg !1329 {
start:
  %d.dbg.spill = alloca i8, align 1
  %u.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_11 = alloca %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", align 8
  %iter = alloca %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>", align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1335, metadata !DIExpression()), !dbg !1343
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %u.dbg.spill, i32 0, i32 0
  store [0 x i8]* %u.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %u.dbg.spill, i32 0, i32 1
  store i64 %u.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %u.dbg.spill, metadata !1336, metadata !DIExpression()), !dbg !1344
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %iter, metadata !1337, metadata !DIExpression()), !dbg !1345
; call <[T] as core::convert::AsRef<[T]>>::as_ref
  %5 = call { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hf8157f5f8be10685E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !1346
  %_6.0 = extractvalue { [0 x i8]*, i64 } %5, 0, !dbg !1346
  %_6.1 = extractvalue { [0 x i8]*, i64 } %5, 1, !dbg !1346
  br label %bb1, !dbg !1346

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %6 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1), !dbg !1346
  %_4.0 = extractvalue { i8*, i8* } %6, 0, !dbg !1346
  %_4.1 = extractvalue { i8*, i8* } %6, 1, !dbg !1346
  br label %bb2, !dbg !1346

bb2:                                              ; preds = %bb1
; call core::slice::<impl [T]>::iter
  %7 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E"([0 x i8]* nonnull align 1 %u.0, i64 %u.1), !dbg !1347
  %_8.0 = extractvalue { i8*, i8* } %7, 0, !dbg !1347
  %_8.1 = extractvalue { i8*, i8* } %7, 1, !dbg !1347
  br label %bb3, !dbg !1347

bb3:                                              ; preds = %bb2
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17h91c254db5300b4f5E(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %iter, i8* nonnull %_4.0, i8* %_4.1, i8* nonnull %_8.0, i8* %_8.1), !dbg !1346
  br label %bb4, !dbg !1346

bb4:                                              ; preds = %bb3
  %8 = bitcast %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %_11 to i8*, !dbg !1348
  %9 = bitcast %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %iter to i8*, !dbg !1348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 56, i1 false), !dbg !1348
; call core::iter::traits::iterator::Iterator::fold
  %d = call i8 @_ZN4core4iter6traits8iterator8Iterator4fold17h692432889ff703a6E(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture dereferenceable(56) %_11, i8 0), !dbg !1348
  store i8 %d, i8* %d.dbg.spill, align 1, !dbg !1348
  call void @llvm.dbg.declare(metadata i8* %d.dbg.spill, metadata !1339, metadata !DIExpression()), !dbg !1349
  br label %bb5, !dbg !1348

bb5:                                              ; preds = %bb4
  %10 = icmp eq i8 %d, 0, !dbg !1350
  br i1 %10, label %bb6, label %bb7, !dbg !1350

bb6:                                              ; preds = %bb5
  store i8 1, i8* %0, align 1, !dbg !1350
  br label %bb8, !dbg !1350

bb7:                                              ; preds = %bb5
  %_14 = icmp eq i8 %d, 32, !dbg !1351
  %11 = zext i1 %_14 to i8, !dbg !1350
  store i8 %11, i8* %0, align 1, !dbg !1350
  br label %bb8, !dbg !1350

bb8:                                              ; preds = %bb6, %bb7
  %12 = load i8, i8* %0, align 1, !dbg !1352, !range !238
  %13 = trunc i8 %12 to i1, !dbg !1352
  ret i1 %13, !dbg !1352
}

; core::num::dec2flt::common::ByteSlice::eq_ignore_case::{{closure}}
; Function Attrs: inlinehint nounwind
define i8 @"_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h284a14bbaae9f77bE"(%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"* nonnull align 1 %_1, i8 %i, i8* align 1 dereferenceable(1) %_3.0, i8* align 1 dereferenceable(1) %_3.1) unnamed_addr #0 !dbg !1353 {
start:
  %y.dbg.spill = alloca i8, align 1
  %x.dbg.spill = alloca i8, align 1
  %_3.dbg.spill = alloca { i8*, i8* }, align 8
  %i.dbg.spill = alloca i8, align 1
  %_1.dbg.spill = alloca %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"*, align 8
  store %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"* %_1, %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"** %_1.dbg.spill, metadata !1364, metadata !DIExpression()), !dbg !1366
  store i8 %i, i8* %i.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %i.dbg.spill, metadata !1360, metadata !DIExpression()), !dbg !1367
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3.dbg.spill, i32 0, i32 0
  store i8* %_3.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_3.dbg.spill, i32 0, i32 1
  store i8* %_3.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %_3.dbg.spill, metadata !1365, metadata !DIExpression()), !dbg !1368
  %x = load i8, i8* %_3.0, align 1, !dbg !1369
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !1369
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !1361, metadata !DIExpression()), !dbg !1370
  %y = load i8, i8* %_3.1, align 1, !dbg !1371
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !1371
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !1363, metadata !DIExpression()), !dbg !1372
  %_7 = xor i8 %x, %y, !dbg !1373
  %2 = or i8 %i, %_7, !dbg !1374
  ret i8 %2, !dbg !1375
}

; core::num::dec2flt::common::ByteSlice::advance
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17hec4a59ca6211db3bE([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %n) unnamed_addr #1 !dbg !1376 {
start:
  %n.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca i64, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !1380, metadata !DIExpression()), !dbg !1382
  store i64 %n, i64* %n.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %n.dbg.spill, metadata !1381, metadata !DIExpression()), !dbg !1383
; call <[T] as core::convert::AsRef<[T]>>::as_ref
  %2 = call { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hf8157f5f8be10685E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !1384
  %_5.0 = extractvalue { [0 x i8]*, i64 } %2, 0, !dbg !1384
  %_5.1 = extractvalue { [0 x i8]*, i64 } %2, 1, !dbg !1384
  br label %bb1, !dbg !1384

bb1:                                              ; preds = %start
  store i64 %n, i64* %_7, align 8, !dbg !1385
  %3 = load i64, i64* %_7, align 8, !dbg !1384
; call core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
  %4 = call { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h85cbd218e682b1adE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1, i64 %3, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2948 to %"core::panic::Location"*)), !dbg !1384
  %_3.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !1384
  %_3.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !1384
  br label %bb2, !dbg !1384

bb2:                                              ; preds = %bb1
  %5 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !1386
  %6 = insertvalue { [0 x i8]*, i64 } %5, i64 %_3.1, 1, !dbg !1386
  ret { [0 x i8]*, i64 } %6, !dbg !1386
}

; core::num::dec2flt::lemire::compute_float
; Function Attrs: nounwind
define { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hc8859f166756fda8E(i64 %q, i64 %0) unnamed_addr #1 !dbg !1387 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %upperbit.dbg.spill = alloca i32, align 4
  %hi.dbg.spill = alloca i64, align 8
  %lo.dbg.spill = alloca i64, align 8
  %lz.dbg.spill = alloca i32, align 4
  %fp_error.dbg.spill = alloca { i64, i32 }, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %q.dbg.spill = alloca i64, align 8
  %_69 = alloca i8, align 1
  %_68 = alloca i8, align 1
  %_67 = alloca i8, align 1
  %_66 = alloca i8, align 1
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %inside_safe_exponent = alloca i8, align 1
  %_6 = alloca i8, align 1
  %2 = alloca { i64, i32 }, align 8
  %w = alloca i64, align 8
  store i64 %0, i64* %w, align 8
  store i64 %q, i64* %q.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %q.dbg.spill, metadata !1394, metadata !DIExpression()), !dbg !1415
  call void @llvm.dbg.declare(metadata i64* %w, metadata !1395, metadata !DIExpression()), !dbg !1416
  call void @llvm.dbg.declare(metadata i8* %inside_safe_exponent, metadata !1407, metadata !DIExpression()), !dbg !1417
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1411, metadata !DIExpression()), !dbg !1418
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1413, metadata !DIExpression()), !dbg !1419
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 0), !dbg !1420
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1420
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1420
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1420
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1420
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1420
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1420
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1396, metadata !DIExpression()), !dbg !1421
  br label %bb1, !dbg !1420

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 2047), !dbg !1422
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1422
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1422
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1422
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1422
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1422
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1422
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1398, metadata !DIExpression()), !dbg !1423
  br label %bb2, !dbg !1422

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %9 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 -1), !dbg !1424
  %fp_error.0 = extractvalue { i64, i32 } %9, 0, !dbg !1424
  %fp_error.1 = extractvalue { i64, i32 } %9, 1, !dbg !1424
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 0, !dbg !1424
  store i64 %fp_error.0, i64* %10, align 8, !dbg !1424
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 1, !dbg !1424
  store i32 %fp_error.1, i32* %11, align 8, !dbg !1424
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_error.dbg.spill, metadata !1400, metadata !DIExpression()), !dbg !1425
  br label %bb3, !dbg !1424

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %w, align 8, !dbg !1426
  %12 = icmp eq i64 %_7, 0, !dbg !1426
  br i1 %12, label %bb4, label %bb5, !dbg !1426

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_6, align 1, !dbg !1426
  br label %bb6, !dbg !1426

bb5:                                              ; preds = %bb3
  %_8 = icmp slt i64 %q, -342, !dbg !1427
  %13 = zext i1 %_8 to i8, !dbg !1426
  store i8 %13, i8* %_6, align 1, !dbg !1426
  br label %bb6, !dbg !1426

bb6:                                              ; preds = %bb4, %bb5
  %14 = load i8, i8* %_6, align 1, !dbg !1426, !range !238
  %15 = trunc i8 %14 to i1, !dbg !1426
  br i1 %15, label %bb7, label %bb8, !dbg !1426

bb8:                                              ; preds = %bb6
  %_11 = icmp sgt i64 %q, 308, !dbg !1428
  br i1 %_11, label %bb9, label %bb10, !dbg !1428

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1429
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1429
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1429
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1429
  br label %bb47, !dbg !1430

bb47:                                             ; preds = %bb9, %bb7
  br label %bb48, !dbg !1431

bb10:                                             ; preds = %bb8
  %_15 = load i64, i64* %w, align 8, !dbg !1433
  store i64 %_15, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1434, metadata !DIExpression()) #7, !dbg !1439
  %18 = call i64 @llvm.ctlz.i64(i64 %_15, i1 false) #7, !dbg !1441
  store i64 %18, i64* %1, align 8, !dbg !1441
  %_2.i = load i64, i64* %1, align 8, !dbg !1441
  %19 = trunc i64 %_2.i to i32, !dbg !1441
  store i32 %19, i32* %lz.dbg.spill, align 4, !dbg !1433
  call void @llvm.dbg.declare(metadata i32* %lz.dbg.spill, metadata !1402, metadata !DIExpression()), !dbg !1442
  br label %bb11, !dbg !1433

bb9:                                              ; preds = %bb8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1443
  store i64 %fp_inf.0, i64* %20, align 8, !dbg !1443
  %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1443
  store i32 %fp_inf.1, i32* %21, align 8, !dbg !1443
  br label %bb47, !dbg !1431

bb48:                                             ; preds = %bb46, %bb47
  br label %bb49, !dbg !1444

bb11:                                             ; preds = %bb10
  %22 = load i64, i64* %w, align 8, !dbg !1445
  %23 = zext i32 %19 to i64, !dbg !1445
  %24 = and i64 %23, 63, !dbg !1445
  %25 = shl i64 %22, %24, !dbg !1445
  store i64 %25, i64* %w, align 8, !dbg !1445
  %_21 = load i64, i64* %w, align 8, !dbg !1446
; call core::num::dec2flt::lemire::compute_product_approx
  %26 = call { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17hab3e1a80d6151252E(i64 %q, i64 %_21, i64 55), !dbg !1447
  %_19.0 = extractvalue { i64, i64 } %26, 0, !dbg !1447
  %_19.1 = extractvalue { i64, i64 } %26, 1, !dbg !1447
  br label %bb12, !dbg !1447

bb12:                                             ; preds = %bb11
  store i64 %_19.0, i64* %lo.dbg.spill, align 8, !dbg !1448
  call void @llvm.dbg.declare(metadata i64* %lo.dbg.spill, metadata !1404, metadata !DIExpression()), !dbg !1449
  store i64 %_19.1, i64* %hi.dbg.spill, align 8, !dbg !1450
  call void @llvm.dbg.declare(metadata i64* %hi.dbg.spill, metadata !1406, metadata !DIExpression()), !dbg !1451
  %27 = icmp eq i64 %_19.0, -1, !dbg !1452
  br i1 %27, label %bb13, label %bb19, !dbg !1452

bb13:                                             ; preds = %bb12
  %_25 = icmp sge i64 %q, -27, !dbg !1453
  br i1 %_25, label %bb15, label %bb14, !dbg !1453

bb19:                                             ; preds = %bb12
  br label %bb20, !dbg !1454

bb20:                                             ; preds = %bb18, %bb19
  %_32 = lshr i64 %_19.1, 63, !dbg !1455
  %upperbit = trunc i64 %_32 to i32, !dbg !1455
  store i32 %upperbit, i32* %upperbit.dbg.spill, align 4, !dbg !1455
  call void @llvm.dbg.declare(metadata i32* %upperbit.dbg.spill, metadata !1409, metadata !DIExpression()), !dbg !1456
  %_38 = add i32 %upperbit, 64, !dbg !1457
  %_37 = sub i32 %_38, 52, !dbg !1457
  %_36 = sub i32 %_37, 3, !dbg !1458
  %28 = zext i32 %_36 to i64, !dbg !1459
  %29 = and i64 %28, 63, !dbg !1459
  %30 = lshr i64 %_19.1, %29, !dbg !1459
  store i64 %30, i64* %mantissa, align 8, !dbg !1459
  %_45 = trunc i64 %q to i32, !dbg !1460
; call core::num::dec2flt::lemire::power
  %_44 = call i32 @_ZN4core3num7dec2flt6lemire5power17he088a00dd9fef92cE(i32 %_45), !dbg !1461
  br label %bb21, !dbg !1461

bb14:                                             ; preds = %bb13
  store i8 0, i8* %inside_safe_exponent, align 1, !dbg !1453
  br label %bb16, !dbg !1453

bb15:                                             ; preds = %bb13
  %_27 = icmp sle i64 %q, 55, !dbg !1462
  %31 = zext i1 %_27 to i8, !dbg !1453
  store i8 %31, i8* %inside_safe_exponent, align 1, !dbg !1453
  br label %bb16, !dbg !1453

bb16:                                             ; preds = %bb14, %bb15
  %32 = load i8, i8* %inside_safe_exponent, align 1, !dbg !1463, !range !238
  %_30 = trunc i8 %32 to i1, !dbg !1463
  %_29 = xor i1 %_30, true, !dbg !1464
  br i1 %_29, label %bb17, label %bb18, !dbg !1464

bb18:                                             ; preds = %bb16
  br label %bb20, !dbg !1454

bb17:                                             ; preds = %bb16
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1465
  store i64 %fp_error.0, i64* %33, align 8, !dbg !1465
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1465
  store i32 %fp_error.1, i32* %34, align 8, !dbg !1465
  br label %bb46, !dbg !1466

bb46:                                             ; preds = %bb45, %bb17
  br label %bb48, !dbg !1431

bb21:                                             ; preds = %bb20
  %_43 = add i32 %_44, %upperbit, !dbg !1461
  %_42 = sub i32 %_43, %19, !dbg !1461
  %35 = sub i32 %_42, -1023, !dbg !1461
  store i32 %35, i32* %power2, align 4, !dbg !1461
  %_51 = load i32, i32* %power2, align 4, !dbg !1468
  %_50 = icmp sle i32 %_51, 0, !dbg !1468
  br i1 %_50, label %bb22, label %bb25, !dbg !1468

bb25:                                             ; preds = %bb21
  %_70 = icmp ule i64 %_19.0, 1, !dbg !1469
  br i1 %_70, label %bb36, label %bb35, !dbg !1469

bb22:                                             ; preds = %bb21
  %_55 = load i32, i32* %power2, align 4, !dbg !1470
  %_54 = sub i32 0, %_55, !dbg !1471
  %_53 = add i32 %_54, 1, !dbg !1471
  %_52 = icmp sge i32 %_53, 64, !dbg !1471
  br i1 %_52, label %bb23, label %bb24, !dbg !1471

bb24:                                             ; preds = %bb22
  %_58 = load i32, i32* %power2, align 4, !dbg !1472
  %_57 = sub i32 0, %_58, !dbg !1473
  %_56 = add i32 %_57, 1, !dbg !1473
  %36 = load i64, i64* %mantissa, align 8, !dbg !1474
  %37 = zext i32 %_56 to i64, !dbg !1474
  %38 = and i64 %37, 63, !dbg !1474
  %39 = lshr i64 %36, %38, !dbg !1474
  store i64 %39, i64* %mantissa, align 8, !dbg !1474
  %_60 = load i64, i64* %mantissa, align 8, !dbg !1475
  %_59 = and i64 %_60, 1, !dbg !1475
  %40 = load i64, i64* %mantissa, align 8, !dbg !1476
  %41 = add i64 %40, %_59, !dbg !1476
  store i64 %41, i64* %mantissa, align 8, !dbg !1476
  %42 = load i64, i64* %mantissa, align 8, !dbg !1477
  %43 = lshr i64 %42, 1, !dbg !1477
  store i64 %43, i64* %mantissa, align 8, !dbg !1477
  %_62 = load i64, i64* %mantissa, align 8, !dbg !1478
  %_61 = icmp uge i64 %_62, 4503599627370496, !dbg !1479
  %44 = icmp ule i1 %_61, true, !dbg !1480
  call void @llvm.assume(i1 %44), !dbg !1480
  %45 = zext i1 %_61 to i32, !dbg !1480
  store i32 %45, i32* %power2, align 4, !dbg !1480
  %_64 = load i64, i64* %mantissa, align 8, !dbg !1481
  %_65 = load i32, i32* %power2, align 4, !dbg !1482
  %46 = bitcast { i64, i32 }* %2 to i64*, !dbg !1483
  store i64 %_64, i64* %46, align 8, !dbg !1483
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1483
  store i32 %_65, i32* %47, align 8, !dbg !1483
  br label %bb44, !dbg !1484

bb23:                                             ; preds = %bb22
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1485
  store i64 %fp_zero.0, i64* %48, align 8, !dbg !1485
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1485
  store i32 %fp_zero.1, i32* %49, align 8, !dbg !1485
  br label %bb44, !dbg !1486

bb44:                                             ; preds = %bb24, %bb23
  br label %bb45, !dbg !1486

bb45:                                             ; preds = %bb42, %bb44
  br label %bb46, !dbg !1466

bb35:                                             ; preds = %bb25
  store i8 0, i8* %_69, align 1, !dbg !1469
  br label %bb37, !dbg !1469

bb36:                                             ; preds = %bb25
  %_72 = icmp sge i64 %q, -4, !dbg !1488
  %50 = zext i1 %_72 to i8, !dbg !1469
  store i8 %50, i8* %_69, align 1, !dbg !1469
  br label %bb37, !dbg !1469

bb37:                                             ; preds = %bb35, %bb36
  %51 = load i8, i8* %_69, align 1, !dbg !1469, !range !238
  %52 = trunc i8 %51 to i1, !dbg !1469
  br i1 %52, label %bb33, label %bb32, !dbg !1469

bb32:                                             ; preds = %bb37
  store i8 0, i8* %_68, align 1, !dbg !1469
  br label %bb34, !dbg !1469

bb33:                                             ; preds = %bb37
  %_75 = icmp sle i64 %q, 23, !dbg !1489
  %53 = zext i1 %_75 to i8, !dbg !1469
  store i8 %53, i8* %_68, align 1, !dbg !1469
  br label %bb34, !dbg !1469

bb34:                                             ; preds = %bb32, %bb33
  %54 = load i8, i8* %_68, align 1, !dbg !1469, !range !238
  %55 = trunc i8 %54 to i1, !dbg !1469
  br i1 %55, label %bb30, label %bb29, !dbg !1469

bb29:                                             ; preds = %bb34
  store i8 0, i8* %_67, align 1, !dbg !1469
  br label %bb31, !dbg !1469

bb30:                                             ; preds = %bb34
  %_80 = load i64, i64* %mantissa, align 8, !dbg !1490
  %_79 = and i64 %_80, 3, !dbg !1490
  %_78 = icmp eq i64 %_79, 1, !dbg !1490
  %56 = zext i1 %_78 to i8, !dbg !1469
  store i8 %56, i8* %_67, align 1, !dbg !1469
  br label %bb31, !dbg !1469

bb31:                                             ; preds = %bb29, %bb30
  %57 = load i8, i8* %_67, align 1, !dbg !1469, !range !238
  %58 = trunc i8 %57 to i1, !dbg !1469
  br i1 %58, label %bb27, label %bb26, !dbg !1469

bb26:                                             ; preds = %bb31
  store i8 0, i8* %_66, align 1, !dbg !1469
  br label %bb28, !dbg !1469

bb27:                                             ; preds = %bb31
  %_83 = load i64, i64* %mantissa, align 8, !dbg !1491
  %_86 = add i32 %upperbit, 64, !dbg !1492
  %_85 = sub i32 %_86, 52, !dbg !1492
  %_84 = sub i32 %_85, 3, !dbg !1493
  %59 = zext i32 %_84 to i64, !dbg !1494
  %60 = and i64 %59, 63, !dbg !1494
  %_82 = shl i64 %_83, %60, !dbg !1494
  %_81 = icmp eq i64 %_82, %_19.1, !dbg !1494
  %61 = zext i1 %_81 to i8, !dbg !1469
  store i8 %61, i8* %_66, align 1, !dbg !1469
  br label %bb28, !dbg !1469

bb28:                                             ; preds = %bb26, %bb27
  %62 = load i8, i8* %_66, align 1, !dbg !1469, !range !238
  %63 = trunc i8 %62 to i1, !dbg !1469
  br i1 %63, label %bb38, label %bb39, !dbg !1469

bb39:                                             ; preds = %bb38, %bb28
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1495
  %_91 = and i64 %_92, 1, !dbg !1495
  %64 = load i64, i64* %mantissa, align 8, !dbg !1496
  %65 = add i64 %64, %_91, !dbg !1496
  store i64 %65, i64* %mantissa, align 8, !dbg !1496
  %66 = load i64, i64* %mantissa, align 8, !dbg !1497
  %67 = lshr i64 %66, 1, !dbg !1497
  store i64 %67, i64* %mantissa, align 8, !dbg !1497
  %_94 = load i64, i64* %mantissa, align 8, !dbg !1498
  %_93 = icmp uge i64 %_94, 9007199254740992, !dbg !1498
  br i1 %_93, label %bb40, label %bb41, !dbg !1498

bb38:                                             ; preds = %bb28
  %68 = load i64, i64* %mantissa, align 8, !dbg !1499
  %69 = and i64 %68, -2, !dbg !1499
  store i64 %69, i64* %mantissa, align 8, !dbg !1499
  br label %bb39, !dbg !1500

bb41:                                             ; preds = %bb40, %bb39
  %70 = load i64, i64* %mantissa, align 8, !dbg !1501
  %71 = and i64 %70, -4503599627370497, !dbg !1501
  store i64 %71, i64* %mantissa, align 8, !dbg !1501
  %_99 = load i32, i32* %power2, align 4, !dbg !1502
  %_98 = icmp sge i32 %_99, 2047, !dbg !1502
  br i1 %_98, label %bb42, label %bb43, !dbg !1502

bb40:                                             ; preds = %bb39
  store i64 4503599627370496, i64* %mantissa, align 8, !dbg !1503
  %72 = load i32, i32* %power2, align 4, !dbg !1504
  %73 = add i32 %72, 1, !dbg !1504
  store i32 %73, i32* %power2, align 4, !dbg !1504
  br label %bb41, !dbg !1505

bb43:                                             ; preds = %bb41
  %_100 = load i64, i64* %mantissa, align 8, !dbg !1506
  %_101 = load i32, i32* %power2, align 4, !dbg !1507
  %74 = bitcast { i64, i32 }* %2 to i64*, !dbg !1508
  store i64 %_100, i64* %74, align 8, !dbg !1508
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1508
  store i32 %_101, i32* %75, align 8, !dbg !1508
  br label %bb49, !dbg !1444

bb42:                                             ; preds = %bb41
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1509
  store i64 %fp_inf.0, i64* %76, align 8, !dbg !1509
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1509
  store i32 %fp_inf.1, i32* %77, align 8, !dbg !1509
  br label %bb45, !dbg !1486

bb49:                                             ; preds = %bb43, %bb48
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1444
  %79 = load i64, i64* %78, align 8, !dbg !1444
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1444
  %81 = load i32, i32* %80, align 8, !dbg !1444
  %82 = insertvalue { i64, i32 } undef, i64 %79, 0, !dbg !1444
  %83 = insertvalue { i64, i32 } %82, i32 %81, 1, !dbg !1444
  ret { i64, i32 } %83, !dbg !1444
}

; core::num::dec2flt::lemire::compute_float
; Function Attrs: nounwind
define { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hd5e10d6c3cf83fd3E(i64 %q, i64 %0) unnamed_addr #1 !dbg !1510 {
start:
  %1 = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %upperbit.dbg.spill = alloca i32, align 4
  %hi.dbg.spill = alloca i64, align 8
  %lo.dbg.spill = alloca i64, align 8
  %lz.dbg.spill = alloca i32, align 4
  %fp_error.dbg.spill = alloca { i64, i32 }, align 8
  %fp_inf.dbg.spill = alloca { i64, i32 }, align 8
  %fp_zero.dbg.spill = alloca { i64, i32 }, align 8
  %q.dbg.spill = alloca i64, align 8
  %_69 = alloca i8, align 1
  %_68 = alloca i8, align 1
  %_67 = alloca i8, align 1
  %_66 = alloca i8, align 1
  %power2 = alloca i32, align 4
  %mantissa = alloca i64, align 8
  %inside_safe_exponent = alloca i8, align 1
  %_6 = alloca i8, align 1
  %2 = alloca { i64, i32 }, align 8
  %w = alloca i64, align 8
  store i64 %0, i64* %w, align 8
  store i64 %q, i64* %q.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %q.dbg.spill, metadata !1512, metadata !DIExpression()), !dbg !1533
  call void @llvm.dbg.declare(metadata i64* %w, metadata !1513, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.declare(metadata i8* %inside_safe_exponent, metadata !1525, metadata !DIExpression()), !dbg !1535
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !1529, metadata !DIExpression()), !dbg !1536
  call void @llvm.dbg.declare(metadata i32* %power2, metadata !1531, metadata !DIExpression()), !dbg !1537
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %3 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 0), !dbg !1538
  %fp_zero.0 = extractvalue { i64, i32 } %3, 0, !dbg !1538
  %fp_zero.1 = extractvalue { i64, i32 } %3, 1, !dbg !1538
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 0, !dbg !1538
  store i64 %fp_zero.0, i64* %4, align 8, !dbg !1538
  %5 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_zero.dbg.spill, i32 0, i32 1, !dbg !1538
  store i32 %fp_zero.1, i32* %5, align 8, !dbg !1538
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_zero.dbg.spill, metadata !1514, metadata !DIExpression()), !dbg !1539
  br label %bb1, !dbg !1538

bb1:                                              ; preds = %start
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %6 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 255), !dbg !1540
  %fp_inf.0 = extractvalue { i64, i32 } %6, 0, !dbg !1540
  %fp_inf.1 = extractvalue { i64, i32 } %6, 1, !dbg !1540
  %7 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 0, !dbg !1540
  store i64 %fp_inf.0, i64* %7, align 8, !dbg !1540
  %8 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_inf.dbg.spill, i32 0, i32 1, !dbg !1540
  store i32 %fp_inf.1, i32* %8, align 8, !dbg !1540
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_inf.dbg.spill, metadata !1516, metadata !DIExpression()), !dbg !1541
  br label %bb2, !dbg !1540

bb2:                                              ; preds = %bb1
; call core::num::dec2flt::common::BiasedFp::zero_pow2
  %9 = call { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32 -1), !dbg !1542
  %fp_error.0 = extractvalue { i64, i32 } %9, 0, !dbg !1542
  %fp_error.1 = extractvalue { i64, i32 } %9, 1, !dbg !1542
  %10 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 0, !dbg !1542
  store i64 %fp_error.0, i64* %10, align 8, !dbg !1542
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp_error.dbg.spill, i32 0, i32 1, !dbg !1542
  store i32 %fp_error.1, i32* %11, align 8, !dbg !1542
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp_error.dbg.spill, metadata !1518, metadata !DIExpression()), !dbg !1543
  br label %bb3, !dbg !1542

bb3:                                              ; preds = %bb2
  %_7 = load i64, i64* %w, align 8, !dbg !1544
  %12 = icmp eq i64 %_7, 0, !dbg !1544
  br i1 %12, label %bb4, label %bb5, !dbg !1544

bb4:                                              ; preds = %bb3
  store i8 1, i8* %_6, align 1, !dbg !1544
  br label %bb6, !dbg !1544

bb5:                                              ; preds = %bb3
  %_8 = icmp slt i64 %q, -65, !dbg !1545
  %13 = zext i1 %_8 to i8, !dbg !1544
  store i8 %13, i8* %_6, align 1, !dbg !1544
  br label %bb6, !dbg !1544

bb6:                                              ; preds = %bb4, %bb5
  %14 = load i8, i8* %_6, align 1, !dbg !1544, !range !238
  %15 = trunc i8 %14 to i1, !dbg !1544
  br i1 %15, label %bb7, label %bb8, !dbg !1544

bb8:                                              ; preds = %bb6
  %_11 = icmp sgt i64 %q, 38, !dbg !1546
  br i1 %_11, label %bb9, label %bb10, !dbg !1546

bb7:                                              ; preds = %bb6
  %16 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1547
  store i64 %fp_zero.0, i64* %16, align 8, !dbg !1547
  %17 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1547
  store i32 %fp_zero.1, i32* %17, align 8, !dbg !1547
  br label %bb47, !dbg !1548

bb47:                                             ; preds = %bb9, %bb7
  br label %bb48, !dbg !1549

bb10:                                             ; preds = %bb8
  %_15 = load i64, i64* %w, align 8, !dbg !1551
  store i64 %_15, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !1434, metadata !DIExpression()) #7, !dbg !1552
  %18 = call i64 @llvm.ctlz.i64(i64 %_15, i1 false) #7, !dbg !1554
  store i64 %18, i64* %1, align 8, !dbg !1554
  %_2.i = load i64, i64* %1, align 8, !dbg !1554
  %19 = trunc i64 %_2.i to i32, !dbg !1554
  store i32 %19, i32* %lz.dbg.spill, align 4, !dbg !1551
  call void @llvm.dbg.declare(metadata i32* %lz.dbg.spill, metadata !1520, metadata !DIExpression()), !dbg !1555
  br label %bb11, !dbg !1551

bb9:                                              ; preds = %bb8
  %20 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1556
  store i64 %fp_inf.0, i64* %20, align 8, !dbg !1556
  %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1556
  store i32 %fp_inf.1, i32* %21, align 8, !dbg !1556
  br label %bb47, !dbg !1549

bb48:                                             ; preds = %bb46, %bb47
  br label %bb49, !dbg !1557

bb11:                                             ; preds = %bb10
  %22 = load i64, i64* %w, align 8, !dbg !1558
  %23 = zext i32 %19 to i64, !dbg !1558
  %24 = and i64 %23, 63, !dbg !1558
  %25 = shl i64 %22, %24, !dbg !1558
  store i64 %25, i64* %w, align 8, !dbg !1558
  %_21 = load i64, i64* %w, align 8, !dbg !1559
; call core::num::dec2flt::lemire::compute_product_approx
  %26 = call { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17hab3e1a80d6151252E(i64 %q, i64 %_21, i64 26), !dbg !1560
  %_19.0 = extractvalue { i64, i64 } %26, 0, !dbg !1560
  %_19.1 = extractvalue { i64, i64 } %26, 1, !dbg !1560
  br label %bb12, !dbg !1560

bb12:                                             ; preds = %bb11
  store i64 %_19.0, i64* %lo.dbg.spill, align 8, !dbg !1561
  call void @llvm.dbg.declare(metadata i64* %lo.dbg.spill, metadata !1522, metadata !DIExpression()), !dbg !1562
  store i64 %_19.1, i64* %hi.dbg.spill, align 8, !dbg !1563
  call void @llvm.dbg.declare(metadata i64* %hi.dbg.spill, metadata !1524, metadata !DIExpression()), !dbg !1564
  %27 = icmp eq i64 %_19.0, -1, !dbg !1565
  br i1 %27, label %bb13, label %bb19, !dbg !1565

bb13:                                             ; preds = %bb12
  %_25 = icmp sge i64 %q, -27, !dbg !1566
  br i1 %_25, label %bb15, label %bb14, !dbg !1566

bb19:                                             ; preds = %bb12
  br label %bb20, !dbg !1567

bb20:                                             ; preds = %bb18, %bb19
  %_32 = lshr i64 %_19.1, 63, !dbg !1568
  %upperbit = trunc i64 %_32 to i32, !dbg !1568
  store i32 %upperbit, i32* %upperbit.dbg.spill, align 4, !dbg !1568
  call void @llvm.dbg.declare(metadata i32* %upperbit.dbg.spill, metadata !1527, metadata !DIExpression()), !dbg !1569
  %_38 = add i32 %upperbit, 64, !dbg !1570
  %_37 = sub i32 %_38, 23, !dbg !1570
  %_36 = sub i32 %_37, 3, !dbg !1571
  %28 = zext i32 %_36 to i64, !dbg !1572
  %29 = and i64 %28, 63, !dbg !1572
  %30 = lshr i64 %_19.1, %29, !dbg !1572
  store i64 %30, i64* %mantissa, align 8, !dbg !1572
  %_45 = trunc i64 %q to i32, !dbg !1573
; call core::num::dec2flt::lemire::power
  %_44 = call i32 @_ZN4core3num7dec2flt6lemire5power17he088a00dd9fef92cE(i32 %_45), !dbg !1574
  br label %bb21, !dbg !1574

bb14:                                             ; preds = %bb13
  store i8 0, i8* %inside_safe_exponent, align 1, !dbg !1566
  br label %bb16, !dbg !1566

bb15:                                             ; preds = %bb13
  %_27 = icmp sle i64 %q, 55, !dbg !1575
  %31 = zext i1 %_27 to i8, !dbg !1566
  store i8 %31, i8* %inside_safe_exponent, align 1, !dbg !1566
  br label %bb16, !dbg !1566

bb16:                                             ; preds = %bb14, %bb15
  %32 = load i8, i8* %inside_safe_exponent, align 1, !dbg !1576, !range !238
  %_30 = trunc i8 %32 to i1, !dbg !1576
  %_29 = xor i1 %_30, true, !dbg !1577
  br i1 %_29, label %bb17, label %bb18, !dbg !1577

bb18:                                             ; preds = %bb16
  br label %bb20, !dbg !1567

bb17:                                             ; preds = %bb16
  %33 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1578
  store i64 %fp_error.0, i64* %33, align 8, !dbg !1578
  %34 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1578
  store i32 %fp_error.1, i32* %34, align 8, !dbg !1578
  br label %bb46, !dbg !1579

bb46:                                             ; preds = %bb45, %bb17
  br label %bb48, !dbg !1549

bb21:                                             ; preds = %bb20
  %_43 = add i32 %_44, %upperbit, !dbg !1574
  %_42 = sub i32 %_43, %19, !dbg !1574
  %35 = sub i32 %_42, -127, !dbg !1574
  store i32 %35, i32* %power2, align 4, !dbg !1574
  %_51 = load i32, i32* %power2, align 4, !dbg !1581
  %_50 = icmp sle i32 %_51, 0, !dbg !1581
  br i1 %_50, label %bb22, label %bb25, !dbg !1581

bb25:                                             ; preds = %bb21
  %_70 = icmp ule i64 %_19.0, 1, !dbg !1582
  br i1 %_70, label %bb36, label %bb35, !dbg !1582

bb22:                                             ; preds = %bb21
  %_55 = load i32, i32* %power2, align 4, !dbg !1583
  %_54 = sub i32 0, %_55, !dbg !1584
  %_53 = add i32 %_54, 1, !dbg !1584
  %_52 = icmp sge i32 %_53, 64, !dbg !1584
  br i1 %_52, label %bb23, label %bb24, !dbg !1584

bb24:                                             ; preds = %bb22
  %_58 = load i32, i32* %power2, align 4, !dbg !1585
  %_57 = sub i32 0, %_58, !dbg !1586
  %_56 = add i32 %_57, 1, !dbg !1586
  %36 = load i64, i64* %mantissa, align 8, !dbg !1587
  %37 = zext i32 %_56 to i64, !dbg !1587
  %38 = and i64 %37, 63, !dbg !1587
  %39 = lshr i64 %36, %38, !dbg !1587
  store i64 %39, i64* %mantissa, align 8, !dbg !1587
  %_60 = load i64, i64* %mantissa, align 8, !dbg !1588
  %_59 = and i64 %_60, 1, !dbg !1588
  %40 = load i64, i64* %mantissa, align 8, !dbg !1589
  %41 = add i64 %40, %_59, !dbg !1589
  store i64 %41, i64* %mantissa, align 8, !dbg !1589
  %42 = load i64, i64* %mantissa, align 8, !dbg !1590
  %43 = lshr i64 %42, 1, !dbg !1590
  store i64 %43, i64* %mantissa, align 8, !dbg !1590
  %_62 = load i64, i64* %mantissa, align 8, !dbg !1591
  %_61 = icmp uge i64 %_62, 8388608, !dbg !1592
  %44 = icmp ule i1 %_61, true, !dbg !1593
  call void @llvm.assume(i1 %44), !dbg !1593
  %45 = zext i1 %_61 to i32, !dbg !1593
  store i32 %45, i32* %power2, align 4, !dbg !1593
  %_64 = load i64, i64* %mantissa, align 8, !dbg !1594
  %_65 = load i32, i32* %power2, align 4, !dbg !1595
  %46 = bitcast { i64, i32 }* %2 to i64*, !dbg !1596
  store i64 %_64, i64* %46, align 8, !dbg !1596
  %47 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1596
  store i32 %_65, i32* %47, align 8, !dbg !1596
  br label %bb44, !dbg !1597

bb23:                                             ; preds = %bb22
  %48 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1598
  store i64 %fp_zero.0, i64* %48, align 8, !dbg !1598
  %49 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1598
  store i32 %fp_zero.1, i32* %49, align 8, !dbg !1598
  br label %bb44, !dbg !1599

bb44:                                             ; preds = %bb24, %bb23
  br label %bb45, !dbg !1599

bb45:                                             ; preds = %bb42, %bb44
  br label %bb46, !dbg !1579

bb35:                                             ; preds = %bb25
  store i8 0, i8* %_69, align 1, !dbg !1582
  br label %bb37, !dbg !1582

bb36:                                             ; preds = %bb25
  %_72 = icmp sge i64 %q, -17, !dbg !1601
  %50 = zext i1 %_72 to i8, !dbg !1582
  store i8 %50, i8* %_69, align 1, !dbg !1582
  br label %bb37, !dbg !1582

bb37:                                             ; preds = %bb35, %bb36
  %51 = load i8, i8* %_69, align 1, !dbg !1582, !range !238
  %52 = trunc i8 %51 to i1, !dbg !1582
  br i1 %52, label %bb33, label %bb32, !dbg !1582

bb32:                                             ; preds = %bb37
  store i8 0, i8* %_68, align 1, !dbg !1582
  br label %bb34, !dbg !1582

bb33:                                             ; preds = %bb37
  %_75 = icmp sle i64 %q, 10, !dbg !1602
  %53 = zext i1 %_75 to i8, !dbg !1582
  store i8 %53, i8* %_68, align 1, !dbg !1582
  br label %bb34, !dbg !1582

bb34:                                             ; preds = %bb32, %bb33
  %54 = load i8, i8* %_68, align 1, !dbg !1582, !range !238
  %55 = trunc i8 %54 to i1, !dbg !1582
  br i1 %55, label %bb30, label %bb29, !dbg !1582

bb29:                                             ; preds = %bb34
  store i8 0, i8* %_67, align 1, !dbg !1582
  br label %bb31, !dbg !1582

bb30:                                             ; preds = %bb34
  %_80 = load i64, i64* %mantissa, align 8, !dbg !1603
  %_79 = and i64 %_80, 3, !dbg !1603
  %_78 = icmp eq i64 %_79, 1, !dbg !1603
  %56 = zext i1 %_78 to i8, !dbg !1582
  store i8 %56, i8* %_67, align 1, !dbg !1582
  br label %bb31, !dbg !1582

bb31:                                             ; preds = %bb29, %bb30
  %57 = load i8, i8* %_67, align 1, !dbg !1582, !range !238
  %58 = trunc i8 %57 to i1, !dbg !1582
  br i1 %58, label %bb27, label %bb26, !dbg !1582

bb26:                                             ; preds = %bb31
  store i8 0, i8* %_66, align 1, !dbg !1582
  br label %bb28, !dbg !1582

bb27:                                             ; preds = %bb31
  %_83 = load i64, i64* %mantissa, align 8, !dbg !1604
  %_86 = add i32 %upperbit, 64, !dbg !1605
  %_85 = sub i32 %_86, 23, !dbg !1605
  %_84 = sub i32 %_85, 3, !dbg !1606
  %59 = zext i32 %_84 to i64, !dbg !1607
  %60 = and i64 %59, 63, !dbg !1607
  %_82 = shl i64 %_83, %60, !dbg !1607
  %_81 = icmp eq i64 %_82, %_19.1, !dbg !1607
  %61 = zext i1 %_81 to i8, !dbg !1582
  store i8 %61, i8* %_66, align 1, !dbg !1582
  br label %bb28, !dbg !1582

bb28:                                             ; preds = %bb26, %bb27
  %62 = load i8, i8* %_66, align 1, !dbg !1582, !range !238
  %63 = trunc i8 %62 to i1, !dbg !1582
  br i1 %63, label %bb38, label %bb39, !dbg !1582

bb39:                                             ; preds = %bb38, %bb28
  %_92 = load i64, i64* %mantissa, align 8, !dbg !1608
  %_91 = and i64 %_92, 1, !dbg !1608
  %64 = load i64, i64* %mantissa, align 8, !dbg !1609
  %65 = add i64 %64, %_91, !dbg !1609
  store i64 %65, i64* %mantissa, align 8, !dbg !1609
  %66 = load i64, i64* %mantissa, align 8, !dbg !1610
  %67 = lshr i64 %66, 1, !dbg !1610
  store i64 %67, i64* %mantissa, align 8, !dbg !1610
  %_94 = load i64, i64* %mantissa, align 8, !dbg !1611
  %_93 = icmp uge i64 %_94, 16777216, !dbg !1611
  br i1 %_93, label %bb40, label %bb41, !dbg !1611

bb38:                                             ; preds = %bb28
  %68 = load i64, i64* %mantissa, align 8, !dbg !1612
  %69 = and i64 %68, -2, !dbg !1612
  store i64 %69, i64* %mantissa, align 8, !dbg !1612
  br label %bb39, !dbg !1613

bb41:                                             ; preds = %bb40, %bb39
  %70 = load i64, i64* %mantissa, align 8, !dbg !1614
  %71 = and i64 %70, -8388609, !dbg !1614
  store i64 %71, i64* %mantissa, align 8, !dbg !1614
  %_99 = load i32, i32* %power2, align 4, !dbg !1615
  %_98 = icmp sge i32 %_99, 255, !dbg !1615
  br i1 %_98, label %bb42, label %bb43, !dbg !1615

bb40:                                             ; preds = %bb39
  store i64 8388608, i64* %mantissa, align 8, !dbg !1616
  %72 = load i32, i32* %power2, align 4, !dbg !1617
  %73 = add i32 %72, 1, !dbg !1617
  store i32 %73, i32* %power2, align 4, !dbg !1617
  br label %bb41, !dbg !1618

bb43:                                             ; preds = %bb41
  %_100 = load i64, i64* %mantissa, align 8, !dbg !1619
  %_101 = load i32, i32* %power2, align 4, !dbg !1620
  %74 = bitcast { i64, i32 }* %2 to i64*, !dbg !1621
  store i64 %_100, i64* %74, align 8, !dbg !1621
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1621
  store i32 %_101, i32* %75, align 8, !dbg !1621
  br label %bb49, !dbg !1557

bb42:                                             ; preds = %bb41
  %76 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1622
  store i64 %fp_inf.0, i64* %76, align 8, !dbg !1622
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1622
  store i32 %fp_inf.1, i32* %77, align 8, !dbg !1622
  br label %bb45, !dbg !1599

bb49:                                             ; preds = %bb43, %bb48
  %78 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 0, !dbg !1557
  %79 = load i64, i64* %78, align 8, !dbg !1557
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %2, i32 0, i32 1, !dbg !1557
  %81 = load i32, i32* %80, align 8, !dbg !1557
  %82 = insertvalue { i64, i32 } undef, i64 %79, 0, !dbg !1557
  %83 = insertvalue { i64, i32 } %82, i32 %81, 1, !dbg !1557
  ret { i64, i32 } %83, !dbg !1557
}

; core::num::dec2flt::number::Number::is_fast_path
; Function Attrs: nounwind
define zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17h8016bb15f1584968E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !1623 {
start:
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1636, metadata !DIExpression()), !dbg !1637
  %1 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1638
  %_5 = load i64, i64* %1, align 8, !dbg !1638
  %_4 = icmp sle i64 -10, %_5, !dbg !1639
  br i1 %_4, label %bb8, label %bb7, !dbg !1639

bb7:                                              ; preds = %start
  store i8 0, i8* %_3, align 1, !dbg !1639
  br label %bb9, !dbg !1639

bb8:                                              ; preds = %start
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1640
  %_7 = load i64, i64* %2, align 8, !dbg !1640
  %_6 = icmp sle i64 %_7, 17, !dbg !1640
  %3 = zext i1 %_6 to i8, !dbg !1639
  store i8 %3, i8* %_3, align 1, !dbg !1639
  br label %bb9, !dbg !1639

bb9:                                              ; preds = %bb7, %bb8
  %4 = load i8, i8* %_3, align 1, !dbg !1639, !range !238
  %5 = trunc i8 %4 to i1, !dbg !1639
  br i1 %5, label %bb5, label %bb4, !dbg !1639

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_2, align 1, !dbg !1639
  br label %bb6, !dbg !1639

bb5:                                              ; preds = %bb9
  %6 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1641
  %_9 = load i64, i64* %6, align 8, !dbg !1641
  %_8 = icmp ule i64 %_9, 16777216, !dbg !1641
  %7 = zext i1 %_8 to i8, !dbg !1639
  store i8 %7, i8* %_2, align 1, !dbg !1639
  br label %bb6, !dbg !1639

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %_2, align 1, !dbg !1639, !range !238
  %9 = trunc i8 %8 to i1, !dbg !1639
  br i1 %9, label %bb2, label %bb1, !dbg !1639

bb1:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1, !dbg !1639
  br label %bb3, !dbg !1639

bb2:                                              ; preds = %bb6
  %10 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 3, !dbg !1642
  %11 = load i8, i8* %10, align 1, !dbg !1642, !range !238
  %_11 = trunc i8 %11 to i1, !dbg !1642
  %_10 = xor i1 %_11, true, !dbg !1643
  %12 = zext i1 %_10 to i8, !dbg !1639
  store i8 %12, i8* %0, align 1, !dbg !1639
  br label %bb3, !dbg !1639

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %0, align 1, !dbg !1644, !range !238
  %14 = trunc i8 %13 to i1, !dbg !1644
  ret i1 %14, !dbg !1644
}

; core::num::dec2flt::number::Number::is_fast_path
; Function Attrs: nounwind
define zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hacbc41360462ff4eE(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !1645 {
start:
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_3 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %0 = alloca i8, align 1
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1647, metadata !DIExpression()), !dbg !1648
  %1 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1649
  %_5 = load i64, i64* %1, align 8, !dbg !1649
  %_4 = icmp sle i64 -22, %_5, !dbg !1650
  br i1 %_4, label %bb8, label %bb7, !dbg !1650

bb7:                                              ; preds = %start
  store i8 0, i8* %_3, align 1, !dbg !1650
  br label %bb9, !dbg !1650

bb8:                                              ; preds = %start
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1651
  %_7 = load i64, i64* %2, align 8, !dbg !1651
  %_6 = icmp sle i64 %_7, 37, !dbg !1651
  %3 = zext i1 %_6 to i8, !dbg !1650
  store i8 %3, i8* %_3, align 1, !dbg !1650
  br label %bb9, !dbg !1650

bb9:                                              ; preds = %bb7, %bb8
  %4 = load i8, i8* %_3, align 1, !dbg !1650, !range !238
  %5 = trunc i8 %4 to i1, !dbg !1650
  br i1 %5, label %bb5, label %bb4, !dbg !1650

bb4:                                              ; preds = %bb9
  store i8 0, i8* %_2, align 1, !dbg !1650
  br label %bb6, !dbg !1650

bb5:                                              ; preds = %bb9
  %6 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1652
  %_9 = load i64, i64* %6, align 8, !dbg !1652
  %_8 = icmp ule i64 %_9, 9007199254740992, !dbg !1652
  %7 = zext i1 %_8 to i8, !dbg !1650
  store i8 %7, i8* %_2, align 1, !dbg !1650
  br label %bb6, !dbg !1650

bb6:                                              ; preds = %bb4, %bb5
  %8 = load i8, i8* %_2, align 1, !dbg !1650, !range !238
  %9 = trunc i8 %8 to i1, !dbg !1650
  br i1 %9, label %bb2, label %bb1, !dbg !1650

bb1:                                              ; preds = %bb6
  store i8 0, i8* %0, align 1, !dbg !1650
  br label %bb3, !dbg !1650

bb2:                                              ; preds = %bb6
  %10 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 3, !dbg !1653
  %11 = load i8, i8* %10, align 1, !dbg !1653, !range !238
  %_11 = trunc i8 %11 to i1, !dbg !1653
  %_10 = xor i1 %_11, true, !dbg !1654
  %12 = zext i1 %_10 to i8, !dbg !1650
  store i8 %12, i8* %0, align 1, !dbg !1650
  br label %bb3, !dbg !1650

bb3:                                              ; preds = %bb1, %bb2
  %13 = load i8, i8* %0, align 1, !dbg !1655, !range !238
  %14 = trunc i8 %13 to i1, !dbg !1655
  ret i1 %14, !dbg !1655
}

; core::num::dec2flt::number::Number::try_fast_path
; Function Attrs: nounwind
define { i64, double } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hbd6181af72375dd5E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !1656 {
start:
  %mantissa.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %shift.dbg.spill = alloca i64, align 8
  %value.dbg.spill = alloca double, align 8
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_cw.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_30 = alloca [16 x i64], align 8
  %_26 = alloca { i64, i64 }, align 8
  %value = alloca double, align 8
  %0 = alloca { i64, double }, align 8
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1660, metadata !DIExpression()), !dbg !1675
  call void @llvm.dbg.declare(metadata {}* %_cw.dbg.spill, metadata !1661, metadata !DIExpression()), !dbg !1676
  call void @llvm.dbg.declare(metadata double* %value, metadata !1663, metadata !DIExpression()), !dbg !1677
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !1671, metadata !DIExpression()), !dbg !1678
; call core::num::dec2flt::fpu::fpu_precision::set_precision
  call void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h678315491519b81dE(), !dbg !1679
  br label %bb1, !dbg !1679

bb1:                                              ; preds = %start
; call core::num::dec2flt::number::Number::is_fast_path
  %_3 = call zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17hacbc41360462ff4eE(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self), !dbg !1680
  br label %bb2, !dbg !1680

bb2:                                              ; preds = %bb1
  br i1 %_3, label %bb3, label %bb30, !dbg !1680

bb30:                                             ; preds = %bb2
  %1 = bitcast { i64, double }* %0 to i64*, !dbg !1681
  store i64 0, i64* %1, align 8, !dbg !1681
  br label %bb31, !dbg !1682

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1683
  %_7 = load i64, i64* %2, align 8, !dbg !1683
  %_6 = icmp sle i64 %_7, 22, !dbg !1683
  br i1 %_6, label %bb4, label %bb13, !dbg !1683

bb13:                                             ; preds = %bb3
  %3 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1684
  %_24 = load i64, i64* %3, align 8, !dbg !1684
  %shift = sub i64 %_24, 22, !dbg !1684
  store i64 %shift, i64* %shift.dbg.spill, align 8, !dbg !1684
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !1667, metadata !DIExpression()), !dbg !1685
  %4 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1686
  %_28 = load i64, i64* %4, align 8, !dbg !1686
  %5 = bitcast [16 x i64]* %_30 to i8*, !dbg !1687
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 getelementptr inbounds (<{ [128 x i8] }>, <{ [128 x i8] }>* @1, i32 0, i32 0, i32 0), i64 128, i1 false), !dbg !1687
  %_34 = icmp ult i64 %shift, 16, !dbg !1687
  %6 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !1687
  br i1 %6, label %bb14, label %panic, !dbg !1687

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1688
  %_9 = load i64, i64* %7, align 8, !dbg !1688
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64
  %value1 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4be8590774404ca3E"(i64 %_9), !dbg !1689
  store double %value1, double* %value.dbg.spill, align 8, !dbg !1689
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill, metadata !1665, metadata !DIExpression()), !dbg !1690
  br label %bb5, !dbg !1689

bb5:                                              ; preds = %bb4
  %8 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1691
  %_11 = load i64, i64* %8, align 8, !dbg !1691
  %_10 = icmp slt i64 %_11, 0, !dbg !1691
  br i1 %_10, label %bb6, label %bb9, !dbg !1691

bb9:                                              ; preds = %bb5
  %9 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1692
  %_22 = load i64, i64* %9, align 8, !dbg !1692
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_19 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h02354e6c97ec916bE"(i64 %_22), !dbg !1693
  br label %bb10, !dbg !1693

bb6:                                              ; preds = %bb5
  %10 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1694
  %_17 = load i64, i64* %10, align 8, !dbg !1694
  %_16 = sub i64 0, %_17, !dbg !1695
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_13 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h02354e6c97ec916bE"(i64 %_16), !dbg !1696
  br label %bb7, !dbg !1696

bb7:                                              ; preds = %bb6
; call <f64 as core::ops::arith::Div>::div
  %11 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h3f3cf0a934854f68E"(double %value1, double %_13), !dbg !1697
  store double %11, double* %value, align 8, !dbg !1697
  br label %bb8, !dbg !1697

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !1698

bb12:                                             ; preds = %bb11, %bb8
  br label %bb26, !dbg !1699

bb10:                                             ; preds = %bb9
; call <f64 as core::ops::arith::Mul>::mul
  %12 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17hbd1481c8bcbc57e1E"(double %value1, double %_19), !dbg !1700
  store double %12, double* %value, align 8, !dbg !1700
  br label %bb11, !dbg !1700

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !1698

bb26:                                             ; preds = %bb25, %bb12
  %13 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 2, !dbg !1701
  %14 = load i8, i8* %13, align 8, !dbg !1701, !range !238
  %_46 = trunc i8 %14 to i1, !dbg !1701
  br i1 %_46, label %bb27, label %bb29, !dbg !1701

bb14:                                             ; preds = %bb13
  %15 = getelementptr inbounds [16 x i64], [16 x i64]* %_30, i64 0, i64 %shift, !dbg !1687
  %_29 = load i64, i64* %15, align 8, !dbg !1687
; call core::num::<impl u64>::checked_mul
  %16 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h4cf3e0f6afebc40eE"(i64 %_28, i64 %_29), !dbg !1686
  %_27.0 = extractvalue { i64, i64 } %16, 0, !dbg !1686
  %_27.1 = extractvalue { i64, i64 } %16, 1, !dbg !1686
  br label %bb15, !dbg !1686

panic:                                            ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %shift, i64 16, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2950 to %"core::panic::Location"*)), !dbg !1687
  unreachable, !dbg !1687

bb15:                                             ; preds = %bb14
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %17 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h833feb00c42a4ac7E"(i64 %_27.0, i64 %_27.1), !dbg !1686
  store { i64, i64 } %17, { i64, i64 }* %_26, align 8, !dbg !1686
  br label %bb16, !dbg !1686

bb16:                                             ; preds = %bb15
  %18 = bitcast { i64, i64 }* %_26 to i64*, !dbg !1686
  %_35 = load i64, i64* %18, align 8, !dbg !1686, !range !792
  switch i64 %_35, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !1686

bb18:                                             ; preds = %bb16
  unreachable, !dbg !1686

bb17:                                             ; preds = %bb16
  %19 = bitcast { i64, i64 }* %_26 to %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"*, !dbg !1686
  %20 = getelementptr inbounds %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue", %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"* %19, i32 0, i32 1, !dbg !1686
  %val = load i64, i64* %20, align 8, !dbg !1686
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1686
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1673, metadata !DIExpression()), !dbg !1702
  store i64 %val, i64* %mantissa.dbg.spill, align 8, !dbg !1702
  call void @llvm.dbg.declare(metadata i64* %mantissa.dbg.spill, metadata !1669, metadata !DIExpression()), !dbg !1703
  %_39 = icmp ugt i64 %val, 9007199254740992, !dbg !1704
  br i1 %_39, label %bb21, label %bb22, !dbg !1704

bb19:                                             ; preds = %bb16
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %21 = call { i64, double } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hcd31cae4291415daE"(), !dbg !1705
  store { i64, double } %21, { i64, double }* %0, align 8, !dbg !1705
  br label %bb20, !dbg !1705

bb20:                                             ; preds = %bb19
  br label %bb32, !dbg !1706

bb32:                                             ; preds = %bb21, %bb20
  br label %bb33, !dbg !1708

bb22:                                             ; preds = %bb17
; call <f64 as core::num::dec2flt::float::RawFloat>::from_u64
  %_41 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4be8590774404ca3E"(i64 %val), !dbg !1709
  br label %bb23, !dbg !1709

bb21:                                             ; preds = %bb17
  %22 = bitcast { i64, double }* %0 to i64*, !dbg !1710
  store i64 0, i64* %22, align 8, !dbg !1710
  br label %bb32, !dbg !1711

bb33:                                             ; preds = %bb31, %bb32
  %23 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !1708
  %24 = load i64, i64* %23, align 8, !dbg !1708, !range !792
  %25 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !1708
  %26 = load double, double* %25, align 8, !dbg !1708
  %27 = insertvalue { i64, double } undef, i64 %24, 0, !dbg !1708
  %28 = insertvalue { i64, double } %27, double %26, 1, !dbg !1708
  ret { i64, double } %28, !dbg !1708

bb23:                                             ; preds = %bb22
; call <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_43 = call double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h02354e6c97ec916bE"(i64 22), !dbg !1713
  br label %bb24, !dbg !1713

bb24:                                             ; preds = %bb23
; call <f64 as core::ops::arith::Mul>::mul
  %29 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17hbd1481c8bcbc57e1E"(double %_41, double %_43), !dbg !1709
  store double %29, double* %value, align 8, !dbg !1709
  br label %bb25, !dbg !1709

bb25:                                             ; preds = %bb24
  br label %bb26, !dbg !1699

bb29:                                             ; preds = %bb28, %bb26
  %_49 = load double, double* %value, align 8, !dbg !1714
  %30 = bitcast { i64, double }* %0 to %"core::option::Option<f64>::Some"*, !dbg !1715
  %31 = getelementptr inbounds %"core::option::Option<f64>::Some", %"core::option::Option<f64>::Some"* %30, i32 0, i32 1, !dbg !1715
  store double %_49, double* %31, align 8, !dbg !1715
  %32 = bitcast { i64, double }* %0 to i64*, !dbg !1715
  store i64 1, i64* %32, align 8, !dbg !1715
  br label %bb31, !dbg !1682

bb27:                                             ; preds = %bb26
  %_48 = load double, double* %value, align 8, !dbg !1716
; call <f64 as core::ops::arith::Neg>::neg
  %_47 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h725e8e59798aaf5fE"(double %_48), !dbg !1717
  br label %bb28, !dbg !1717

bb28:                                             ; preds = %bb27
  store double %_47, double* %value, align 8, !dbg !1718
  br label %bb29, !dbg !1719

bb31:                                             ; preds = %bb30, %bb29
  br label %bb33, !dbg !1708
}

; core::num::dec2flt::number::Number::try_fast_path
; Function Attrs: nounwind
define { i32, float } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hc8d65b680acba754E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !1720 {
start:
  %mantissa.dbg.spill = alloca i64, align 8
  %val.dbg.spill = alloca i64, align 8
  %shift.dbg.spill = alloca i64, align 8
  %value.dbg.spill = alloca float, align 4
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %_cw.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::num::dec2flt::number::Number"*, align 8
  %_30 = alloca [16 x i64], align 8
  %_26 = alloca { i64, i64 }, align 8
  %value = alloca float, align 4
  %0 = alloca { i32, float }, align 4
  store %"core::num::dec2flt::number::Number"* %self, %"core::num::dec2flt::number::Number"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"** %self.dbg.spill, metadata !1724, metadata !DIExpression()), !dbg !1739
  call void @llvm.dbg.declare(metadata {}* %_cw.dbg.spill, metadata !1725, metadata !DIExpression()), !dbg !1740
  call void @llvm.dbg.declare(metadata float* %value, metadata !1727, metadata !DIExpression()), !dbg !1741
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !1735, metadata !DIExpression()), !dbg !1742
; call core::num::dec2flt::fpu::fpu_precision::set_precision
  call void @_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h574ca4041d6482d6E(), !dbg !1743
  br label %bb1, !dbg !1743

bb1:                                              ; preds = %start
; call core::num::dec2flt::number::Number::is_fast_path
  %_3 = call zeroext i1 @_ZN4core3num7dec2flt6number6Number12is_fast_path17h8016bb15f1584968E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %self), !dbg !1744
  br label %bb2, !dbg !1744

bb2:                                              ; preds = %bb1
  br i1 %_3, label %bb3, label %bb30, !dbg !1744

bb30:                                             ; preds = %bb2
  %1 = bitcast { i32, float }* %0 to i32*, !dbg !1745
  store i32 0, i32* %1, align 4, !dbg !1745
  br label %bb31, !dbg !1746

bb3:                                              ; preds = %bb2
  %2 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1747
  %_7 = load i64, i64* %2, align 8, !dbg !1747
  %_6 = icmp sle i64 %_7, 10, !dbg !1747
  br i1 %_6, label %bb4, label %bb13, !dbg !1747

bb13:                                             ; preds = %bb3
  %3 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1748
  %_24 = load i64, i64* %3, align 8, !dbg !1748
  %shift = sub i64 %_24, 10, !dbg !1748
  store i64 %shift, i64* %shift.dbg.spill, align 8, !dbg !1748
  call void @llvm.dbg.declare(metadata i64* %shift.dbg.spill, metadata !1731, metadata !DIExpression()), !dbg !1749
  %4 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1750
  %_28 = load i64, i64* %4, align 8, !dbg !1750
  %5 = bitcast [16 x i64]* %_30 to i8*, !dbg !1751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 getelementptr inbounds (<{ [128 x i8] }>, <{ [128 x i8] }>* @1, i32 0, i32 0, i32 0), i64 128, i1 false), !dbg !1751
  %_34 = icmp ult i64 %shift, 16, !dbg !1751
  %6 = call i1 @llvm.expect.i1(i1 %_34, i1 true), !dbg !1751
  br i1 %6, label %bb14, label %panic, !dbg !1751

bb4:                                              ; preds = %bb3
  %7 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 1, !dbg !1752
  %_9 = load i64, i64* %7, align 8, !dbg !1752
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64
  %value1 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417ha4a496047ebe5f0bE"(i64 %_9), !dbg !1753
  store float %value1, float* %value.dbg.spill, align 4, !dbg !1753
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill, metadata !1729, metadata !DIExpression()), !dbg !1754
  br label %bb5, !dbg !1753

bb5:                                              ; preds = %bb4
  %8 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1755
  %_11 = load i64, i64* %8, align 8, !dbg !1755
  %_10 = icmp slt i64 %_11, 0, !dbg !1755
  br i1 %_10, label %bb6, label %bb9, !dbg !1755

bb9:                                              ; preds = %bb5
  %9 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1756
  %_22 = load i64, i64* %9, align 8, !dbg !1756
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_19 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h645b46d823563074E"(i64 %_22), !dbg !1757
  br label %bb10, !dbg !1757

bb6:                                              ; preds = %bb5
  %10 = bitcast %"core::num::dec2flt::number::Number"* %self to i64*, !dbg !1758
  %_17 = load i64, i64* %10, align 8, !dbg !1758
  %_16 = sub i64 0, %_17, !dbg !1759
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_13 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h645b46d823563074E"(i64 %_16), !dbg !1760
  br label %bb7, !dbg !1760

bb7:                                              ; preds = %bb6
; call <f32 as core::ops::arith::Div>::div
  %11 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17he6073f501bfa0ee7E"(float %value1, float %_13), !dbg !1761
  store float %11, float* %value, align 4, !dbg !1761
  br label %bb8, !dbg !1761

bb8:                                              ; preds = %bb7
  br label %bb12, !dbg !1762

bb12:                                             ; preds = %bb11, %bb8
  br label %bb26, !dbg !1763

bb10:                                             ; preds = %bb9
; call <f32 as core::ops::arith::Mul>::mul
  %12 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17hcf55b7e176d8b17bE"(float %value1, float %_19), !dbg !1764
  store float %12, float* %value, align 4, !dbg !1764
  br label %bb11, !dbg !1764

bb11:                                             ; preds = %bb10
  br label %bb12, !dbg !1762

bb26:                                             ; preds = %bb25, %bb12
  %13 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %self, i32 0, i32 2, !dbg !1765
  %14 = load i8, i8* %13, align 8, !dbg !1765, !range !238
  %_46 = trunc i8 %14 to i1, !dbg !1765
  br i1 %_46, label %bb27, label %bb29, !dbg !1765

bb14:                                             ; preds = %bb13
  %15 = getelementptr inbounds [16 x i64], [16 x i64]* %_30, i64 0, i64 %shift, !dbg !1751
  %_29 = load i64, i64* %15, align 8, !dbg !1751
; call core::num::<impl u64>::checked_mul
  %16 = call { i64, i64 } @"_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h4cf3e0f6afebc40eE"(i64 %_28, i64 %_29), !dbg !1750
  %_27.0 = extractvalue { i64, i64 } %16, 0, !dbg !1750
  %_27.1 = extractvalue { i64, i64 } %16, 1, !dbg !1750
  br label %bb15, !dbg !1750

panic:                                            ; preds = %bb13
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64 %shift, i64 16, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2950 to %"core::panic::Location"*)), !dbg !1751
  unreachable, !dbg !1751

bb15:                                             ; preds = %bb14
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %17 = call { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h833feb00c42a4ac7E"(i64 %_27.0, i64 %_27.1), !dbg !1750
  store { i64, i64 } %17, { i64, i64 }* %_26, align 8, !dbg !1750
  br label %bb16, !dbg !1750

bb16:                                             ; preds = %bb15
  %18 = bitcast { i64, i64 }* %_26 to i64*, !dbg !1750
  %_35 = load i64, i64* %18, align 8, !dbg !1750, !range !792
  switch i64 %_35, label %bb18 [
    i64 0, label %bb17
    i64 1, label %bb19
  ], !dbg !1750

bb18:                                             ; preds = %bb16
  unreachable, !dbg !1750

bb17:                                             ; preds = %bb16
  %19 = bitcast { i64, i64 }* %_26 to %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"*, !dbg !1750
  %20 = getelementptr inbounds %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue", %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"* %19, i32 0, i32 1, !dbg !1750
  %val = load i64, i64* %20, align 8, !dbg !1750
  store i64 %val, i64* %val.dbg.spill, align 8, !dbg !1750
  call void @llvm.dbg.declare(metadata i64* %val.dbg.spill, metadata !1737, metadata !DIExpression()), !dbg !1766
  store i64 %val, i64* %mantissa.dbg.spill, align 8, !dbg !1766
  call void @llvm.dbg.declare(metadata i64* %mantissa.dbg.spill, metadata !1733, metadata !DIExpression()), !dbg !1767
  %_39 = icmp ugt i64 %val, 16777216, !dbg !1768
  br i1 %_39, label %bb21, label %bb22, !dbg !1768

bb19:                                             ; preds = %bb16
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %21 = call { i32, float } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7d225edce8e764a3E"(), !dbg !1769
  store { i32, float } %21, { i32, float }* %0, align 4, !dbg !1769
  br label %bb20, !dbg !1769

bb20:                                             ; preds = %bb19
  br label %bb32, !dbg !1770

bb32:                                             ; preds = %bb21, %bb20
  br label %bb33, !dbg !1772

bb22:                                             ; preds = %bb17
; call <f32 as core::num::dec2flt::float::RawFloat>::from_u64
  %_41 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417ha4a496047ebe5f0bE"(i64 %val), !dbg !1773
  br label %bb23, !dbg !1773

bb21:                                             ; preds = %bb17
  %22 = bitcast { i32, float }* %0 to i32*, !dbg !1774
  store i32 0, i32* %22, align 4, !dbg !1774
  br label %bb32, !dbg !1775

bb33:                                             ; preds = %bb31, %bb32
  %23 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !1772
  %24 = load i32, i32* %23, align 4, !dbg !1772, !range !1207
  %25 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !1772
  %26 = load float, float* %25, align 4, !dbg !1772
  %27 = insertvalue { i32, float } undef, i32 %24, 0, !dbg !1772
  %28 = insertvalue { i32, float } %27, float %26, 1, !dbg !1772
  ret { i32, float } %28, !dbg !1772

bb23:                                             ; preds = %bb22
; call <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
  %_43 = call float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h645b46d823563074E"(i64 10), !dbg !1777
  br label %bb24, !dbg !1777

bb24:                                             ; preds = %bb23
; call <f32 as core::ops::arith::Mul>::mul
  %29 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17hcf55b7e176d8b17bE"(float %_41, float %_43), !dbg !1773
  store float %29, float* %value, align 4, !dbg !1773
  br label %bb25, !dbg !1773

bb25:                                             ; preds = %bb24
  br label %bb26, !dbg !1763

bb29:                                             ; preds = %bb28, %bb26
  %_49 = load float, float* %value, align 4, !dbg !1778
  %30 = bitcast { i32, float }* %0 to %"core::option::Option<f32>::Some"*, !dbg !1779
  %31 = getelementptr inbounds %"core::option::Option<f32>::Some", %"core::option::Option<f32>::Some"* %30, i32 0, i32 1, !dbg !1779
  store float %_49, float* %31, align 4, !dbg !1779
  %32 = bitcast { i32, float }* %0 to i32*, !dbg !1779
  store i32 1, i32* %32, align 4, !dbg !1779
  br label %bb31, !dbg !1746

bb27:                                             ; preds = %bb26
  %_48 = load float, float* %value, align 4, !dbg !1780
; call <f32 as core::ops::arith::Neg>::neg
  %_47 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17h57e55d56d9e42651E"(float %_48), !dbg !1781
  br label %bb28, !dbg !1781

bb28:                                             ; preds = %bb27
  store float %_47, float* %value, align 4, !dbg !1782
  br label %bb29, !dbg !1783

bb31:                                             ; preds = %bb30, %bb29
  br label %bb33, !dbg !1772
}

; core::num::dec2flt::dec2flt
; Function Attrs: nounwind
define i64 @_ZN4core3num7dec2flt7dec2flt17h193ae62556cd86b5E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1784 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %value.dbg.spill3 = alloca float, align 4
  %value.dbg.spill = alloca float, align 4
  %negative.dbg.spill = alloca i8, align 1
  %c.dbg.spill1 = alloca i8, align 1
  %c.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca float, align 4
  %_51 = alloca { i64, i32 }, align 8
  %_44 = alloca i8, align 1
  %_43 = alloca i8, align 1
  %fp = alloca { i64, i32 }, align 8
  %_35 = alloca { i32, float }, align 4
  %_28 = alloca { i32, float }, align 4
  %r = alloca %"core::num::dec2flt::number::Number", align 8
  %_23 = alloca %"core::option::Option<core::num::dec2flt::number::Number>", align 8
  %num = alloca %"core::num::dec2flt::number::Number", align 8
  %_12 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f32, core::num::ParseFloatError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1786, metadata !DIExpression()), !dbg !1807
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s, metadata !1787, metadata !DIExpression()), !dbg !1808
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %num, metadata !1795, metadata !DIExpression()), !dbg !1809
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %r, metadata !1797, metadata !DIExpression()), !dbg !1810
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp, metadata !1803, metadata !DIExpression()), !dbg !1811
  call void @llvm.dbg.declare(metadata float* %float, metadata !1805, metadata !DIExpression()), !dbg !1812
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %s.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !1820
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1822
  store [0 x i8]* %s.0, [0 x i8]** %6, align 8, !dbg !1822
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1822
  store i64 %s.1, i64* %7, align 8, !dbg !1822
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1822
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !1822, !nonnull !4
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1822
  %11 = load i64, i64* %10, align 8, !dbg !1822
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !1823
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !1823
  store { [0 x i8]*, i64 } %13, { [0 x i8]*, i64 }* %s, align 8, !dbg !1824
  br label %bb1, !dbg !1824

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1825
  %_6.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !1825, !nonnull !4
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1825
  %_6.1 = load i64, i64* %15, align 8, !dbg !1825
; call core::slice::<impl [T]>::first
  %16 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hae99d40c22f691a2E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1), !dbg !1825
  store i8* %16, i8** %_5, align 8, !dbg !1825
  br label %bb2, !dbg !1825

bb2:                                              ; preds = %bb1
  %17 = bitcast i8** %_5 to {}**, !dbg !1826
  %18 = load {}*, {}** %17, align 8, !dbg !1826
  %19 = icmp eq {}* %18, null, !dbg !1826
  %_7 = select i1 %19, i64 0, i64 1, !dbg !1826
  %20 = icmp eq i64 %_7, 1, !dbg !1826
  br i1 %20, label %bb3, label %bb4, !dbg !1826

bb3:                                              ; preds = %bb2
  %21 = load i8*, i8** %_5, align 8, !dbg !1827, !nonnull !4
  %c = load i8, i8* %21, align 1, !dbg !1827
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !1827
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !1791, metadata !DIExpression()), !dbg !1828
  store i8 %c, i8* %c.dbg.spill1, align 1, !dbg !1829
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill1, metadata !1789, metadata !DIExpression()), !dbg !1830
  %negative = icmp eq i8 %c, 45, !dbg !1831
  %22 = zext i1 %negative to i8, !dbg !1831
  store i8 %22, i8* %negative.dbg.spill, align 1, !dbg !1831
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1793, metadata !DIExpression()), !dbg !1832
  %23 = icmp eq i8 %c, 45, !dbg !1833
  br i1 %23, label %bb6, label %bb7, !dbg !1833

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::pfe_empty
  %_9 = call zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h7f4ad285f5ad2ae4E(), !dbg !1834
  br label %bb5, !dbg !1834

bb5:                                              ; preds = %bb4
  %24 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Err"*, !dbg !1835
  %25 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Err", %"core::result::Result<f32, core::num::ParseFloatError>::Err"* %24, i32 0, i32 1, !dbg !1835
  %26 = zext i1 %_9 to i8, !dbg !1835
  store i8 %26, i8* %25, align 1, !dbg !1835
  %27 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1835
  store i8 1, i8* %27, align 4, !dbg !1835
  br label %bb48, !dbg !1836

bb48:                                             ; preds = %bb47, %bb5
  br label %bb49, !dbg !1838

bb6:                                              ; preds = %bb3
  store i8 1, i8* %_12, align 1, !dbg !1833
  br label %bb8, !dbg !1833

bb7:                                              ; preds = %bb3
  %_14 = icmp eq i8 %c, 43, !dbg !1839
  %28 = zext i1 %_14 to i8, !dbg !1833
  store i8 %28, i8* %_12, align 1, !dbg !1833
  br label %bb8, !dbg !1833

bb8:                                              ; preds = %bb6, %bb7
  %29 = load i8, i8* %_12, align 1, !dbg !1833, !range !238
  %30 = trunc i8 %29 to i1, !dbg !1833
  br i1 %30, label %bb9, label %bb11, !dbg !1833

bb11:                                             ; preds = %bb10, %bb8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1840
  %_20.0 = load [0 x i8]*, [0 x i8]** %31, align 8, !dbg !1840, !nonnull !4
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1840
  %_20.1 = load i64, i64* %32, align 8, !dbg !1840
; call core::slice::<impl [T]>::is_empty
  %_19 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h0e52eb6f587116c6E"([0 x i8]* nonnull align 1 %_20.0, i64 %_20.1), !dbg !1840
  br label %bb12, !dbg !1840

bb9:                                              ; preds = %bb8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1841
  %_18.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !1841, !nonnull !4
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1841
  %_18.1 = load i64, i64* %34, align 8, !dbg !1841
; call core::num::dec2flt::common::ByteSlice::advance
  %35 = call { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17hec4a59ca6211db3bE([0 x i8]* nonnull align 1 %_18.0, i64 %_18.1, i64 1), !dbg !1841
  %_17.0 = extractvalue { [0 x i8]*, i64 } %35, 0, !dbg !1841
  %_17.1 = extractvalue { [0 x i8]*, i64 } %35, 1, !dbg !1841
  br label %bb10, !dbg !1841

bb10:                                             ; preds = %bb9
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1842
  store [0 x i8]* %_17.0, [0 x i8]** %36, align 8, !dbg !1842
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1842
  store i64 %_17.1, i64* %37, align 8, !dbg !1842
  br label %bb11, !dbg !1843

bb12:                                             ; preds = %bb11
  br i1 %_19, label %bb13, label %bb15, !dbg !1840

bb15:                                             ; preds = %bb12
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1844
  %_24.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !1844, !nonnull !4
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1844
  %_24.1 = load i64, i64* %39, align 8, !dbg !1844
; call core::num::dec2flt::parse::parse_number
  call void @_ZN4core3num7dec2flt5parse12parse_number17h12280348b0d629d1E(%"core::option::Option<core::num::dec2flt::number::Number>"* noalias nocapture sret(%"core::option::Option<core::num::dec2flt::number::Number>") dereferenceable(24) %_23, [0 x i8]* nonnull align 1 %_24.0, i64 %_24.1, i1 zeroext %negative), !dbg !1845
  br label %bb16, !dbg !1845

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::pfe_invalid
  %_21 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h82b98a82ae1c4825E(), !dbg !1846
  br label %bb14, !dbg !1846

bb14:                                             ; preds = %bb13
  %40 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Err"*, !dbg !1847
  %41 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Err", %"core::result::Result<f32, core::num::ParseFloatError>::Err"* %40, i32 0, i32 1, !dbg !1847
  %42 = zext i1 %_21 to i8, !dbg !1847
  store i8 %42, i8* %41, align 1, !dbg !1847
  %43 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1847
  store i8 1, i8* %43, align 4, !dbg !1847
  br label %bb47, !dbg !1848

bb47:                                             ; preds = %bb46, %bb14
  br label %bb48, !dbg !1850

bb16:                                             ; preds = %bb15
  %44 = getelementptr inbounds %"core::option::Option<core::num::dec2flt::number::Number>", %"core::option::Option<core::num::dec2flt::number::Number>"* %_23, i32 0, i32 1, !dbg !1845
  %45 = load i8, i8* %44, align 8, !dbg !1845, !range !1852
  %46 = sub i8 %45, 2, !dbg !1845
  %47 = icmp eq i8 %46, 0, !dbg !1845
  %_26 = select i1 %47, i64 0, i64 1, !dbg !1845
  switch i64 %_26, label %bb18 [
    i64 0, label %bb20
    i64 1, label %bb19
  ], !dbg !1853

bb18:                                             ; preds = %bb16
  unreachable, !dbg !1845

bb20:                                             ; preds = %bb16
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1854
  %_29.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !dbg !1854, !nonnull !4
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1854
  %_29.1 = load i64, i64* %49, align 8, !dbg !1854
; call core::num::dec2flt::parse::parse_inf_nan
  %50 = call { i32, float } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h96bd8654992402f6E([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1, i1 zeroext %negative), !dbg !1855
  store { i32, float } %50, { i32, float }* %_28, align 4, !dbg !1855
  br label %bb21, !dbg !1855

bb19:                                             ; preds = %bb16
  %51 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>"* %_23 to %"core::option::Option<core::num::dec2flt::number::Number>::Some"*, !dbg !1856
  %52 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>::Some"* %51 to %"core::num::dec2flt::number::Number"*, !dbg !1856
  %53 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !1856
  %54 = bitcast %"core::num::dec2flt::number::Number"* %52 to i8*, !dbg !1856
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false), !dbg !1856
  %55 = bitcast %"core::num::dec2flt::number::Number"* %num to i8*, !dbg !1857
  %56 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !1857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false), !dbg !1857
; call core::num::dec2flt::number::Number::try_fast_path
  %57 = call { i32, float } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hc8d65b680acba754E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %num), !dbg !1858
  store { i32, float } %57, { i32, float }* %_35, align 4, !dbg !1858
  br label %bb24, !dbg !1858

bb24:                                             ; preds = %bb19
  %58 = bitcast { i32, float }* %_35 to i32*, !dbg !1859
  %59 = load i32, i32* %58, align 4, !dbg !1859, !range !1207
  %_37 = zext i32 %59 to i64, !dbg !1859
  %60 = icmp eq i64 %_37, 1, !dbg !1859
  br i1 %60, label %bb25, label %bb26, !dbg !1859

bb25:                                             ; preds = %bb24
  %61 = bitcast { i32, float }* %_35 to %"core::option::Option<f32>::Some"*, !dbg !1860
  %62 = getelementptr inbounds %"core::option::Option<f32>::Some", %"core::option::Option<f32>::Some"* %61, i32 0, i32 1, !dbg !1860
  %value = load float, float* %62, align 4, !dbg !1860
  store float %value, float* %value.dbg.spill, align 4, !dbg !1860
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill, metadata !1801, metadata !DIExpression()), !dbg !1861
  %63 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Ok"*, !dbg !1862
  %64 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::ParseFloatError>::Ok"* %63, i32 0, i32 1, !dbg !1862
  store float %value, float* %64, align 4, !dbg !1862
  %65 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1862
  store i8 0, i8* %65, align 4, !dbg !1862
  br label %bb46, !dbg !1863

bb26:                                             ; preds = %bb24
  %66 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !1865
  %_41 = load i64, i64* %66, align 8, !dbg !1865
  %67 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !1866
  %_42 = load i64, i64* %67, align 8, !dbg !1866
; call core::num::dec2flt::lemire::compute_float
  %68 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hd5e10d6c3cf83fd3E(i64 %_41, i64 %_42), !dbg !1867
  store { i64, i32 } %68, { i64, i32 }* %fp, align 8, !dbg !1867
  br label %bb27, !dbg !1867

bb27:                                             ; preds = %bb26
  %69 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 3, !dbg !1868
  %70 = load i8, i8* %69, align 1, !dbg !1868, !range !238
  %_45 = trunc i8 %70 to i1, !dbg !1868
  br i1 %_45, label %bb32, label %bb31, !dbg !1868

bb31:                                             ; preds = %bb27
  store i8 0, i8* %_44, align 1, !dbg !1868
  br label %bb33, !dbg !1868

bb32:                                             ; preds = %bb27
  %71 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1869
  %_47 = load i32, i32* %71, align 8, !dbg !1869
  %_46 = icmp sge i32 %_47, 0, !dbg !1869
  %72 = zext i1 %_46 to i8, !dbg !1868
  store i8 %72, i8* %_44, align 1, !dbg !1868
  br label %bb33, !dbg !1868

bb33:                                             ; preds = %bb31, %bb32
  %73 = load i8, i8* %_44, align 1, !dbg !1868, !range !238
  %74 = trunc i8 %73 to i1, !dbg !1868
  br i1 %74, label %bb29, label %bb28, !dbg !1868

bb28:                                             ; preds = %bb33
  store i8 0, i8* %_43, align 1, !dbg !1868
  br label %bb30, !dbg !1868

bb29:                                             ; preds = %bb33
  %75 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !1870
  %_52 = load i64, i64* %75, align 8, !dbg !1870
  %76 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !1871
  %_54 = load i64, i64* %76, align 8, !dbg !1871
  %_53 = add i64 %_54, 1, !dbg !1871
; call core::num::dec2flt::lemire::compute_float
  %77 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hd5e10d6c3cf83fd3E(i64 %_52, i64 %_53), !dbg !1872
  store { i64, i32 } %77, { i64, i32 }* %_51, align 8, !dbg !1872
  br label %bb34, !dbg !1872

bb34:                                             ; preds = %bb29
; call <core::num::dec2flt::common::BiasedFp as core::cmp::PartialEq>::ne
  %_48 = call zeroext i1 @"_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17hc9d6db301fc3a3bdE"({ i64, i32 }* align 8 dereferenceable(16) %fp, { i64, i32 }* align 8 dereferenceable(16) %_51), !dbg !1873
  br label %bb35, !dbg !1873

bb35:                                             ; preds = %bb34
  %78 = zext i1 %_48 to i8, !dbg !1868
  store i8 %78, i8* %_43, align 1, !dbg !1868
  br label %bb30, !dbg !1868

bb30:                                             ; preds = %bb28, %bb35
  %79 = load i8, i8* %_43, align 1, !dbg !1868, !range !238
  %80 = trunc i8 %79 to i1, !dbg !1868
  br i1 %80, label %bb36, label %bb37, !dbg !1868

bb37:                                             ; preds = %bb36, %bb30
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1874
  %_56 = load i32, i32* %81, align 8, !dbg !1874
  %_55 = icmp slt i32 %_56, 0, !dbg !1874
  br i1 %_55, label %bb38, label %bb40, !dbg !1874

bb36:                                             ; preds = %bb30
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1875
  store i32 -1, i32* %82, align 8, !dbg !1875
  br label %bb37, !dbg !1876

bb40:                                             ; preds = %bb39, %bb37
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !1877
  %_60.0 = load i64, i64* %83, align 8, !dbg !1877
  %84 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1877
  %_60.1 = load i32, i32* %84, align 8, !dbg !1877
; call core::num::dec2flt::biased_fp_to_float
  %85 = call float @_ZN4core3num7dec2flt18biased_fp_to_float17h35fd2ba36433138cE(i64 %_60.0, i32 %_60.1), !dbg !1878
  store float %85, float* %float, align 4, !dbg !1878
  br label %bb41, !dbg !1878

bb38:                                             ; preds = %bb37
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1879
  %_58.0 = load [0 x i8]*, [0 x i8]** %86, align 8, !dbg !1879, !nonnull !4
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1879
  %_58.1 = load i64, i64* %87, align 8, !dbg !1879
; call core::num::dec2flt::slow::parse_long_mantissa
  %88 = call { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17h62bb7aad644caa2fE([0 x i8]* nonnull align 1 %_58.0, i64 %_58.1), !dbg !1880
  %_57.0 = extractvalue { i64, i32 } %88, 0, !dbg !1880
  %_57.1 = extractvalue { i64, i32 } %88, 1, !dbg !1880
  br label %bb39, !dbg !1880

bb39:                                             ; preds = %bb38
  %89 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !1881
  store i64 %_57.0, i64* %89, align 8, !dbg !1881
  %90 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1881
  store i32 %_57.1, i32* %90, align 8, !dbg !1881
  br label %bb40, !dbg !1882

bb41:                                             ; preds = %bb40
  %91 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 2, !dbg !1883
  %92 = load i8, i8* %91, align 8, !dbg !1883, !range !238
  %_61 = trunc i8 %92 to i1, !dbg !1883
  br i1 %_61, label %bb42, label %bb44, !dbg !1883

bb44:                                             ; preds = %bb43, %bb41
  %_64 = load float, float* %float, align 4, !dbg !1884
  %93 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Ok"*, !dbg !1885
  %94 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::ParseFloatError>::Ok"* %93, i32 0, i32 1, !dbg !1885
  store float %_64, float* %94, align 4, !dbg !1885
  %95 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1885
  store i8 0, i8* %95, align 4, !dbg !1885
  br label %bb49, !dbg !1838

bb42:                                             ; preds = %bb41
  %_63 = load float, float* %float, align 4, !dbg !1886
; call <f32 as core::ops::arith::Neg>::neg
  %_62 = call float @"_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17h57e55d56d9e42651E"(float %_63), !dbg !1887
  br label %bb43, !dbg !1887

bb43:                                             ; preds = %bb42
  store float %_62, float* %float, align 4, !dbg !1888
  br label %bb44, !dbg !1889

bb49:                                             ; preds = %bb48, %bb44
  %96 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i64*, !dbg !1838
  %97 = load i64, i64* %96, align 4, !dbg !1838
  ret i64 %97, !dbg !1838

bb46:                                             ; preds = %bb45, %bb25
  br label %bb47, !dbg !1848

bb21:                                             ; preds = %bb20
  %98 = bitcast { i32, float }* %_28 to i32*, !dbg !1890
  %99 = load i32, i32* %98, align 4, !dbg !1890, !range !1207
  %_31 = zext i32 %99 to i64, !dbg !1890
  %100 = icmp eq i64 %_31, 1, !dbg !1890
  br i1 %100, label %bb22, label %bb17, !dbg !1890

bb22:                                             ; preds = %bb21
  %101 = bitcast { i32, float }* %_28 to %"core::option::Option<f32>::Some"*, !dbg !1891
  %102 = getelementptr inbounds %"core::option::Option<f32>::Some", %"core::option::Option<f32>::Some"* %101, i32 0, i32 1, !dbg !1891
  %value2 = load float, float* %102, align 4, !dbg !1891
  store float %value2, float* %value.dbg.spill3, align 4, !dbg !1891
  call void @llvm.dbg.declare(metadata float* %value.dbg.spill3, metadata !1799, metadata !DIExpression()), !dbg !1892
  %103 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Ok"*, !dbg !1893
  %104 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::ParseFloatError>::Ok"* %103, i32 0, i32 1, !dbg !1893
  store float %value2, float* %104, align 4, !dbg !1893
  %105 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1893
  store i8 0, i8* %105, align 4, !dbg !1893
  br label %bb45, !dbg !1848

bb17:                                             ; preds = %bb21
; call core::num::dec2flt::pfe_invalid
  %_34 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h82b98a82ae1c4825E(), !dbg !1894
  br label %bb23, !dbg !1894

bb23:                                             ; preds = %bb17
  %106 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to %"core::result::Result<f32, core::num::ParseFloatError>::Err"*, !dbg !1895
  %107 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Err", %"core::result::Result<f32, core::num::ParseFloatError>::Err"* %106, i32 0, i32 1, !dbg !1895
  %108 = zext i1 %_34 to i8, !dbg !1895
  store i8 %108, i8* %107, align 1, !dbg !1895
  %109 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !1895
  store i8 1, i8* %109, align 4, !dbg !1895
  br label %bb45, !dbg !1896

bb45:                                             ; preds = %bb22, %bb23
  br label %bb46, !dbg !1848
}

; core::num::dec2flt::dec2flt
; Function Attrs: nounwind
define i128 @_ZN4core3num7dec2flt7dec2flt17he47d22f84eb69cc7E([0 x i8]* nonnull align 1 %s.0, i64 %s.1) unnamed_addr #1 !dbg !1897 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %value.dbg.spill3 = alloca double, align 8
  %value.dbg.spill = alloca double, align 8
  %negative.dbg.spill = alloca i8, align 1
  %c.dbg.spill1 = alloca i8, align 1
  %c.dbg.spill = alloca i8, align 1
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %float = alloca double, align 8
  %_51 = alloca { i64, i32 }, align 8
  %_44 = alloca i8, align 1
  %_43 = alloca i8, align 1
  %fp = alloca { i64, i32 }, align 8
  %_35 = alloca { i64, double }, align 8
  %_28 = alloca { i64, double }, align 8
  %r = alloca %"core::num::dec2flt::number::Number", align 8
  %_23 = alloca %"core::option::Option<core::num::dec2flt::number::Number>", align 8
  %num = alloca %"core::num::dec2flt::number::Number", align 8
  %_12 = alloca i8, align 1
  %_5 = alloca i8*, align 8
  %s = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f64, core::num::ParseFloatError>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1
  store i64 %s.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !1899, metadata !DIExpression()), !dbg !1920
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s, metadata !1900, metadata !DIExpression()), !dbg !1921
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %num, metadata !1908, metadata !DIExpression()), !dbg !1922
  call void @llvm.dbg.declare(metadata %"core::num::dec2flt::number::Number"* %r, metadata !1910, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.declare(metadata { i64, i32 }* %fp, metadata !1916, metadata !DIExpression()), !dbg !1924
  call void @llvm.dbg.declare(metadata double* %float, metadata !1918, metadata !DIExpression()), !dbg !1925
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %s.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %s.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !1926
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1928
  store [0 x i8]* %s.0, [0 x i8]** %6, align 8, !dbg !1928
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1928
  store i64 %s.1, i64* %7, align 8, !dbg !1928
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !1928
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !1928, !nonnull !4
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !1928
  %11 = load i64, i64* %10, align 8, !dbg !1928
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !1929
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !1929
  store { [0 x i8]*, i64 } %13, { [0 x i8]*, i64 }* %s, align 8, !dbg !1930
  br label %bb1, !dbg !1930

bb1:                                              ; preds = %start
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1931
  %_6.0 = load [0 x i8]*, [0 x i8]** %14, align 8, !dbg !1931, !nonnull !4
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1931
  %_6.1 = load i64, i64* %15, align 8, !dbg !1931
; call core::slice::<impl [T]>::first
  %16 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hae99d40c22f691a2E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1), !dbg !1931
  store i8* %16, i8** %_5, align 8, !dbg !1931
  br label %bb2, !dbg !1931

bb2:                                              ; preds = %bb1
  %17 = bitcast i8** %_5 to {}**, !dbg !1932
  %18 = load {}*, {}** %17, align 8, !dbg !1932
  %19 = icmp eq {}* %18, null, !dbg !1932
  %_7 = select i1 %19, i64 0, i64 1, !dbg !1932
  %20 = icmp eq i64 %_7, 1, !dbg !1932
  br i1 %20, label %bb3, label %bb4, !dbg !1932

bb3:                                              ; preds = %bb2
  %21 = load i8*, i8** %_5, align 8, !dbg !1933, !nonnull !4
  %c = load i8, i8* %21, align 1, !dbg !1933
  store i8 %c, i8* %c.dbg.spill, align 1, !dbg !1933
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill, metadata !1904, metadata !DIExpression()), !dbg !1934
  store i8 %c, i8* %c.dbg.spill1, align 1, !dbg !1935
  call void @llvm.dbg.declare(metadata i8* %c.dbg.spill1, metadata !1902, metadata !DIExpression()), !dbg !1936
  %negative = icmp eq i8 %c, 45, !dbg !1937
  %22 = zext i1 %negative to i8, !dbg !1937
  store i8 %22, i8* %negative.dbg.spill, align 1, !dbg !1937
  call void @llvm.dbg.declare(metadata i8* %negative.dbg.spill, metadata !1906, metadata !DIExpression()), !dbg !1938
  %23 = icmp eq i8 %c, 45, !dbg !1939
  br i1 %23, label %bb6, label %bb7, !dbg !1939

bb4:                                              ; preds = %bb2
; call core::num::dec2flt::pfe_empty
  %_9 = call zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h7f4ad285f5ad2ae4E(), !dbg !1940
  br label %bb5, !dbg !1940

bb5:                                              ; preds = %bb4
  %24 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Err"*, !dbg !1941
  %25 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Err", %"core::result::Result<f64, core::num::ParseFloatError>::Err"* %24, i32 0, i32 1, !dbg !1941
  %26 = zext i1 %_9 to i8, !dbg !1941
  store i8 %26, i8* %25, align 1, !dbg !1941
  %27 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1941
  store i8 1, i8* %27, align 8, !dbg !1941
  br label %bb48, !dbg !1942

bb48:                                             ; preds = %bb47, %bb5
  br label %bb49, !dbg !1944

bb6:                                              ; preds = %bb3
  store i8 1, i8* %_12, align 1, !dbg !1939
  br label %bb8, !dbg !1939

bb7:                                              ; preds = %bb3
  %_14 = icmp eq i8 %c, 43, !dbg !1945
  %28 = zext i1 %_14 to i8, !dbg !1939
  store i8 %28, i8* %_12, align 1, !dbg !1939
  br label %bb8, !dbg !1939

bb8:                                              ; preds = %bb6, %bb7
  %29 = load i8, i8* %_12, align 1, !dbg !1939, !range !238
  %30 = trunc i8 %29 to i1, !dbg !1939
  br i1 %30, label %bb9, label %bb11, !dbg !1939

bb11:                                             ; preds = %bb10, %bb8
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1946
  %_20.0 = load [0 x i8]*, [0 x i8]** %31, align 8, !dbg !1946, !nonnull !4
  %32 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1946
  %_20.1 = load i64, i64* %32, align 8, !dbg !1946
; call core::slice::<impl [T]>::is_empty
  %_19 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h0e52eb6f587116c6E"([0 x i8]* nonnull align 1 %_20.0, i64 %_20.1), !dbg !1946
  br label %bb12, !dbg !1946

bb9:                                              ; preds = %bb8
  %33 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1947
  %_18.0 = load [0 x i8]*, [0 x i8]** %33, align 8, !dbg !1947, !nonnull !4
  %34 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1947
  %_18.1 = load i64, i64* %34, align 8, !dbg !1947
; call core::num::dec2flt::common::ByteSlice::advance
  %35 = call { [0 x i8]*, i64 } @_ZN4core3num7dec2flt6common9ByteSlice7advance17hec4a59ca6211db3bE([0 x i8]* nonnull align 1 %_18.0, i64 %_18.1, i64 1), !dbg !1947
  %_17.0 = extractvalue { [0 x i8]*, i64 } %35, 0, !dbg !1947
  %_17.1 = extractvalue { [0 x i8]*, i64 } %35, 1, !dbg !1947
  br label %bb10, !dbg !1947

bb10:                                             ; preds = %bb9
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1948
  store [0 x i8]* %_17.0, [0 x i8]** %36, align 8, !dbg !1948
  %37 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1948
  store i64 %_17.1, i64* %37, align 8, !dbg !1948
  br label %bb11, !dbg !1949

bb12:                                             ; preds = %bb11
  br i1 %_19, label %bb13, label %bb15, !dbg !1946

bb15:                                             ; preds = %bb12
  %38 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1950
  %_24.0 = load [0 x i8]*, [0 x i8]** %38, align 8, !dbg !1950, !nonnull !4
  %39 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1950
  %_24.1 = load i64, i64* %39, align 8, !dbg !1950
; call core::num::dec2flt::parse::parse_number
  call void @_ZN4core3num7dec2flt5parse12parse_number17h12280348b0d629d1E(%"core::option::Option<core::num::dec2flt::number::Number>"* noalias nocapture sret(%"core::option::Option<core::num::dec2flt::number::Number>") dereferenceable(24) %_23, [0 x i8]* nonnull align 1 %_24.0, i64 %_24.1, i1 zeroext %negative), !dbg !1951
  br label %bb16, !dbg !1951

bb13:                                             ; preds = %bb12
; call core::num::dec2flt::pfe_invalid
  %_21 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h82b98a82ae1c4825E(), !dbg !1952
  br label %bb14, !dbg !1952

bb14:                                             ; preds = %bb13
  %40 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Err"*, !dbg !1953
  %41 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Err", %"core::result::Result<f64, core::num::ParseFloatError>::Err"* %40, i32 0, i32 1, !dbg !1953
  %42 = zext i1 %_21 to i8, !dbg !1953
  store i8 %42, i8* %41, align 1, !dbg !1953
  %43 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1953
  store i8 1, i8* %43, align 8, !dbg !1953
  br label %bb47, !dbg !1954

bb47:                                             ; preds = %bb46, %bb14
  br label %bb48, !dbg !1956

bb16:                                             ; preds = %bb15
  %44 = getelementptr inbounds %"core::option::Option<core::num::dec2flt::number::Number>", %"core::option::Option<core::num::dec2flt::number::Number>"* %_23, i32 0, i32 1, !dbg !1951
  %45 = load i8, i8* %44, align 8, !dbg !1951, !range !1852
  %46 = sub i8 %45, 2, !dbg !1951
  %47 = icmp eq i8 %46, 0, !dbg !1951
  %_26 = select i1 %47, i64 0, i64 1, !dbg !1951
  switch i64 %_26, label %bb18 [
    i64 0, label %bb20
    i64 1, label %bb19
  ], !dbg !1958

bb18:                                             ; preds = %bb16
  unreachable, !dbg !1951

bb20:                                             ; preds = %bb16
  %48 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1959
  %_29.0 = load [0 x i8]*, [0 x i8]** %48, align 8, !dbg !1959, !nonnull !4
  %49 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1959
  %_29.1 = load i64, i64* %49, align 8, !dbg !1959
; call core::num::dec2flt::parse::parse_inf_nan
  %50 = call { i64, double } @_ZN4core3num7dec2flt5parse13parse_inf_nan17h2ed54d37b5155d4fE([0 x i8]* nonnull align 1 %_29.0, i64 %_29.1, i1 zeroext %negative), !dbg !1960
  store { i64, double } %50, { i64, double }* %_28, align 8, !dbg !1960
  br label %bb21, !dbg !1960

bb19:                                             ; preds = %bb16
  %51 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>"* %_23 to %"core::option::Option<core::num::dec2flt::number::Number>::Some"*, !dbg !1961
  %52 = bitcast %"core::option::Option<core::num::dec2flt::number::Number>::Some"* %51 to %"core::num::dec2flt::number::Number"*, !dbg !1961
  %53 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !1961
  %54 = bitcast %"core::num::dec2flt::number::Number"* %52 to i8*, !dbg !1961
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false), !dbg !1961
  %55 = bitcast %"core::num::dec2flt::number::Number"* %num to i8*, !dbg !1962
  %56 = bitcast %"core::num::dec2flt::number::Number"* %r to i8*, !dbg !1962
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false), !dbg !1962
; call core::num::dec2flt::number::Number::try_fast_path
  %57 = call { i64, double } @_ZN4core3num7dec2flt6number6Number13try_fast_path17hbd6181af72375dd5E(%"core::num::dec2flt::number::Number"* align 8 dereferenceable(24) %num), !dbg !1963
  store { i64, double } %57, { i64, double }* %_35, align 8, !dbg !1963
  br label %bb24, !dbg !1963

bb24:                                             ; preds = %bb19
  %58 = bitcast { i64, double }* %_35 to i64*, !dbg !1964
  %_37 = load i64, i64* %58, align 8, !dbg !1964, !range !792
  %59 = icmp eq i64 %_37, 1, !dbg !1964
  br i1 %59, label %bb25, label %bb26, !dbg !1964

bb25:                                             ; preds = %bb24
  %60 = bitcast { i64, double }* %_35 to %"core::option::Option<f64>::Some"*, !dbg !1965
  %61 = getelementptr inbounds %"core::option::Option<f64>::Some", %"core::option::Option<f64>::Some"* %60, i32 0, i32 1, !dbg !1965
  %value = load double, double* %61, align 8, !dbg !1965
  store double %value, double* %value.dbg.spill, align 8, !dbg !1965
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill, metadata !1914, metadata !DIExpression()), !dbg !1966
  %62 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Ok"*, !dbg !1967
  %63 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::ParseFloatError>::Ok"* %62, i32 0, i32 1, !dbg !1967
  store double %value, double* %63, align 8, !dbg !1967
  %64 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1967
  store i8 0, i8* %64, align 8, !dbg !1967
  br label %bb46, !dbg !1968

bb26:                                             ; preds = %bb24
  %65 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !1970
  %_41 = load i64, i64* %65, align 8, !dbg !1970
  %66 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !1971
  %_42 = load i64, i64* %66, align 8, !dbg !1971
; call core::num::dec2flt::lemire::compute_float
  %67 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hc8859f166756fda8E(i64 %_41, i64 %_42), !dbg !1972
  store { i64, i32 } %67, { i64, i32 }* %fp, align 8, !dbg !1972
  br label %bb27, !dbg !1972

bb27:                                             ; preds = %bb26
  %68 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 3, !dbg !1973
  %69 = load i8, i8* %68, align 1, !dbg !1973, !range !238
  %_45 = trunc i8 %69 to i1, !dbg !1973
  br i1 %_45, label %bb32, label %bb31, !dbg !1973

bb31:                                             ; preds = %bb27
  store i8 0, i8* %_44, align 1, !dbg !1973
  br label %bb33, !dbg !1973

bb32:                                             ; preds = %bb27
  %70 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1974
  %_47 = load i32, i32* %70, align 8, !dbg !1974
  %_46 = icmp sge i32 %_47, 0, !dbg !1974
  %71 = zext i1 %_46 to i8, !dbg !1973
  store i8 %71, i8* %_44, align 1, !dbg !1973
  br label %bb33, !dbg !1973

bb33:                                             ; preds = %bb31, %bb32
  %72 = load i8, i8* %_44, align 1, !dbg !1973, !range !238
  %73 = trunc i8 %72 to i1, !dbg !1973
  br i1 %73, label %bb29, label %bb28, !dbg !1973

bb28:                                             ; preds = %bb33
  store i8 0, i8* %_43, align 1, !dbg !1973
  br label %bb30, !dbg !1973

bb29:                                             ; preds = %bb33
  %74 = bitcast %"core::num::dec2flt::number::Number"* %num to i64*, !dbg !1975
  %_52 = load i64, i64* %74, align 8, !dbg !1975
  %75 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 1, !dbg !1976
  %_54 = load i64, i64* %75, align 8, !dbg !1976
  %_53 = add i64 %_54, 1, !dbg !1976
; call core::num::dec2flt::lemire::compute_float
  %76 = call { i64, i32 } @_ZN4core3num7dec2flt6lemire13compute_float17hc8859f166756fda8E(i64 %_52, i64 %_53), !dbg !1977
  store { i64, i32 } %76, { i64, i32 }* %_51, align 8, !dbg !1977
  br label %bb34, !dbg !1977

bb34:                                             ; preds = %bb29
; call <core::num::dec2flt::common::BiasedFp as core::cmp::PartialEq>::ne
  %_48 = call zeroext i1 @"_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17hc9d6db301fc3a3bdE"({ i64, i32 }* align 8 dereferenceable(16) %fp, { i64, i32 }* align 8 dereferenceable(16) %_51), !dbg !1978
  br label %bb35, !dbg !1978

bb35:                                             ; preds = %bb34
  %77 = zext i1 %_48 to i8, !dbg !1973
  store i8 %77, i8* %_43, align 1, !dbg !1973
  br label %bb30, !dbg !1973

bb30:                                             ; preds = %bb28, %bb35
  %78 = load i8, i8* %_43, align 1, !dbg !1973, !range !238
  %79 = trunc i8 %78 to i1, !dbg !1973
  br i1 %79, label %bb36, label %bb37, !dbg !1973

bb37:                                             ; preds = %bb36, %bb30
  %80 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1979
  %_56 = load i32, i32* %80, align 8, !dbg !1979
  %_55 = icmp slt i32 %_56, 0, !dbg !1979
  br i1 %_55, label %bb38, label %bb40, !dbg !1979

bb36:                                             ; preds = %bb30
  %81 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1980
  store i32 -1, i32* %81, align 8, !dbg !1980
  br label %bb37, !dbg !1981

bb40:                                             ; preds = %bb39, %bb37
  %82 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !1982
  %_60.0 = load i64, i64* %82, align 8, !dbg !1982
  %83 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1982
  %_60.1 = load i32, i32* %83, align 8, !dbg !1982
; call core::num::dec2flt::biased_fp_to_float
  %84 = call double @_ZN4core3num7dec2flt18biased_fp_to_float17h6a560688513527b2E(i64 %_60.0, i32 %_60.1), !dbg !1983
  store double %84, double* %float, align 8, !dbg !1983
  br label %bb41, !dbg !1983

bb38:                                             ; preds = %bb37
  %85 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 0, !dbg !1984
  %_58.0 = load [0 x i8]*, [0 x i8]** %85, align 8, !dbg !1984, !nonnull !4
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s, i32 0, i32 1, !dbg !1984
  %_58.1 = load i64, i64* %86, align 8, !dbg !1984
; call core::num::dec2flt::slow::parse_long_mantissa
  %87 = call { i64, i32 } @_ZN4core3num7dec2flt4slow19parse_long_mantissa17h2b64145d4e379df0E([0 x i8]* nonnull align 1 %_58.0, i64 %_58.1), !dbg !1985
  %_57.0 = extractvalue { i64, i32 } %87, 0, !dbg !1985
  %_57.1 = extractvalue { i64, i32 } %87, 1, !dbg !1985
  br label %bb39, !dbg !1985

bb39:                                             ; preds = %bb38
  %88 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 0, !dbg !1986
  store i64 %_57.0, i64* %88, align 8, !dbg !1986
  %89 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %fp, i32 0, i32 1, !dbg !1986
  store i32 %_57.1, i32* %89, align 8, !dbg !1986
  br label %bb40, !dbg !1987

bb41:                                             ; preds = %bb40
  %90 = getelementptr inbounds %"core::num::dec2flt::number::Number", %"core::num::dec2flt::number::Number"* %num, i32 0, i32 2, !dbg !1988
  %91 = load i8, i8* %90, align 8, !dbg !1988, !range !238
  %_61 = trunc i8 %91 to i1, !dbg !1988
  br i1 %_61, label %bb42, label %bb44, !dbg !1988

bb44:                                             ; preds = %bb43, %bb41
  %_64 = load double, double* %float, align 8, !dbg !1989
  %92 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Ok"*, !dbg !1990
  %93 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::ParseFloatError>::Ok"* %92, i32 0, i32 1, !dbg !1990
  store double %_64, double* %93, align 8, !dbg !1990
  %94 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1990
  store i8 0, i8* %94, align 8, !dbg !1990
  br label %bb49, !dbg !1944

bb42:                                             ; preds = %bb41
  %_63 = load double, double* %float, align 8, !dbg !1991
; call <f64 as core::ops::arith::Neg>::neg
  %_62 = call double @"_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h725e8e59798aaf5fE"(double %_63), !dbg !1992
  br label %bb43, !dbg !1992

bb43:                                             ; preds = %bb42
  store double %_62, double* %float, align 8, !dbg !1993
  br label %bb44, !dbg !1994

bb49:                                             ; preds = %bb48, %bb44
  %95 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i128*, !dbg !1944
  %96 = load i128, i128* %95, align 8, !dbg !1944
  ret i128 %96, !dbg !1944

bb46:                                             ; preds = %bb45, %bb25
  br label %bb47, !dbg !1954

bb21:                                             ; preds = %bb20
  %97 = bitcast { i64, double }* %_28 to i64*, !dbg !1995
  %_31 = load i64, i64* %97, align 8, !dbg !1995, !range !792
  %98 = icmp eq i64 %_31, 1, !dbg !1995
  br i1 %98, label %bb22, label %bb17, !dbg !1995

bb22:                                             ; preds = %bb21
  %99 = bitcast { i64, double }* %_28 to %"core::option::Option<f64>::Some"*, !dbg !1996
  %100 = getelementptr inbounds %"core::option::Option<f64>::Some", %"core::option::Option<f64>::Some"* %99, i32 0, i32 1, !dbg !1996
  %value2 = load double, double* %100, align 8, !dbg !1996
  store double %value2, double* %value.dbg.spill3, align 8, !dbg !1996
  call void @llvm.dbg.declare(metadata double* %value.dbg.spill3, metadata !1912, metadata !DIExpression()), !dbg !1997
  %101 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Ok"*, !dbg !1998
  %102 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::ParseFloatError>::Ok"* %101, i32 0, i32 1, !dbg !1998
  store double %value2, double* %102, align 8, !dbg !1998
  %103 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !1998
  store i8 0, i8* %103, align 8, !dbg !1998
  br label %bb45, !dbg !1954

bb17:                                             ; preds = %bb21
; call core::num::dec2flt::pfe_invalid
  %_34 = call zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h82b98a82ae1c4825E(), !dbg !1999
  br label %bb23, !dbg !1999

bb23:                                             ; preds = %bb17
  %104 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to %"core::result::Result<f64, core::num::ParseFloatError>::Err"*, !dbg !2000
  %105 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Err", %"core::result::Result<f64, core::num::ParseFloatError>::Err"* %104, i32 0, i32 1, !dbg !2000
  %106 = zext i1 %_34 to i8, !dbg !2000
  store i8 %106, i8* %105, align 1, !dbg !2000
  %107 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !2000
  store i8 1, i8* %107, align 8, !dbg !2000
  br label %bb45, !dbg !2001

bb45:                                             ; preds = %bb22, %bb23
  br label %bb46, !dbg !1954
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nounwind
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h5d8b4d52c0e39bb0E(i64* align 8 dereferenceable(8) %0, i64* align 8 dereferenceable(8) %1) unnamed_addr #0 !dbg !2002 {
start:
  %_1.dbg.spill = alloca {}, align 1
  %_2 = alloca { i64*, i64* }, align 8
  %2 = bitcast { i64*, i64* }* %_2 to i64**
  store i64* %0, i64** %2, align 8
  %3 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1
  store i64* %1, i64** %3, align 8
  call void @llvm.dbg.declare(metadata {}* %_1.dbg.spill, metadata !2009, metadata !DIExpression()), !dbg !2018
  call void @llvm.dbg.declare(metadata { i64*, i64* }* %_2, metadata !2010, metadata !DIExpression()), !dbg !2018
  %4 = bitcast { i64*, i64* }* %_2 to i64**, !dbg !2018
  %5 = load i64*, i64** %4, align 8, !dbg !2018, !nonnull !4
  %6 = getelementptr inbounds { i64*, i64* }, { i64*, i64* }* %_2, i32 0, i32 1, !dbg !2018
  %7 = load i64*, i64** %6, align 8, !dbg !2018, !nonnull !4
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %8 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc38d608d3e030fabE"(i64* align 8 dereferenceable(8) %5, i64* align 8 dereferenceable(8) %7), !dbg !2018, !range !667
  br label %bb1, !dbg !2018

bb1:                                              ; preds = %start
  ret i8 %8, !dbg !2018
}

; core::ptr::slice_from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc86f76d7a6485995E(i8* %data, i64 %len) unnamed_addr #0 !dbg !2019 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2024, metadata !DIExpression()), !dbg !2026
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2025, metadata !DIExpression()), !dbg !2027
; call core::ptr::const_ptr::<impl *const T>::cast
  %_3 = call {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hef9ad36df408ff39E"(i8* %data), !dbg !2028
  br label %bb1, !dbg !2028

bb1:                                              ; preds = %start
; call core::ptr::metadata::from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3edb511186dd2debE({}* %_3, i64 %len), !dbg !2029
  %1 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2029
  %2 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2029
  br label %bb2, !dbg !2029

bb2:                                              ; preds = %bb1
  %3 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %1, 0, !dbg !2030
  %4 = insertvalue { [0 x i8]*, i64 } %3, i64 %2, 1, !dbg !2030
  ret { [0 x i8]*, i64 } %4, !dbg !2030
}

; core::ptr::drop_in_place<&num_traits::FloatErrorKind>
; Function Attrs: inlinehint nounwind
define internal void @"_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17hacc6e33a0073cd64E"(i8** %_1) unnamed_addr #0 !dbg !2031 {
start:
  %_1.dbg.spill = alloca i8**, align 8
  store i8** %_1, i8*** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8*** %_1.dbg.spill, metadata !2036, metadata !DIExpression()), !dbg !2039
  ret void, !dbg !2039
}

; core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hb5389b5bfc28251dE"(i8* %self, i8* %other) unnamed_addr #0 !dbg !2040 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2047, metadata !DIExpression()), !dbg !2049
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2048, metadata !DIExpression()), !dbg !2050
  %1 = icmp eq i8* %self, %other, !dbg !2051
  %2 = zext i1 %1 to i8, !dbg !2051
  store i8 %2, i8* %0, align 1, !dbg !2051
  %3 = load i8, i8* %0, align 1, !dbg !2051, !range !238
  %4 = trunc i8 %3 to i1, !dbg !2051
  br label %bb1, !dbg !2051

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !2052
}

; core::ptr::mut_ptr::<impl *mut T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcf7dfc9c26e0d15aE"(i8* %self) unnamed_addr #0 !dbg !2053 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2057, metadata !DIExpression()), !dbg !2058
  br label %bb1, !dbg !2059

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hb5389b5bfc28251dE"(i8* %self, i8* null), !dbg !2060
  br label %bb2, !dbg !2060

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !2061
}

; core::ptr::metadata::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core3ptr8metadata14from_raw_parts17h3edb511186dd2debE({}* %data_address, i64 %metadata) unnamed_addr #0 !dbg !2062 {
start:
  %metadata.dbg.spill = alloca i64, align 8
  %data_address.dbg.spill = alloca {}*, align 8
  %_4 = alloca { i8*, i64 }, align 8
  %_3 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  store {}* %data_address, {}** %data_address.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata {}** %data_address.dbg.spill, metadata !2069, metadata !DIExpression()), !dbg !2071
  store i64 %metadata, i64* %metadata.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %metadata.dbg.spill, metadata !2070, metadata !DIExpression()), !dbg !2072
  %0 = bitcast { i8*, i64 }* %_4 to {}**, !dbg !2073
  store {}* %data_address, {}** %0, align 8, !dbg !2073
  %1 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !2073
  store i64 %metadata, i64* %1, align 8, !dbg !2073
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { i8*, i64 }*, !dbg !2074
  %3 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 0, !dbg !2074
  %4 = load i8*, i8** %3, align 8, !dbg !2074
  %5 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %_4, i32 0, i32 1, !dbg !2074
  %6 = load i64, i64* %5, align 8, !dbg !2074
  %7 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 0, !dbg !2074
  store i8* %4, i8** %7, align 8, !dbg !2074
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %2, i32 0, i32 1, !dbg !2074
  store i64 %6, i64* %8, align 8, !dbg !2074
  %9 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_3 to { [0 x i8]*, i64 }*, !dbg !2074
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 0, !dbg !2074
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2074
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %9, i32 0, i32 1, !dbg !2074
  %13 = load i64, i64* %12, align 8, !dbg !2074
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !2075
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !2075
  ret { [0 x i8]*, i64 } %15, !dbg !2075
}

; core::ptr::metadata::metadata
; Function Attrs: inlinehint nounwind
define i64 @_ZN4core3ptr8metadata8metadata17h50978647204dcd7aE([0 x i8]* %ptr.0, i64 %ptr.1) unnamed_addr #0 !dbg !2076 {
start:
  %ptr.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_2 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 0
  store [0 x i8]* %ptr.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %ptr.dbg.spill, i32 0, i32 1
  store i64 %ptr.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %ptr.dbg.spill, metadata !2080, metadata !DIExpression()), !dbg !2081
  %2 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { [0 x i8]*, i64 }*, !dbg !2082
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 0, !dbg !2082
  store [0 x i8]* %ptr.0, [0 x i8]** %3, align 8, !dbg !2082
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %2, i32 0, i32 1, !dbg !2082
  store i64 %ptr.1, i64* %4, align 8, !dbg !2082
  %5 = bitcast %"core::ptr::metadata::PtrRepr<[u8]>"* %_2 to { i8*, i64 }*, !dbg !2082
  %6 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %5, i32 0, i32 1, !dbg !2082
  %7 = load i64, i64* %6, align 8, !dbg !2082
  ret i64 %7, !dbg !2083
}

; core::ptr::non_null::NonNull<T>::new_unchecked
; Function Attrs: inlinehint nounwind
define nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h232f62df0a4a4fe7E"(i8* %ptr) unnamed_addr #0 !dbg !2084 {
start:
  %ptr.dbg.spill = alloca i8*, align 8
  %0 = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2089, metadata !DIExpression()), !dbg !2090
  store i8* %ptr, i8** %0, align 8, !dbg !2091
  %1 = load i8*, i8** %0, align 8, !dbg !2092, !nonnull !4
  ret i8* %1, !dbg !2092
}

; core::ptr::non_null::NonNull<T>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %self) unnamed_addr #0 !dbg !2093 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2097, metadata !DIExpression()), !dbg !2098
  ret i8* %self, !dbg !2099
}

; core::ptr::const_ptr::<impl *const T>::guaranteed_eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc6462d3e0c2eb04dE"(i8* %self, i8* %other) unnamed_addr #0 !dbg !2100 {
start:
  %0 = alloca i8, align 1
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2104, metadata !DIExpression()), !dbg !2106
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !2105, metadata !DIExpression()), !dbg !2107
  %1 = icmp eq i8* %self, %other, !dbg !2108
  %2 = zext i1 %1 to i8, !dbg !2108
  store i8 %2, i8* %0, align 1, !dbg !2108
  %3 = load i8, i8* %0, align 1, !dbg !2108, !range !238
  %4 = trunc i8 %3 to i1, !dbg !2108
  br label %bb1, !dbg !2108

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !2109
}

; core::ptr::const_ptr::<impl *const T>::cast
; Function Attrs: inlinehint nounwind
define {}* @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hef9ad36df408ff39E"(i8* %self) unnamed_addr #0 !dbg !2110 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2114, metadata !DIExpression()), !dbg !2117
  %0 = bitcast i8* %self to {}*, !dbg !2118
  ret {}* %0, !dbg !2119
}

; core::ptr::const_ptr::<impl *const T>::is_null
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h28ca124dcefc1f68E"(i8* %self) unnamed_addr #0 !dbg !2120 {
start:
  %self.dbg.spill = alloca i8*, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !2124, metadata !DIExpression()), !dbg !2125
  br label %bb1, !dbg !2126

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::guaranteed_eq
  %0 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc6462d3e0c2eb04dE"(i8* %self, i8* null), !dbg !2127
  br label %bb2, !dbg !2127

bb2:                                              ; preds = %bb1
  ret i1 %0, !dbg !2128
}

; core::ptr::const_ptr::<impl *const [T]>::len
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hec0269ed6419e823E"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !2129 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2132, metadata !DIExpression()), !dbg !2133
; call core::ptr::metadata::metadata
  %2 = call i64 @_ZN4core3ptr8metadata8metadata17h50978647204dcd7aE([0 x i8]* %self.0, i64 %self.1), !dbg !2134
  br label %bb1, !dbg !2134

bb1:                                              ; preds = %start
  ret i64 %2, !dbg !2135
}

; core::ptr::const_ptr::<impl *const [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6bb91fbf2dc375fbE"([0 x i8]* %self.0, i64 %self.1) unnamed_addr #0 !dbg !2136 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2140, metadata !DIExpression()), !dbg !2141
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !2142
  ret i8* %2, !dbg !2143
}

; core::str::validations::unwrap_or_0
; Function Attrs: inlinehint nounwind
define internal i8 @_ZN4core3str11validations11unwrap_or_017h67cb83ba25f81120E(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 !dbg !2144 {
start:
  %byte.dbg.spill = alloca i8, align 1
  %1 = alloca i8, align 1
  %opt = alloca i8*, align 8
  store i8* %0, i8** %opt, align 8
  call void @llvm.dbg.declare(metadata i8** %opt, metadata !2160, metadata !DIExpression()), !dbg !2163
  %2 = bitcast i8** %opt to {}**, !dbg !2164
  %3 = load {}*, {}** %2, align 8, !dbg !2164
  %4 = icmp eq {}* %3, null, !dbg !2164
  %_2 = select i1 %4, i64 0, i64 1, !dbg !2164
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !2165

bb2:                                              ; preds = %start
  unreachable, !dbg !2164

bb1:                                              ; preds = %start
  store i8 0, i8* %1, align 1, !dbg !2166
  br label %bb4, !dbg !2166

bb3:                                              ; preds = %start
  %5 = load i8*, i8** %opt, align 8, !dbg !2167, !nonnull !4
  %byte = load i8, i8* %5, align 1, !dbg !2167
  store i8 %byte, i8* %byte.dbg.spill, align 1, !dbg !2167
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !2161, metadata !DIExpression()), !dbg !2168
  store i8 %byte, i8* %1, align 1, !dbg !2169
  br label %bb4, !dbg !2170

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8, i8* %1, align 1, !dbg !2171
  ret i8 %6, !dbg !2171
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nounwind
define { i32, i32 } @_ZN4core3str11validations15next_code_point17he73579e4f5eff6b8E({ i8*, i8* }* align 8 dereferenceable(16) %bytes) unnamed_addr #0 !dbg !2172 {
start:
  %w.dbg.spill = alloca i8, align 1
  %y_z.dbg.spill = alloca i32, align 4
  %z.dbg.spill = alloca i8, align 1
  %y.dbg.spill = alloca i8, align 1
  %init.dbg.spill = alloca i32, align 4
  %x.dbg.spill = alloca i8, align 1
  %val.dbg.spill = alloca i8*, align 8
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %bytes.dbg.spill = alloca { i8*, i8* }*, align 8
  %ch = alloca i32, align 4
  %_4 = alloca i8*, align 8
  %0 = alloca { i32, i32 }, align 4
  store { i8*, i8* }* %bytes, { i8*, i8* }** %bytes.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %bytes.dbg.spill, metadata !2189, metadata !DIExpression()), !dbg !2208
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !2192, metadata !DIExpression()), !dbg !2209
  call void @llvm.dbg.declare(metadata i32* %ch, metadata !2200, metadata !DIExpression()), !dbg !2210
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_5 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes), !dbg !2211
  br label %bb1, !dbg !2211

bb1:                                              ; preds = %start
; call <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %1 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h604e3fef0399fad4E"(i8* align 1 dereferenceable_or_null(1) %_5), !dbg !2211
  store i8* %1, i8** %_4, align 8, !dbg !2211
  br label %bb2, !dbg !2211

bb2:                                              ; preds = %bb1
  %2 = bitcast i8** %_4 to {}**, !dbg !2211
  %3 = load {}*, {}** %2, align 8, !dbg !2211
  %4 = icmp eq {}* %3, null, !dbg !2211
  %_7 = select i1 %4, i64 1, i64 0, !dbg !2211
  switch i64 %_7, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2211

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2211

bb3:                                              ; preds = %bb2
  %val = load i8*, i8** %_4, align 8, !dbg !2211, !nonnull !4
  store i8* %val, i8** %val.dbg.spill, align 8, !dbg !2211
  call void @llvm.dbg.declare(metadata i8** %val.dbg.spill, metadata !2194, metadata !DIExpression()), !dbg !2212
  %x = load i8, i8* %val, align 1, !dbg !2213
  store i8 %x, i8* %x.dbg.spill, align 1, !dbg !2213
  call void @llvm.dbg.declare(metadata i8* %x.dbg.spill, metadata !2190, metadata !DIExpression()), !dbg !2214
  %_11 = icmp ult i8 %x, -128, !dbg !2215
  br i1 %_11, label %bb7, label %bb8, !dbg !2215

bb5:                                              ; preds = %bb2
; call <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %5 = call { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h02c92a3856b0b191E"(), !dbg !2216
  store { i32, i32 } %5, { i32, i32 }* %0, align 4, !dbg !2216
  br label %bb6, !dbg !2216

bb6:                                              ; preds = %bb5
  br label %bb23, !dbg !2217

bb23:                                             ; preds = %bb7, %bb6
  br label %bb24, !dbg !2219

bb8:                                              ; preds = %bb3
; call core::str::validations::utf8_first_byte
  %init = call i32 @_ZN4core3str11validations15utf8_first_byte17h22df06b668388e5fE(i8 %x, i32 2), !dbg !2220
  store i32 %init, i32* %init.dbg.spill, align 4, !dbg !2220
  call void @llvm.dbg.declare(metadata i32* %init.dbg.spill, metadata !2196, metadata !DIExpression()), !dbg !2221
  br label %bb9, !dbg !2220

bb7:                                              ; preds = %bb3
  %_13 = zext i8 %x to i32, !dbg !2222
  %6 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*, !dbg !2223
  %7 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %6, i32 0, i32 1, !dbg !2223
  store i32 %_13, i32* %7, align 4, !dbg !2223
  %8 = bitcast { i32, i32 }* %0 to i32*, !dbg !2223
  store i32 1, i32* %8, align 4, !dbg !2223
  br label %bb23, !dbg !2224

bb24:                                             ; preds = %bb22, %bb23
  %9 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !2219
  %10 = load i32, i32* %9, align 4, !dbg !2219, !range !1207
  %11 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !2219
  %12 = load i32, i32* %11, align 4, !dbg !2219
  %13 = insertvalue { i32, i32 } undef, i32 %10, 0, !dbg !2219
  %14 = insertvalue { i32, i32 } %13, i32 %12, 1, !dbg !2219
  ret { i32, i32 } %14, !dbg !2219

bb9:                                              ; preds = %bb8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_18 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes), !dbg !2226
  br label %bb10, !dbg !2226

bb10:                                             ; preds = %bb9
; call core::str::validations::unwrap_or_0
  %y = call i8 @_ZN4core3str11validations11unwrap_or_017h67cb83ba25f81120E(i8* align 1 dereferenceable_or_null(1) %_18), !dbg !2227
  store i8 %y, i8* %y.dbg.spill, align 1, !dbg !2227
  call void @llvm.dbg.declare(metadata i8* %y.dbg.spill, metadata !2198, metadata !DIExpression()), !dbg !2228
  br label %bb11, !dbg !2227

bb11:                                             ; preds = %bb10
; call core::str::validations::utf8_acc_cont_byte
  %15 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17hc40912839e1d8ef4E(i32 %init, i8 %y), !dbg !2229
  store i32 %15, i32* %ch, align 4, !dbg !2229
  br label %bb12, !dbg !2229

bb12:                                             ; preds = %bb11
  %_23 = icmp uge i8 %x, -32, !dbg !2230
  br i1 %_23, label %bb13, label %bb22, !dbg !2230

bb22:                                             ; preds = %bb21, %bb12
  %_47 = load i32, i32* %ch, align 4, !dbg !2231
  %16 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*, !dbg !2232
  %17 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %16, i32 0, i32 1, !dbg !2232
  store i32 %_47, i32* %17, align 4, !dbg !2232
  %18 = bitcast { i32, i32 }* %0 to i32*, !dbg !2232
  store i32 1, i32* %18, align 4, !dbg !2232
  br label %bb24, !dbg !2219

bb13:                                             ; preds = %bb12
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_26 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes), !dbg !2233
  br label %bb14, !dbg !2233

bb14:                                             ; preds = %bb13
; call core::str::validations::unwrap_or_0
  %z = call i8 @_ZN4core3str11validations11unwrap_or_017h67cb83ba25f81120E(i8* align 1 dereferenceable_or_null(1) %_26), !dbg !2234
  store i8 %z, i8* %z.dbg.spill, align 1, !dbg !2234
  call void @llvm.dbg.declare(metadata i8* %z.dbg.spill, metadata !2202, metadata !DIExpression()), !dbg !2235
  br label %bb15, !dbg !2234

bb15:                                             ; preds = %bb14
  %_30 = and i8 %y, 63, !dbg !2236
  %_29 = zext i8 %_30 to i32, !dbg !2236
; call core::str::validations::utf8_acc_cont_byte
  %y_z = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17hc40912839e1d8ef4E(i32 %_29, i8 %z), !dbg !2237
  store i32 %y_z, i32* %y_z.dbg.spill, align 4, !dbg !2237
  call void @llvm.dbg.declare(metadata i32* %y_z.dbg.spill, metadata !2204, metadata !DIExpression()), !dbg !2238
  br label %bb16, !dbg !2237

bb16:                                             ; preds = %bb15
  %_33 = shl i32 %init, 12, !dbg !2239
  %19 = or i32 %_33, %y_z, !dbg !2240
  store i32 %19, i32* %ch, align 4, !dbg !2240
  %_36 = icmp uge i8 %x, -16, !dbg !2241
  br i1 %_36, label %bb17, label %bb21, !dbg !2241

bb21:                                             ; preds = %bb20, %bb16
  br label %bb22, !dbg !2242

bb17:                                             ; preds = %bb16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %_39 = call align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E"({ i8*, i8* }* align 8 dereferenceable(16) %bytes), !dbg !2243
  br label %bb18, !dbg !2243

bb18:                                             ; preds = %bb17
; call core::str::validations::unwrap_or_0
  %w = call i8 @_ZN4core3str11validations11unwrap_or_017h67cb83ba25f81120E(i8* align 1 dereferenceable_or_null(1) %_39), !dbg !2244
  store i8 %w, i8* %w.dbg.spill, align 1, !dbg !2244
  call void @llvm.dbg.declare(metadata i8* %w.dbg.spill, metadata !2206, metadata !DIExpression()), !dbg !2245
  br label %bb19, !dbg !2244

bb19:                                             ; preds = %bb18
  %_42 = and i32 %init, 7, !dbg !2246
  %_41 = shl i32 %_42, 18, !dbg !2246
; call core::str::validations::utf8_acc_cont_byte
  %_44 = call i32 @_ZN4core3str11validations18utf8_acc_cont_byte17hc40912839e1d8ef4E(i32 %y_z, i8 %w), !dbg !2247
  br label %bb20, !dbg !2247

bb20:                                             ; preds = %bb19
  %20 = or i32 %_41, %_44, !dbg !2248
  store i32 %20, i32* %ch, align 4, !dbg !2248
  br label %bb21, !dbg !2249
}

; core::str::validations::utf8_first_byte
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str11validations15utf8_first_byte17h22df06b668388e5fE(i8 %byte, i32 %width) unnamed_addr #0 !dbg !2250 {
start:
  %width.dbg.spill = alloca i32, align 4
  %byte.dbg.spill = alloca i8, align 1
  store i8 %byte, i8* %byte.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !2254, metadata !DIExpression()), !dbg !2256
  store i32 %width, i32* %width.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %width.dbg.spill, metadata !2255, metadata !DIExpression()), !dbg !2257
  %0 = trunc i32 %width to i8, !dbg !2258
  %1 = and i8 %0, 7, !dbg !2258
  %_5 = lshr i8 127, %1, !dbg !2258
  %_3 = and i8 %byte, %_5, !dbg !2259
  %2 = zext i8 %_3 to i32, !dbg !2259
  ret i32 %2, !dbg !2260
}

; core::str::validations::utf8_acc_cont_byte
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core3str11validations18utf8_acc_cont_byte17hc40912839e1d8ef4E(i32 %ch, i8 %byte) unnamed_addr #0 !dbg !2261 {
start:
  %byte.dbg.spill = alloca i8, align 1
  %ch.dbg.spill = alloca i32, align 4
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !2265, metadata !DIExpression()), !dbg !2267
  store i8 %byte, i8* %byte.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %byte.dbg.spill, metadata !2266, metadata !DIExpression()), !dbg !2268
  %_3 = shl i32 %ch, 6, !dbg !2269
  %_6 = and i8 %byte, 63, !dbg !2270
  %_5 = zext i8 %_6 to i32, !dbg !2270
  %0 = or i32 %_3, %_5, !dbg !2269
  ret i32 %0, !dbg !2271
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h139dd18bcb60623aE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2272 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %b.dbg.spill = alloca i8, align 1
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca i8*, align 8
  %1 = alloca i8, align 1
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2276, metadata !DIExpression()), !dbg !2280
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2277, metadata !DIExpression()), !dbg !2281
  %4 = icmp eq i64 %index, 0, !dbg !2282
  br i1 %4, label %bb1, label %bb2, !dbg !2282

bb1:                                              ; preds = %start
  store i8 1, i8* %1, align 1, !dbg !2283
  br label %bb10, !dbg !2284

bb2:                                              ; preds = %start
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, i64* %6, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !2285
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2287
  store [0 x i8]* %self.0, [0 x i8]** %7, align 8, !dbg !2287
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2287
  store i64 %self.1, i64* %8, align 8, !dbg !2287
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2287
  %10 = load [0 x i8]*, [0 x i8]** %9, align 8, !dbg !2287, !nonnull !4
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2287
  %12 = load i64, i64* %11, align 8, !dbg !2287
  %13 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %10, 0, !dbg !2288
  %14 = insertvalue { [0 x i8]*, i64 } %13, i64 %12, 1, !dbg !2288
  %_6.0 = extractvalue { [0 x i8]*, i64 } %14, 0, !dbg !2289
  %_6.1 = extractvalue { [0 x i8]*, i64 } %14, 1, !dbg !2289
  br label %bb3, !dbg !2289

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::get
  %15 = call align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h539b0c87fcc1bf17E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, i64 %index), !dbg !2289
  store i8* %15, i8** %_4, align 8, !dbg !2289
  br label %bb4, !dbg !2289

bb4:                                              ; preds = %bb3
  %16 = bitcast i8** %_4 to {}**, !dbg !2289
  %17 = load {}*, {}** %16, align 8, !dbg !2289
  %18 = icmp eq {}* %17, null, !dbg !2289
  %_9 = select i1 %18, i64 0, i64 1, !dbg !2289
  switch i64 %_9, label %bb6 [
    i64 0, label %bb7
    i64 1, label %bb5
  ], !dbg !2290

bb6:                                              ; preds = %bb4
  unreachable, !dbg !2289

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_11 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2291
  br label %bb8, !dbg !2291

bb5:                                              ; preds = %bb4
  %19 = load i8*, i8** %_4, align 8, !dbg !2292, !nonnull !4
  %b = load i8, i8* %19, align 1, !dbg !2292
  store i8 %b, i8* %b.dbg.spill, align 1, !dbg !2292
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !2278, metadata !DIExpression()), !dbg !2293
  %20 = icmp sge i8 %b, -64, !dbg !2294
  %21 = zext i1 %20 to i8, !dbg !2294
  store i8 %21, i8* %1, align 1, !dbg !2294
  br label %bb9, !dbg !2295

bb9:                                              ; preds = %bb8, %bb5
  br label %bb10, !dbg !2284

bb8:                                              ; preds = %bb7
  %22 = icmp eq i64 %index, %_11, !dbg !2296
  %23 = zext i1 %22 to i8, !dbg !2296
  store i8 %23, i8* %1, align 1, !dbg !2296
  br label %bb9, !dbg !2297

bb10:                                             ; preds = %bb1, %bb9
  %24 = load i8, i8* %1, align 1, !dbg !2284, !range !238
  %25 = trunc i8 %24 to i1, !dbg !2284
  ret i1 %25, !dbg !2284
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nounwind
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2298 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2302, metadata !DIExpression()), !dbg !2303
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !2304
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2306
  store [0 x i8]* %self.0, [0 x i8]** %5, align 8, !dbg !2306
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2306
  store i64 %self.1, i64* %6, align 8, !dbg !2306
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2306
  %8 = load [0 x i8]*, [0 x i8]** %7, align 8, !dbg !2306, !nonnull !4
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2306
  %10 = load i64, i64* %9, align 8, !dbg !2306
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %8, 0, !dbg !2307
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !2307
  %_3.0 = extractvalue { [0 x i8]*, i64 } %12, 0, !dbg !2308
  %_3.1 = extractvalue { [0 x i8]*, i64 } %12, 1, !dbg !2308
  br label %bb1, !dbg !2308

bb1:                                              ; preds = %start
  ret i64 %_3.1, !dbg !2309
}

; core::str::<impl str>::bytes
; Function Attrs: inlinehint nounwind
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hbe664ab4ae5d6b2fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2310 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2314, metadata !DIExpression()), !dbg !2315
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !2316
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2318
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2318
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2318
  store i64 %self.1, i64* %7, align 8, !dbg !2318
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2318
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !2318, !nonnull !4
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2318
  %11 = load i64, i64* %10, align 8, !dbg !2318
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !2319
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !2319
  %_5.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !2320
  %_5.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !2320
  br label %bb1, !dbg !2320

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %14 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !2320
  %_3.0 = extractvalue { i8*, i8* } %14, 0, !dbg !2320
  %_3.1 = extractvalue { i8*, i8* } %14, 1, !dbg !2320
  br label %bb2, !dbg !2320

bb2:                                              ; preds = %bb1
; call core::iter::traits::iterator::Iterator::copied
  %15 = call { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h0ba0ff0396782e6fE(i8* nonnull %_3.0, i8* %_3.1), !dbg !2320
  %_2.0 = extractvalue { i8*, i8* } %15, 0, !dbg !2320
  %_2.1 = extractvalue { i8*, i8* } %15, 1, !dbg !2320
  br label %bb3, !dbg !2320

bb3:                                              ; preds = %bb2
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2321
  store i8* %_2.0, i8** %16, align 8, !dbg !2321
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2321
  store i8* %_2.1, i8** %17, align 8, !dbg !2321
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2322
  %19 = load i8*, i8** %18, align 8, !dbg !2322, !nonnull !4
  %20 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2322
  %21 = load i8*, i8** %20, align 8, !dbg !2322
  %22 = insertvalue { i8*, i8* } undef, i8* %19, 0, !dbg !2322
  %23 = insertvalue { i8*, i8* } %22, i8* %21, 1, !dbg !2322
  ret { i8*, i8* } %23, !dbg !2322
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nounwind
define internal { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2323 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { i8*, i8* }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2327, metadata !DIExpression()), !dbg !2328
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !2329
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2331
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8, !dbg !2331
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2331
  store i64 %self.1, i64* %7, align 8, !dbg !2331
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2331
  %9 = load [0 x i8]*, [0 x i8]** %8, align 8, !dbg !2331, !nonnull !4
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2331
  %11 = load i64, i64* %10, align 8, !dbg !2331
  %12 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !2332
  %13 = insertvalue { [0 x i8]*, i64 } %12, i64 %11, 1, !dbg !2332
  %_4.0 = extractvalue { [0 x i8]*, i64 } %13, 0, !dbg !2333
  %_4.1 = extractvalue { [0 x i8]*, i64 } %13, 1, !dbg !2333
  br label %bb1, !dbg !2333

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::iter
  %14 = call { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E"([0 x i8]* nonnull align 1 %_4.0, i64 %_4.1), !dbg !2333
  %_2.0 = extractvalue { i8*, i8* } %14, 0, !dbg !2333
  %_2.1 = extractvalue { i8*, i8* } %14, 1, !dbg !2333
  br label %bb2, !dbg !2333

bb2:                                              ; preds = %bb1
  %15 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2334
  store i8* %_2.0, i8** %15, align 8, !dbg !2334
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2334
  store i8* %_2.1, i8** %16, align 8, !dbg !2334
  %17 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 0, !dbg !2335
  %18 = load i8*, i8** %17, align 8, !dbg !2335, !nonnull !4
  %19 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %1, i32 0, i32 1, !dbg !2335
  %20 = load i8*, i8** %19, align 8, !dbg !2335
  %21 = insertvalue { i8*, i8* } undef, i8* %18, 0, !dbg !2335
  %22 = insertvalue { i8*, i8* } %21, i8* %20, 1, !dbg !2335
  ret { i8*, i8* } %22, !dbg !2335
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nounwind
define i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2336 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2357, metadata !DIExpression()), !dbg !2360
; call core::num::<impl core::str::traits::FromStr for usize>::from_str
  %4 = call i128 @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hc82c9a7f4630bbbdE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2361
  store i128 %4, i128* %0, align 8, !dbg !2361
  %5 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %1 to i8*, !dbg !2361
  %6 = bitcast i128* %0 to i8*, !dbg !2361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !2361
  br label %bb1, !dbg !2361

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %1 to i128*, !dbg !2362
  %8 = load i128, i128* %7, align 8, !dbg !2362
  ret i128 %8, !dbg !2362
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nounwind
define i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17haddabf03b8561c9cE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2363 {
start:
  %0 = alloca i128, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f64, core::num::ParseFloatError>", align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2365, metadata !DIExpression()), !dbg !2366
; call core::num::dec2flt::<impl core::str::traits::FromStr for f64>::from_str
  %4 = call i128 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17h91e473d99ed96614E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2367
  store i128 %4, i128* %0, align 8, !dbg !2367
  %5 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i8*, !dbg !2367
  %6 = bitcast i128* %0 to i8*, !dbg !2367
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !2367
  br label %bb1, !dbg !2367

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %1 to i128*, !dbg !2368
  %8 = load i128, i128* %7, align 8, !dbg !2368
  ret i128 %8, !dbg !2368
}

; core::str::<impl str>::parse
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he99c810f82e6b0d7E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2369 {
start:
  %0 = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca %"core::result::Result<f32, core::num::ParseFloatError>", align 4
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2371, metadata !DIExpression()), !dbg !2372
; call core::num::dec2flt::<impl core::str::traits::FromStr for f32>::from_str
  %4 = call i64 @"_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17hfddf7cf9edc5ca06E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2373
  store i64 %4, i64* %0, align 8, !dbg !2373
  %5 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i8*, !dbg !2373
  %6 = bitcast i64* %0 to i8*, !dbg !2373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 8, i1 false), !dbg !2373
  br label %bb1, !dbg !2373

bb1:                                              ; preds = %start
  %7 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %1 to i64*, !dbg !2374
  %8 = load i64, i64* %7, align 4, !dbg !2374
  ret i64 %8, !dbg !2374
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hcd0145b4087fba4fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2375 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2379, metadata !DIExpression()), !dbg !2380
; call core::str::<impl str>::len
  %_2 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2381
  br label %bb1, !dbg !2381

bb1:                                              ; preds = %start
  %2 = icmp eq i64 %_2, 0, !dbg !2381
  ret i1 %2, !dbg !2382
}

; core::str::iter::Chars::as_str
; Function Attrs: inlinehint nounwind
define internal { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h676e0f9eaa5200d8E({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !2383 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2389, metadata !DIExpression()), !dbg !2390
; call core::slice::iter::Iter<T>::as_slice
  %0 = call { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h720044fad6a2487fE"({ i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !2391
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2391
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2391
  br label %bb1, !dbg !2391

bb1:                                              ; preds = %start
; call core::str::converts::from_utf8_unchecked
  %1 = call { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hce44fbdce675666bE([0 x i8]* nonnull align 1 %_3.0, i64 %_3.1), !dbg !2392
  %2 = extractvalue { [0 x i8]*, i64 } %1, 0, !dbg !2392
  %3 = extractvalue { [0 x i8]*, i64 } %1, 1, !dbg !2392
  br label %bb2, !dbg !2392

bb2:                                              ; preds = %bb1
  %4 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %2, 0, !dbg !2393
  %5 = insertvalue { [0 x i8]*, i64 } %4, i64 %3, 1, !dbg !2393
  ret { [0 x i8]*, i64 } %5, !dbg !2393
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
; Function Attrs: inlinehint nounwind
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h71421a3984187c97E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2394 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %len.dbg.spill = alloca i64, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill1 = alloca { [0 x i8]*, i64 }, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2405, metadata !DIExpression()), !dbg !2413
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2406, metadata !DIExpression()), !dbg !2414
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 0, !dbg !2415
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8, !dbg !2415
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill1, i32 0, i32 1, !dbg !2415
  store i64 %slice.1, i64* %4, align 8, !dbg !2415
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill1, metadata !2407, metadata !DIExpression()), !dbg !2416
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6bb91fbf2dc375fbE"([0 x i8]* %slice.0, i64 %slice.1), !dbg !2417
  br label %bb1, !dbg !2417

bb1:                                              ; preds = %start
  store i8* %_6, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !262, metadata !DIExpression()), !dbg !2418
  store i64 %self, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !270, metadata !DIExpression()), !dbg !2420
  store i8* %_6, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !274, metadata !DIExpression()), !dbg !2421
  store i64 %self, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !280, metadata !DIExpression()), !dbg !2423
  %5 = getelementptr inbounds i8, i8* %_6, i64 %self, !dbg !2424
  store i8* %5, i8** %0, align 8, !dbg !2424
  %6 = load i8*, i8** %0, align 8, !dbg !2424
  store i8* %6, i8** %ptr.dbg.spill, align 8, !dbg !2417
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2409, metadata !DIExpression()), !dbg !2425
  br label %bb2, !dbg !2417

bb2:                                              ; preds = %bb1
; call core::ptr::const_ptr::<impl *const [T]>::len
  %_10 = call i64 @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hec0269ed6419e823E"([0 x i8]* %slice.0, i64 %slice.1), !dbg !2426
  br label %bb3, !dbg !2426

bb3:                                              ; preds = %bb2
  %len = sub i64 %_10, %self, !dbg !2426
  store i64 %len, i64* %len.dbg.spill, align 8, !dbg !2426
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2411, metadata !DIExpression()), !dbg !2427
; call core::ptr::slice_from_raw_parts
  %7 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc86f76d7a6485995E(i8* %6, i64 %len), !dbg !2428
  %_13.0 = extractvalue { [0 x i8]*, i64 } %7, 0, !dbg !2428
  %_13.1 = extractvalue { [0 x i8]*, i64 } %7, 1, !dbg !2428
  br label %bb4, !dbg !2428

bb4:                                              ; preds = %bb3
  %8 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_13.0, 0, !dbg !2429
  %9 = insertvalue { [0 x i8]*, i64 } %8, i64 %_13.1, 1, !dbg !2429
  ret { [0 x i8]*, i64 } %9, !dbg !2429
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nounwind
define internal { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h210cb0f409e02ebfE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2430 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca { i8*, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2446, metadata !DIExpression()), !dbg !2448
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2447, metadata !DIExpression()), !dbg !2449
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h139dd18bcb60623aE"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %self), !dbg !2450
  br label %bb1, !dbg !2450

bb1:                                              ; preds = %start
  br i1 %_3, label %bb2, label %bb4, !dbg !2450

bb4:                                              ; preds = %bb1
  %3 = bitcast { i8*, i64 }* %0 to {}**, !dbg !2451
  store {}* null, {}** %3, align 8, !dbg !2451
  br label %bb5, !dbg !2452

bb2:                                              ; preds = %bb1
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked
  %4 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h71421a3984187c97E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !2453
  %_8.0 = extractvalue { [0 x i8]*, i64 } %4, 0, !dbg !2453
  %_8.1 = extractvalue { [0 x i8]*, i64 } %4, 1, !dbg !2453
  br label %bb3, !dbg !2453

bb3:                                              ; preds = %bb2
  %5 = bitcast { i8*, i64 }* %0 to { [0 x i8]*, i64 }*, !dbg !2454
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !2454
  store [0 x i8]* %_8.0, [0 x i8]** %6, align 8, !dbg !2454
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !2454
  store i64 %_8.1, i64* %7, align 8, !dbg !2454
  br label %bb5, !dbg !2452

bb5:                                              ; preds = %bb4, %bb3
  %8 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 0, !dbg !2455
  %9 = load i8*, i8** %8, align 8, !dbg !2455
  %10 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %0, i32 0, i32 1, !dbg !2455
  %11 = load i64, i64* %10, align 8, !dbg !2455
  %12 = insertvalue { i8*, i64 } undef, i8* %9, 0, !dbg !2455
  %13 = insertvalue { i8*, i64 } %12, i64 %11, 1, !dbg !2455
  ret { i8*, i64 } %13, !dbg !2455
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nounwind
define internal { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hddb1ebded64afd8bE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, %"core::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2456 {
start:
  %s.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i64, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %_9 = alloca { i8*, i64 }, align 8
  %_5 = alloca { i64, i64 }, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !2460, metadata !DIExpression()), !dbg !2467
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2461, metadata !DIExpression()), !dbg !2468
; call core::str::<impl str>::len
  %_7 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !2469
  br label %bb1, !dbg !2469

bb1:                                              ; preds = %start
  %3 = bitcast { i64, i64 }* %_5 to i64*, !dbg !2470
  store i64 %self, i64* %3, align 8, !dbg !2470
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !2470
  store i64 %_7, i64* %4, align 8, !dbg !2470
  %5 = bitcast { i64, i64 }* %_5 to i64*, !dbg !2471
  %start1 = load i64, i64* %5, align 8, !dbg !2471
  store i64 %start1, i64* %start.dbg.spill, align 8, !dbg !2471
  call void @llvm.dbg.declare(metadata i64* %start.dbg.spill, metadata !2462, metadata !DIExpression()), !dbg !2472
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_5, i32 0, i32 1, !dbg !2473
  %end = load i64, i64* %6, align 8, !dbg !2473
  store i64 %end, i64* %end.dbg.spill, align 8, !dbg !2473
  call void @llvm.dbg.declare(metadata i64* %end.dbg.spill, metadata !2464, metadata !DIExpression()), !dbg !2474
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %7 = call { i8*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h210cb0f409e02ebfE"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !2475
  store { i8*, i64 } %7, { i8*, i64 }* %_9, align 8, !dbg !2475
  br label %bb2, !dbg !2475

bb2:                                              ; preds = %bb1
  %8 = bitcast { i8*, i64 }* %_9 to {}**, !dbg !2475
  %9 = load {}*, {}** %8, align 8, !dbg !2475
  %10 = icmp eq {}* %9, null, !dbg !2475
  %_12 = select i1 %10, i64 0, i64 1, !dbg !2475
  switch i64 %_12, label %bb4 [
    i64 0, label %bb3
    i64 1, label %bb5
  ], !dbg !2476

bb4:                                              ; preds = %bb2
  unreachable, !dbg !2475

bb3:                                              ; preds = %bb2
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h4dd208e08c39fbe7E([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1, i64 %start1, i64 %end, %"core::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2477
  unreachable, !dbg !2477

bb5:                                              ; preds = %bb2
  %11 = bitcast { i8*, i64 }* %_9 to { [0 x i8]*, i64 }*, !dbg !2478
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 0, !dbg !2478
  %s.0 = load [0 x i8]*, [0 x i8]** %12, align 8, !dbg !2478, !nonnull !4
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %11, i32 0, i32 1, !dbg !2478
  %s.1 = load i64, i64* %13, align 8, !dbg !2478
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 0, !dbg !2478
  store [0 x i8]* %s.0, [0 x i8]** %14, align 8, !dbg !2478
  %15 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %s.dbg.spill, i32 0, i32 1, !dbg !2478
  store i64 %s.1, i64* %15, align 8, !dbg !2478
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %s.dbg.spill, metadata !2465, metadata !DIExpression()), !dbg !2479
  %16 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %s.0, 0, !dbg !2480
  %17 = insertvalue { [0 x i8]*, i64 } %16, i64 %s.1, 1, !dbg !2480
  ret { [0 x i8]*, i64 } %17, !dbg !2480
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb406591fb252ecfaE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #0 !dbg !2481 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i1 = alloca { [0 x i8]*, i64 }, align 8
  %1 = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill.i = alloca { [0 x i8]*, i64 }, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_7 = alloca { [0 x i8]*, i64 }, align 8
  %_4 = alloca { [0 x i8]*, i64 }, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2486, metadata !DIExpression()), !dbg !2488
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %4, align 8
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %5, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2487, metadata !DIExpression()), !dbg !2489
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %6, align 8
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i, i32 0, i32 1
  store i64 %self.1, i64* %7, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i, metadata !1813, metadata !DIExpression()), !dbg !2490
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2492
  store [0 x i8]* %self.0, [0 x i8]** %8, align 8, !dbg !2492
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2492
  store i64 %self.1, i64* %9, align 8, !dbg !2492
  %10 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 0, !dbg !2492
  %11 = load [0 x i8]*, [0 x i8]** %10, align 8, !dbg !2492, !nonnull !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %1, i32 0, i32 1, !dbg !2492
  %13 = load i64, i64* %12, align 8, !dbg !2492
  %14 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %11, 0, !dbg !2493
  %15 = insertvalue { [0 x i8]*, i64 } %14, i64 %13, 1, !dbg !2493
  store { [0 x i8]*, i64 } %15, { [0 x i8]*, i64 }* %_4, align 8, !dbg !2494
  br label %bb1, !dbg !2494

bb1:                                              ; preds = %start
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i1, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %16, align 8
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill.i1, i32 0, i32 1
  store i64 %other.1, i64* %17, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill.i1, metadata !1813, metadata !DIExpression()), !dbg !2495
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2497
  store [0 x i8]* %other.0, [0 x i8]** %18, align 8, !dbg !2497
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2497
  store i64 %other.1, i64* %19, align 8, !dbg !2497
  %20 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2497
  %21 = load [0 x i8]*, [0 x i8]** %20, align 8, !dbg !2497, !nonnull !4
  %22 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2497
  %23 = load i64, i64* %22, align 8, !dbg !2497
  %24 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %21, 0, !dbg !2498
  %25 = insertvalue { [0 x i8]*, i64 } %24, i64 %23, 1, !dbg !2498
  store { [0 x i8]*, i64 } %25, { [0 x i8]*, i64 }* %_7, align 8, !dbg !2499
  br label %bb2, !dbg !2499

bb2:                                              ; preds = %bb1
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %26 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h19ec8da187428af2E"({ [0 x i8]*, i64 }* align 8 dereferenceable(16) %_4, { [0 x i8]*, i64 }* align 8 dereferenceable(16) %_7), !dbg !2494
  br label %bb3, !dbg !2494

bb3:                                              ; preds = %bb2
  ret i1 %26, !dbg !2500
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb957295e3d336df5E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2501 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2506, metadata !DIExpression()), !dbg !2510
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2507, metadata !DIExpression()), !dbg !2511
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hddb1ebded64afd8bE"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2512
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !2512
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !2512
  br label %bb1, !dbg !2512

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !2513
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !2513
  ret { [0 x i8]*, i64 } %7, !dbg !2513
}

; core::str::converts::from_utf8_unchecked
; Function Attrs: inlinehint nounwind
define internal { [0 x i8]*, i64 } @_ZN4core3str8converts19from_utf8_unchecked17hce44fbdce675666bE([0 x i8]* nonnull align 1 %v.0, i64 %v.1) unnamed_addr #0 !dbg !2514 {
start:
  %0 = alloca { [0 x i8]*, i64 }, align 8
  %v.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 0
  store [0 x i8]* %v.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %v.dbg.spill, i32 0, i32 1
  store i64 %v.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %v.dbg.spill, metadata !2520, metadata !DIExpression()), !dbg !2521
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2522
  store [0 x i8]* %v.0, [0 x i8]** %3, align 8, !dbg !2522
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2522
  store i64 %v.1, i64* %4, align 8, !dbg !2522
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 0, !dbg !2522
  %6 = load [0 x i8]*, [0 x i8]** %5, align 8, !dbg !2522, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %0, i32 0, i32 1, !dbg !2522
  %8 = load i64, i64* %7, align 8, !dbg !2522
  br label %bb1, !dbg !2522

bb1:                                              ; preds = %start
  %9 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %6, 0, !dbg !2523
  %10 = insertvalue { [0 x i8]*, i64 } %9, i64 %8, 1, !dbg !2523
  ret { [0 x i8]*, i64 } %10, !dbg !2523
}

; core::bool::<impl bool>::then_some
; Function Attrs: inlinehint nounwind
define { i32, i32 } @"_ZN4core4bool22_$LT$impl$u20$bool$GT$9then_some17h7966edebdc29653fE"(i1 zeroext %self, i32 %t) unnamed_addr #0 !dbg !2524 {
start:
  %t.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i8, align 1
  %_5 = alloca i8, align 1
  %0 = alloca { i32, i32 }, align 4
  %1 = zext i1 %self to i8
  store i8 %1, i8* %self.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %self.dbg.spill, metadata !2531, metadata !DIExpression()), !dbg !2533
  store i32 %t, i32* %t.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %t.dbg.spill, metadata !2532, metadata !DIExpression()), !dbg !2534
  store i8 0, i8* %_5, align 1, !dbg !2535
  store i8 1, i8* %_5, align 1, !dbg !2535
  br i1 %self, label %bb1, label %bb2, !dbg !2535

bb2:                                              ; preds = %start
  %2 = bitcast { i32, i32 }* %0 to i32*, !dbg !2536
  store i32 0, i32* %2, align 4, !dbg !2536
  br label %bb3, !dbg !2537

bb1:                                              ; preds = %start
  store i8 0, i8* %_5, align 1, !dbg !2538
  %3 = bitcast { i32, i32 }* %0 to %"core::option::Option<u32>::Some"*, !dbg !2539
  %4 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %3, i32 0, i32 1, !dbg !2539
  store i32 %t, i32* %4, align 4, !dbg !2539
  %5 = bitcast { i32, i32 }* %0 to i32*, !dbg !2539
  store i32 1, i32* %5, align 4, !dbg !2539
  br label %bb3, !dbg !2537

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %_5, align 1, !dbg !2540, !range !238
  %7 = trunc i8 %6 to i1, !dbg !2540
  br i1 %7, label %bb5, label %bb4, !dbg !2540

bb4:                                              ; preds = %bb5, %bb3
  %8 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !2541
  %9 = load i32, i32* %8, align 4, !dbg !2541, !range !1207
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !2541
  %11 = load i32, i32* %10, align 4, !dbg !2541
  %12 = insertvalue { i32, i32 } undef, i32 %9, 0, !dbg !2541
  %13 = insertvalue { i32, i32 } %12, i32 %11, 1, !dbg !2541
  ret { i32, i32 } %13, !dbg !2541

bb5:                                              ; preds = %bb3
  br label %bb4, !dbg !2540
}

; core::char::convert::from_u32_unchecked
; Function Attrs: inlinehint nounwind
define internal i32 @_ZN4core4char7convert18from_u32_unchecked17h765baebb9a612ccdE(i32 %i) unnamed_addr #0 !dbg !2542 {
start:
  %0 = alloca i32, align 4
  %i.dbg.spill = alloca i32, align 4
  store i32 %i, i32* %i.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %i.dbg.spill, metadata !2549, metadata !DIExpression()), !dbg !2550
  store i32 %i, i32* %0, align 4, !dbg !2551
  %1 = load i32, i32* %0, align 4, !dbg !2551, !range !345
  br label %bb1, !dbg !2551

bb1:                                              ; preds = %start
  ret i32 %1, !dbg !2552
}

; core::char::methods::<impl char>::to_digit
; Function Attrs: inlinehint nounwind
define internal { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E"(i32 %self, i32 %radix) unnamed_addr #0 !dbg !2553 {
start:
  %rhs.dbg.spill.i3 = alloca i32, align 4
  %self.dbg.spill.i4 = alloca i32, align 4
  %0 = alloca i32, align 4
  %rhs.dbg.spill.i1 = alloca i32, align 4
  %self.dbg.spill.i2 = alloca i32, align 4
  %rhs.dbg.spill.i = alloca i32, align 4
  %self.dbg.spill.i = alloca i32, align 4
  %radix.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca i32, align 4
  %digit = alloca i32, align 4
  %1 = alloca { i32, i32 }, align 4
  store i32 %self, i32* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill, metadata !2560, metadata !DIExpression()), !dbg !2564
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !2561, metadata !DIExpression()), !dbg !2565
  call void @llvm.dbg.declare(metadata i32* %digit, metadata !2562, metadata !DIExpression()), !dbg !2566
  %_4 = icmp ule i32 %radix, 36, !dbg !2567
  %_3 = xor i1 %_4, true, !dbg !2568
  br i1 %_3, label %bb1, label %bb2, !dbg !2568

bb2:                                              ; preds = %start
  %2 = icmp ule i32 %self, 1114111, !dbg !2569
  call void @llvm.assume(i1 %2), !dbg !2569
  store i32 %self, i32* %self.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i, metadata !2570, metadata !DIExpression()), !dbg !2577
  store i32 48, i32* %rhs.dbg.spill.i, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i, metadata !2576, metadata !DIExpression()), !dbg !2579
  %3 = sub i32 %self, 48, !dbg !2580
  store i32 %3, i32* %digit, align 4, !dbg !2569
  br label %bb3, !dbg !2569

bb1:                                              ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast (<{ [40 x i8] }>* @alloc2951 to [0 x i8]*), i64 40, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2953 to %"core::panic::Location"*)), !dbg !2568
  unreachable, !dbg !2568

bb3:                                              ; preds = %bb2
  %_10 = icmp ugt i32 %radix, 10, !dbg !2581
  br i1 %_10, label %bb4, label %bb9, !dbg !2581

bb9:                                              ; preds = %bb8, %bb3
  %_22 = load i32, i32* %digit, align 4, !dbg !2582
  %_21 = icmp ult i32 %_22, %radix, !dbg !2583
  %_24 = load i32, i32* %digit, align 4, !dbg !2584
; call core::bool::<impl bool>::then_some
  %4 = call { i32, i32 } @"_ZN4core4bool22_$LT$impl$u20$bool$GT$9then_some17h7966edebdc29653fE"(i1 zeroext %_21, i32 %_24), !dbg !2583
  store { i32, i32 } %4, { i32, i32 }* %1, align 4, !dbg !2583
  br label %bb10, !dbg !2583

bb4:                                              ; preds = %bb3
  %_13 = load i32, i32* %digit, align 4, !dbg !2585
  %_12 = icmp ult i32 %_13, 10, !dbg !2585
  br i1 %_12, label %bb5, label %bb6, !dbg !2585

bb6:                                              ; preds = %bb4
  %5 = icmp ule i32 %self, 1114111, !dbg !2586
  call void @llvm.assume(i1 %5), !dbg !2586
  %_17 = or i32 %self, 32, !dbg !2587
  store i32 %_17, i32* %self.dbg.spill.i4, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i4, metadata !2570, metadata !DIExpression()), !dbg !2588
  store i32 97, i32* %rhs.dbg.spill.i3, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i3, metadata !2576, metadata !DIExpression()), !dbg !2590
  %6 = sub i32 %_17, 97, !dbg !2591
  br label %bb7, !dbg !2587

bb5:                                              ; preds = %bb4
  %_14 = load i32, i32* %digit, align 4, !dbg !2592
  %7 = bitcast { i32, i32 }* %1 to %"core::option::Option<u32>::Some"*, !dbg !2593
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1, !dbg !2593
  store i32 %_14, i32* %8, align 4, !dbg !2593
  %9 = bitcast { i32, i32 }* %1 to i32*, !dbg !2593
  store i32 1, i32* %9, align 4, !dbg !2593
  br label %bb11, !dbg !2594

bb11:                                             ; preds = %bb10, %bb5
  %10 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 0, !dbg !2594
  %11 = load i32, i32* %10, align 4, !dbg !2594, !range !1207
  %12 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %1, i32 0, i32 1, !dbg !2594
  %13 = load i32, i32* %12, align 4, !dbg !2594
  %14 = insertvalue { i32, i32 } undef, i32 %11, 0, !dbg !2594
  %15 = insertvalue { i32, i32 } %14, i32 %13, 1, !dbg !2594
  ret { i32, i32 } %15, !dbg !2594

bb7:                                              ; preds = %bb6
  store i32 %6, i32* %self.dbg.spill.i2, align 4
  call void @llvm.dbg.declare(metadata i32* %self.dbg.spill.i2, metadata !2595, metadata !DIExpression()) #7, !dbg !2599
  store i32 10, i32* %rhs.dbg.spill.i1, align 4
  call void @llvm.dbg.declare(metadata i32* %rhs.dbg.spill.i1, metadata !2598, metadata !DIExpression()) #7, !dbg !2601
  %16 = call i32 @llvm.uadd.sat.i32(i32 %6, i32 10) #7, !dbg !2602
  store i32 %16, i32* %0, align 4, !dbg !2602
  %17 = load i32, i32* %0, align 4, !dbg !2602
  br label %bb8, !dbg !2587

bb8:                                              ; preds = %bb7
  store i32 %17, i32* %digit, align 4, !dbg !2603
  br label %bb9, !dbg !2604

bb10:                                             ; preds = %bb9
  br label %bb11, !dbg !2594
}

; core::iter::traits::iterator::Iterator::all
; Function Attrs: inlinehint nounwind
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h759b38be3e8bef1aE(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !2605 {
start:
  %f.dbg.spill = alloca %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]", align 1
  %self.dbg.spill = alloca %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"*, align 8
  %_4 = alloca i8, align 1
  store %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, metadata !2615, metadata !DIExpression()), !dbg !2620
  call void @llvm.dbg.declare(metadata %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"* %f.dbg.spill, metadata !2616, metadata !DIExpression()), !dbg !2621
; call core::iter::traits::iterator::Iterator::all::check
  call void @_ZN4core4iter6traits8iterator8Iterator3all5check17h81517fe2b0a83ec5E(), !dbg !2622
  br label %bb1, !dbg !2622

bb1:                                              ; preds = %start
; call core::iter::traits::iterator::Iterator::try_fold
  %0 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hf3232ee12c92807eE(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self), !dbg !2623
  %1 = zext i1 %0 to i8, !dbg !2623
  store i8 %1, i8* %_4, align 1, !dbg !2623
  br label %bb2, !dbg !2623

bb2:                                              ; preds = %bb1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %2 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h22ba08a09e27f5f4E"(i8* align 1 dereferenceable(1) %_4, i8* align 1 dereferenceable(1) getelementptr inbounds (<{ [1 x i8] }>, <{ [1 x i8] }>* @alloc2846, i32 0, i32 0, i32 0)), !dbg !2623
  br label %bb3, !dbg !2623

bb3:                                              ; preds = %bb2
  ret i1 %2, !dbg !2624
}

; core::iter::traits::iterator::Iterator::all::check
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator3all5check17h81517fe2b0a83ec5E() unnamed_addr #0 !dbg !2625 {
start:
  %f.dbg.spill = alloca %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]", align 1
  %0 = alloca %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"* %f.dbg.spill, metadata !2630, metadata !DIExpression()), !dbg !2633
  %1 = bitcast %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* %0 to %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"*, !dbg !2634
  ret void, !dbg !2635
}

; core::iter::traits::iterator::Iterator::all::check::{{closure}}
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17he12b760980656518E"(%"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* nonnull align 1 %_1, i8 %x.0, i8 %x.1) unnamed_addr #0 !dbg !2636 {
start:
  %x.dbg.spill = alloca { i8, i8 }, align 1
  %_2.dbg.spill = alloca {}, align 1
  %_1.dbg.spill = alloca %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"*, align 8
  %_6 = alloca { i8, i8 }, align 1
  %0 = alloca i8, align 1
  store %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* %_1, %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"** %_1.dbg.spill, align 8
  %1 = load %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"*, %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"** %_1.dbg.spill, align 8, !nonnull !4
  %2 = bitcast %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* %1 to %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"*
  call void @llvm.dbg.declare(metadata %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"** %_1.dbg.spill, metadata !2646, metadata !DIExpression(DW_OP_deref)), !dbg !2648
  call void @llvm.dbg.declare(metadata {}* %_2.dbg.spill, metadata !2647, metadata !DIExpression()), !dbg !2649
  %3 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 0
  store i8 %x.0, i8* %3, align 1
  %4 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 1
  store i8 %x.1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata { i8, i8 }* %x.dbg.spill, metadata !2645, metadata !DIExpression()), !dbg !2650
  %_5 = bitcast %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* %_1 to %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"*, !dbg !2651
  %5 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !2651
  store i8 %x.0, i8* %5, align 1, !dbg !2651
  %6 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !2651
  store i8 %x.1, i8* %6, align 1, !dbg !2651
  %7 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 0, !dbg !2651
  %8 = load i8, i8* %7, align 1, !dbg !2651
  %9 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_6, i32 0, i32 1, !dbg !2651
  %10 = load i8, i8* %9, align 1, !dbg !2651
; call num_traits::str_to_ascii_lower_eq_str::{{closure}}
  %_4 = call zeroext i1 @"_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17haa1e1f0636e531b8E"(%"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"* nonnull align 1 %_5, i8 %8, i8 %10), !dbg !2651
  br label %bb1, !dbg !2651

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !2651

bb3:                                              ; preds = %bb1
  store i8 1, i8* %0, align 1, !dbg !2652
  br label %bb4, !dbg !2653

bb2:                                              ; preds = %bb1
  store i8 0, i8* %0, align 1, !dbg !2654
  br label %bb4, !dbg !2653

bb4:                                              ; preds = %bb3, %bb2
  %11 = load i8, i8* %0, align 1, !dbg !2655, !range !238
  %12 = trunc i8 %11 to i1, !dbg !2655
  ret i1 %12, !dbg !2655
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator3zip17h31e15a62e7100431E(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %0, i8* nonnull %self.0, i8* %self.1, i8* nonnull %other.0, i8* %other.1) unnamed_addr #0 !dbg !2656 {
start:
  %other.dbg.spill = alloca { i8*, i8* }, align 8
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !2658, metadata !DIExpression()), !dbg !2663
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 0
  store i8* %other.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 1
  store i8* %other.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %other.dbg.spill, metadata !2659, metadata !DIExpression()), !dbg !2664
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %5 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha8a6bdf8abd5ff80E"(i8* nonnull %other.0, i8* %other.1), !dbg !2665
  %_4.0 = extractvalue { i8*, i8* } %5, 0, !dbg !2665
  %_4.1 = extractvalue { i8*, i8* } %5, 1, !dbg !2665
  br label %bb1, !dbg !2665

bb1:                                              ; preds = %start
; call core::iter::adapters::zip::Zip<A,B>::new
  call void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf91346d71e625039E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %0, i8* nonnull %self.0, i8* %self.1, i8* nonnull %_4.0, i8* %_4.1), !dbg !2666
  br label %bb2, !dbg !2666

bb2:                                              ; preds = %bb1
  ret void, !dbg !2667
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator3zip17h91c254db5300b4f5E(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %0, i8* nonnull %self.0, i8* %self.1, i8* nonnull %other.0, i8* %other.1) unnamed_addr #0 !dbg !2668 {
start:
  %other.dbg.spill = alloca { i8*, i8* }, align 8
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !2670, metadata !DIExpression()), !dbg !2675
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 0
  store i8* %other.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %other.dbg.spill, i32 0, i32 1
  store i8* %other.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %other.dbg.spill, metadata !2671, metadata !DIExpression()), !dbg !2676
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %5 = call { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9d5a3c46bc8c6025E"(i8* nonnull %other.0, i8* %other.1), !dbg !2677
  %_4.0 = extractvalue { i8*, i8* } %5, 0, !dbg !2677
  %_4.1 = extractvalue { i8*, i8* } %5, 1, !dbg !2677
  br label %bb1, !dbg !2677

bb1:                                              ; preds = %start
; call core::iter::adapters::zip::Zip<A,B>::new
  call void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf28523a15f4dd198E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %0, i8* nonnull %self.0, i8* %self.1, i8* nonnull %_4.0, i8* %_4.1), !dbg !2678
  br label %bb2, !dbg !2678

bb2:                                              ; preds = %bb1
  ret void, !dbg !2679
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nounwind
define i8 @_ZN4core4iter6traits8iterator8Iterator4fold17h692432889ff703a6E(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture dereferenceable(56) %self, i8 %init) unnamed_addr #0 !dbg !2680 {
start:
  %x.dbg.spill = alloca { i8*, i8* }, align 8
  %init.dbg.spill = alloca i8, align 1
  %_10 = alloca { i8, [7 x i8], { i8*, i8* } }, align 8
  %_4 = alloca { i8*, i8* }, align 8
  %accum = alloca i8, align 1
  %f = alloca %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata i8* %accum, metadata !2687, metadata !DIExpression()), !dbg !2695
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* %self, metadata !2684, metadata !DIExpression()), !dbg !2696
  store i8 %init, i8* %init.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %init.dbg.spill, metadata !2685, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata %"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"* %f, metadata !2686, metadata !DIExpression()), !dbg !2698
  store i8 %init, i8* %accum, align 1, !dbg !2699
  br label %bb1, !dbg !2700

bb1:                                              ; preds = %bb4, %start
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i8*, i8* } @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17habbf0680fb239970E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* align 8 dereferenceable(56) %self), !dbg !2701
  store { i8*, i8* } %0, { i8*, i8* }* %_4, align 8, !dbg !2701
  br label %bb2, !dbg !2701

bb2:                                              ; preds = %bb1
  %1 = bitcast { i8*, i8* }* %_4 to {}**, !dbg !2702
  %2 = load {}*, {}** %1, align 8, !dbg !2702
  %3 = icmp eq {}* %2, null, !dbg !2702
  %_6 = select i1 %3, i64 0, i64 1, !dbg !2702
  %4 = icmp eq i64 %_6, 1, !dbg !2702
  br i1 %4, label %bb3, label %bb5, !dbg !2702

bb3:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 0, !dbg !2703
  %x.0 = load i8*, i8** %5, align 8, !dbg !2703, !nonnull !4
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_4, i32 0, i32 1, !dbg !2703
  %x.1 = load i8*, i8** %6, align 8, !dbg !2703, !nonnull !4
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %x.dbg.spill, i32 0, i32 0, !dbg !2703
  store i8* %x.0, i8** %7, align 8, !dbg !2703
  %8 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %x.dbg.spill, i32 0, i32 1, !dbg !2703
  store i8* %x.1, i8** %8, align 8, !dbg !2703
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %x.dbg.spill, metadata !2689, metadata !DIExpression()), !dbg !2704
  %_11 = load i8, i8* %accum, align 1, !dbg !2705
  %9 = bitcast { i8, [7 x i8], { i8*, i8* } }* %_10 to i8*, !dbg !2706
  store i8 %_11, i8* %9, align 8, !dbg !2706
  %10 = getelementptr inbounds { i8, [7 x i8], { i8*, i8* } }, { i8, [7 x i8], { i8*, i8* } }* %_10, i32 0, i32 2, !dbg !2706
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %10, i32 0, i32 0, !dbg !2706
  store i8* %x.0, i8** %11, align 8, !dbg !2706
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %10, i32 0, i32 1, !dbg !2706
  store i8* %x.1, i8** %12, align 8, !dbg !2706
  %13 = bitcast { i8, [7 x i8], { i8*, i8* } }* %_10 to i8*, !dbg !2706
  %14 = load i8, i8* %13, align 8, !dbg !2706
  %15 = getelementptr inbounds { i8, [7 x i8], { i8*, i8* } }, { i8, [7 x i8], { i8*, i8* } }* %_10, i32 0, i32 2, !dbg !2706
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %15, i32 0, i32 0, !dbg !2706
  %17 = load i8*, i8** %16, align 8, !dbg !2706, !nonnull !4
  %18 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %15, i32 0, i32 1, !dbg !2706
  %19 = load i8*, i8** %18, align 8, !dbg !2706, !nonnull !4
; call core::num::dec2flt::common::ByteSlice::eq_ignore_case::{{closure}}
  %_8 = call i8 @"_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h284a14bbaae9f77bE"(%"[closure@<[u8] as core::num::dec2flt::common::ByteSlice>::eq_ignore_case::{closure#0}]"* nonnull align 1 %f, i8 %14, i8* align 1 dereferenceable(1) %17, i8* align 1 dereferenceable(1) %19), !dbg !2706
  br label %bb4, !dbg !2706

bb5:                                              ; preds = %bb2
  br label %bb6, !dbg !2707

bb6:                                              ; preds = %bb5
  br label %bb7, !dbg !2708

bb7:                                              ; preds = %bb6
  br label %bb8, !dbg !2708

bb8:                                              ; preds = %bb7
  %20 = load i8, i8* %accum, align 1, !dbg !2709
  ret i8 %20, !dbg !2709

bb4:                                              ; preds = %bb3
  store i8 %_8, i8* %accum, align 1, !dbg !2710
  br label %bb1, !dbg !2700
}

; core::iter::traits::iterator::Iterator::by_ref
; Function Attrs: nounwind
define align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %self) unnamed_addr #1 !dbg !2711 {
start:
  %self.dbg.spill = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  store %"core::iter::Enumerate<core::str::Chars>"* %self, %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, metadata !2715, metadata !DIExpression()), !dbg !2718
  ret %"core::iter::Enumerate<core::str::Chars>"* %self, !dbg !2719
}

; core::iter::traits::iterator::Iterator::copied
; Function Attrs: nounwind
define { i8*, i8* } @_ZN4core4iter6traits8iterator8Iterator6copied17h0ba0ff0396782e6fE(i8* nonnull %self.0, i8* %self.1) unnamed_addr #1 !dbg !2720 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !2724, metadata !DIExpression()), !dbg !2726
; call core::iter::adapters::copied::Copied<I>::new
  %2 = call { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hd46a13205614d2f7E"(i8* nonnull %self.0, i8* %self.1), !dbg !2727
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !2727
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !2727
  br label %bb1, !dbg !2727

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !2728
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !2728
  ret { i8*, i8* } %6, !dbg !2728
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nounwind
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hf3232ee12c92807eE(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self) unnamed_addr #0 !dbg !2729 {
start:
  %x.dbg.spill = alloca { i8, i8 }, align 1
  %0 = alloca i24, align 4
  %val.dbg.spill = alloca {}, align 1
  %residual.dbg.spill = alloca %"core::ops::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %accum.dbg.spill = alloca {}, align 1
  %init.dbg.spill = alloca {}, align 1
  %self.dbg.spill = alloca %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"*, align 8
  %_13 = alloca { i8, i8 }, align 1
  %_10 = alloca i8, align 1
  %_5 = alloca %"core::option::Option<(u8, u8)>", align 1
  %1 = alloca i8, align 1
  %f = alloca %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]", align 1
  store %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* %self, %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Zip<core::str::Bytes, core::str::Bytes>"** %self.dbg.spill, metadata !2733, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.declare(metadata {}* %init.dbg.spill, metadata !2734, metadata !DIExpression()), !dbg !2748
  call void @llvm.dbg.declare(metadata %"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* %f, metadata !2735, metadata !DIExpression()), !dbg !2749
  call void @llvm.dbg.declare(metadata {}* %accum.dbg.spill, metadata !2736, metadata !DIExpression()), !dbg !2750
  call void @llvm.dbg.declare(metadata %"core::ops::ControlFlow<(), core::convert::Infallible>::Break"* %residual.dbg.spill, metadata !2740, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.declare(metadata {}* %val.dbg.spill, metadata !2742, metadata !DIExpression()), !dbg !2752
  br label %bb1, !dbg !2753

bb1:                                              ; preds = %bb6, %start
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::next
  %2 = call i24 @"_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he53a662ae4d6ffb2E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %self), !dbg !2754
  store i24 %2, i24* %0, align 4, !dbg !2754
  %3 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to i8*, !dbg !2754
  %4 = bitcast i24* %0 to i8*, !dbg !2754
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 4 %4, i64 3, i1 false), !dbg !2754
  br label %bb2, !dbg !2754

bb2:                                              ; preds = %bb1
  %5 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to i8*, !dbg !2755
  %6 = load i8, i8* %5, align 1, !dbg !2755, !range !238
  %7 = trunc i8 %6 to i1, !dbg !2755
  %_7 = zext i1 %7 to i64, !dbg !2755
  %8 = icmp eq i64 %_7, 1, !dbg !2755
  br i1 %8, label %bb3, label %bb10, !dbg !2755

bb3:                                              ; preds = %bb2
  %9 = bitcast %"core::option::Option<(u8, u8)>"* %_5 to %"core::option::Option<(u8, u8)>::Some"*, !dbg !2756
  %10 = getelementptr inbounds %"core::option::Option<(u8, u8)>::Some", %"core::option::Option<(u8, u8)>::Some"* %9, i32 0, i32 1, !dbg !2756
  %11 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %10, i32 0, i32 0, !dbg !2756
  %x.0 = load i8, i8* %11, align 1, !dbg !2756
  %12 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %10, i32 0, i32 1, !dbg !2756
  %x.1 = load i8, i8* %12, align 1, !dbg !2756
  %13 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 0, !dbg !2756
  store i8 %x.0, i8* %13, align 1, !dbg !2756
  %14 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %x.dbg.spill, i32 0, i32 1, !dbg !2756
  store i8 %x.1, i8* %14, align 1, !dbg !2756
  call void @llvm.dbg.declare(metadata { i8, i8 }* %x.dbg.spill, metadata !2738, metadata !DIExpression()), !dbg !2757
  %15 = bitcast { i8, i8 }* %_13 to {}*, !dbg !2758
  %16 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 0, !dbg !2758
  store i8 %x.0, i8* %16, align 1, !dbg !2758
  %17 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 1, !dbg !2758
  store i8 %x.1, i8* %17, align 1, !dbg !2758
  %18 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 0, !dbg !2758
  %19 = load i8, i8* %18, align 1, !dbg !2758
  %20 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_13, i32 0, i32 1, !dbg !2758
  %21 = load i8, i8* %20, align 1, !dbg !2758
; call core::iter::traits::iterator::Iterator::all::check::{{closure}}
  %_11 = call zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17he12b760980656518E"(%"[closure@core::iter::Iterator::all::check<(u8, u8), [closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]>::{closure#0}]"* nonnull align 1 %f, i8 %19, i8 %21), !dbg !2758
  br label %bb4, !dbg !2758

bb10:                                             ; preds = %bb2
  br label %bb11, !dbg !2759

bb11:                                             ; preds = %bb10
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %22 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4eb715901cb89672E"(), !dbg !2760
  %23 = zext i1 %22 to i8, !dbg !2760
  store i8 %23, i8* %1, align 1, !dbg !2760
  br label %bb12, !dbg !2760

bb12:                                             ; preds = %bb11
  br label %bb13, !dbg !2761

bb13:                                             ; preds = %bb9, %bb12
  %24 = load i8, i8* %1, align 1, !dbg !2762, !range !238
  %25 = trunc i8 %24 to i1, !dbg !2762
  ret i1 %25, !dbg !2762

bb4:                                              ; preds = %bb3
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %26 = call zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ed8bd68cd15059fE"(i1 zeroext %_11), !dbg !2758
  %27 = zext i1 %26 to i8, !dbg !2758
  store i8 %27, i8* %_10, align 1, !dbg !2758
  br label %bb5, !dbg !2758

bb5:                                              ; preds = %bb4
  %28 = load i8, i8* %_10, align 1, !dbg !2758, !range !238
  %29 = trunc i8 %28 to i1, !dbg !2758
  %_16 = zext i1 %29 to i64, !dbg !2758
  switch i64 %_16, label %bb7 [
    i64 0, label %bb6
    i64 1, label %bb8
  ], !dbg !2758

bb7:                                              ; preds = %bb5
  unreachable, !dbg !2758

bb6:                                              ; preds = %bb5
  br label %bb1, !dbg !2753

bb8:                                              ; preds = %bb5
; call <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %30 = call zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf95ea245bbc93a5E"(), !dbg !2763
  %31 = zext i1 %30 to i8, !dbg !2763
  store i8 %31, i8* %1, align 1, !dbg !2763
  br label %bb9, !dbg !2763

bb9:                                              ; preds = %bb8
  br label %bb13, !dbg !2761
}

; core::iter::traits::iterator::Iterator::enumerate
; Function Attrs: inlinehint nounwind
define void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h97135b2391b53e59E(%"core::iter::Enumerate<core::str::Chars>"* noalias nocapture sret(%"core::iter::Enumerate<core::str::Chars>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 !dbg !2764 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !2768, metadata !DIExpression()), !dbg !2771
; call core::iter::adapters::enumerate::Enumerate<I>::new
  call void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h32a8c08ae4e53323E"(%"core::iter::Enumerate<core::str::Chars>"* noalias nocapture sret(%"core::iter::Enumerate<core::str::Chars>") dereferenceable(24) %0, i8* nonnull %self.0, i8* %self.1), !dbg !2772
  br label %bb1, !dbg !2772

bb1:                                              ; preds = %start
  ret void, !dbg !2773
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nounwind
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf28523a15f4dd198E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %0, i8* nonnull %a.0, i8* %a.1, i8* nonnull %b.0, i8* %b.1) unnamed_addr #1 !dbg !2774 {
start:
  %b.dbg.spill = alloca { i8*, i8* }, align 8
  %a.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 0
  store i8* %a.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 1
  store i8* %a.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a.dbg.spill, metadata !2776, metadata !DIExpression()), !dbg !2778
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 0
  store i8* %b.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 1
  store i8* %b.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b.dbg.spill, metadata !2777, metadata !DIExpression()), !dbg !2779
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h7d9e762bf9c54f99E"(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>"* noalias nocapture sret(%"core::iter::Zip<core::slice::Iter<u8>, core::slice::Iter<u8>>") dereferenceable(56) %0, i8* nonnull %a.0, i8* %a.1, i8* nonnull %b.0, i8* %b.1), !dbg !2780
  br label %bb1, !dbg !2780

bb1:                                              ; preds = %start
  ret void, !dbg !2781
}

; core::iter::adapters::zip::Zip<A,B>::new
; Function Attrs: nounwind
define void @"_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf91346d71e625039E"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %0, i8* nonnull %a.0, i8* %a.1, i8* nonnull %b.0, i8* %b.1) unnamed_addr #1 !dbg !2782 {
start:
  %b.dbg.spill = alloca { i8*, i8* }, align 8
  %a.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 0
  store i8* %a.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %a.dbg.spill, i32 0, i32 1
  store i8* %a.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %a.dbg.spill, metadata !2784, metadata !DIExpression()), !dbg !2786
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 0
  store i8* %b.0, i8** %3, align 8
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %b.dbg.spill, i32 0, i32 1
  store i8* %b.1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %b.dbg.spill, metadata !2785, metadata !DIExpression()), !dbg !2787
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  call void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17hb72b2badc854bf7fE"(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %0, i8* nonnull %a.0, i8* %a.1, i8* nonnull %b.0, i8* %b.1), !dbg !2788
  br label %bb1, !dbg !2788

bb1:                                              ; preds = %start
  ret void, !dbg !2789
}

; core::iter::adapters::zip::try_get_unchecked
; Function Attrs: nounwind
define align 1 dereferenceable(1) i8* @_ZN4core4iter8adapters3zip17try_get_unchecked17h721846e5d9984395E({ i8*, i8* }* align 8 dereferenceable(16) %it, i64 %idx) unnamed_addr #1 !dbg !2790 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %it.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %it, { i8*, i8* }** %it.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %it.dbg.spill, metadata !2794, metadata !DIExpression()), !dbg !2796
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !2795, metadata !DIExpression()), !dbg !2797
; call <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
  %0 = call align 1 dereferenceable(1) i8* @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h418df6df8687309aE"({ i8*, i8* }* align 8 dereferenceable(16) %it, i64 %idx), !dbg !2798
  br label %bb1, !dbg !2798

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !2799
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nounwind
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h0fedc2414066c9baE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !2800 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2806, metadata !DIExpression()), !dbg !2808
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha1de5e1f1190acc2E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !2809
  br label %bb1, !dbg !2809

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*, !dbg !2809
  %1 = load i64, i64* %0, align 8, !dbg !2809
  ret i64 %1, !dbg !2810
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nounwind
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h19b34300de56c82fE({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !2811 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_2 = alloca { i64, { i64, i64 } }, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2816, metadata !DIExpression()), !dbg !2818
; call <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69cd9049a6c0c30bE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %_2, { i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !2819
  br label %bb1, !dbg !2819

bb1:                                              ; preds = %start
  %0 = bitcast { i64, { i64, i64 } }* %_2 to i64*, !dbg !2819
  %1 = load i64, i64* %0, align 8, !dbg !2819
  ret i64 %1, !dbg !2820
}

; core::iter::adapters::copied::Copied<I>::new
; Function Attrs: nounwind
define { i8*, i8* } @"_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hd46a13205614d2f7E"(i8* nonnull %it.0, i8* %it.1) unnamed_addr #1 !dbg !2821 {
start:
  %it.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %it.dbg.spill, i32 0, i32 0
  store i8* %it.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %it.dbg.spill, i32 0, i32 1
  store i8* %it.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %it.dbg.spill, metadata !2823, metadata !DIExpression()), !dbg !2824
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !2825
  store i8* %it.0, i8** %3, align 8, !dbg !2825
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !2825
  store i8* %it.1, i8** %4, align 8, !dbg !2825
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 0, !dbg !2826
  %6 = load i8*, i8** %5, align 8, !dbg !2826, !nonnull !4
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %0, i32 0, i32 1, !dbg !2826
  %8 = load i8*, i8** %7, align 8, !dbg !2826
  %9 = insertvalue { i8*, i8* } undef, i8* %6, 0, !dbg !2826
  %10 = insertvalue { i8*, i8* } %9, i8* %8, 1, !dbg !2826
  ret { i8*, i8* } %10, !dbg !2826
}

; core::iter::adapters::enumerate::Enumerate<I>::new
; Function Attrs: nounwind
define void @"_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h32a8c08ae4e53323E"(%"core::iter::Enumerate<core::str::Chars>"* noalias nocapture sret(%"core::iter::Enumerate<core::str::Chars>") dereferenceable(24) %0, i8* nonnull %iter.0, i8* %iter.1) unnamed_addr #1 !dbg !2827 {
start:
  %iter.dbg.spill = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter.dbg.spill, i32 0, i32 0
  store i8* %iter.0, i8** %1, align 8
  %2 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %iter.dbg.spill, i32 0, i32 1
  store i8* %iter.1, i8** %2, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %iter.dbg.spill, metadata !2829, metadata !DIExpression()), !dbg !2830
  %3 = bitcast %"core::iter::Enumerate<core::str::Chars>"* %0 to { i8*, i8* }*, !dbg !2831
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 0, !dbg !2831
  store i8* %iter.0, i8** %4, align 8, !dbg !2831
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %3, i32 0, i32 1, !dbg !2831
  store i8* %iter.1, i8** %5, align 8, !dbg !2831
  %6 = getelementptr inbounds %"core::iter::Enumerate<core::str::Chars>", %"core::iter::Enumerate<core::str::Chars>"* %0, i32 0, i32 1, !dbg !2831
  store i64 0, i64* %6, align 8, !dbg !2831
  ret void, !dbg !2832
}

; core::slice::<impl [T]>::get
; Function Attrs: inlinehint nounwind
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h539b0c87fcc1bf17E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 !dbg !2833 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2839, metadata !DIExpression()), !dbg !2843
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2840, metadata !DIExpression()), !dbg !2844
; call <usize as core::slice::index::SliceIndex<[T]>>::get
  %2 = call align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h14f5d3ac0968a5c0E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2845
  br label %bb1, !dbg !2845

bb1:                                              ; preds = %start
  ret i8* %2, !dbg !2846
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2847 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2851, metadata !DIExpression()), !dbg !2852
; call core::slice::iter::Iter<T>::new
  %2 = call { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7537b812ca168bd9E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !2853
  %3 = extractvalue { i8*, i8* } %2, 0, !dbg !2853
  %4 = extractvalue { i8*, i8* } %2, 1, !dbg !2853
  br label %bb1, !dbg !2853

bb1:                                              ; preds = %start
  %5 = insertvalue { i8*, i8* } undef, i8* %3, 0, !dbg !2854
  %6 = insertvalue { i8*, i8* } %5, i8* %4, 1, !dbg !2854
  ret { i8*, i8* } %6, !dbg !2854
}

; core::slice::<impl [T]>::first
; Function Attrs: inlinehint nounwind
define align 1 dereferenceable_or_null(1) i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hae99d40c22f691a2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2855 {
start:
  %first.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca i8*, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2859, metadata !DIExpression()), !dbg !2862
  %_4 = icmp uge i64 %self.1, 1, !dbg !2863
  br i1 %_4, label %bb1, label %bb2, !dbg !2863

bb2:                                              ; preds = %start
  %3 = bitcast i8** %0 to {}**, !dbg !2864
  store {}* null, {}** %3, align 8, !dbg !2864
  br label %bb3, !dbg !2865

bb1:                                              ; preds = %start
  %first = getelementptr inbounds [0 x i8], [0 x i8]* %self.0, i64 0, i64 0, !dbg !2866
  store i8* %first, i8** %first.dbg.spill, align 8, !dbg !2866
  call void @llvm.dbg.declare(metadata i8** %first.dbg.spill, metadata !2860, metadata !DIExpression()), !dbg !2867
  store i8* %first, i8** %0, align 8, !dbg !2868
  br label %bb3, !dbg !2865

bb3:                                              ; preds = %bb2, %bb1
  %4 = load i8*, i8** %0, align 8, !dbg !2869
  ret i8* %4, !dbg !2869
}

; core::slice::<impl [T]>::as_ptr
; Function Attrs: inlinehint nounwind
define i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h71c8ac8c06b7d8a2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2870 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2874, metadata !DIExpression()), !dbg !2875
  %2 = bitcast [0 x i8]* %self.0 to i8*, !dbg !2876
  ret i8* %2, !dbg !2877
}

; core::slice::<impl [T]>::is_empty
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h0e52eb6f587116c6E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #0 !dbg !2878 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2882, metadata !DIExpression()), !dbg !2883
  %2 = icmp eq i64 %self.1, 0, !dbg !2884
  ret i1 %2, !dbg !2885
}

; core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq
; Function Attrs: nounwind
define zeroext i1 @"_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h9fdb2abeb156c430E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !2886 {
start:
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2891, metadata !DIExpression()), !dbg !2895
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %2, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %3, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !2892, metadata !DIExpression()), !dbg !2896
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %4 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he900d6ddd152772fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1), !dbg !2897
  br label %bb1, !dbg !2897

bb1:                                              ; preds = %start
  ret i1 %4, !dbg !2898
}

; core::slice::raw::from_raw_parts
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcaadf253843d6163E(i8* %data, i64 %len) unnamed_addr #0 !dbg !2899 {
start:
  %len.dbg.spill = alloca i64, align 8
  %data.dbg.spill = alloca i8*, align 8
  store i8* %data, i8** %data.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %data.dbg.spill, metadata !2905, metadata !DIExpression()), !dbg !2907
  store i64 %len, i64* %len.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %len.dbg.spill, metadata !2906, metadata !DIExpression()), !dbg !2908
; call core::ptr::slice_from_raw_parts
  %0 = call { [0 x i8]*, i64 } @_ZN4core3ptr20slice_from_raw_parts17hc86f76d7a6485995E(i8* %data, i64 %len), !dbg !2909
  %_3.0 = extractvalue { [0 x i8]*, i64 } %0, 0, !dbg !2909
  %_3.1 = extractvalue { [0 x i8]*, i64 } %0, 1, !dbg !2909
  br label %bb1, !dbg !2909

bb1:                                              ; preds = %start
  %1 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %_3.0, 0, !dbg !2910
  %2 = insertvalue { [0 x i8]*, i64 } %1, i64 %_3.1, 1, !dbg !2910
  ret { [0 x i8]*, i64 } %2, !dbg !2910
}

; core::slice::iter::Iter<T>::new
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7537b812ca168bd9E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !2911 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i1 = alloca i64, align 8
  %self.dbg.spill.i.i2 = alloca i8*, align 8
  %count.dbg.spill.i3 = alloca i64, align 8
  %self.dbg.spill.i4 = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %ptr.dbg.spill = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %end = alloca i8*, align 8
  %2 = alloca { i8*, i8* }, align 8
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !2914, metadata !DIExpression()), !dbg !2919
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2917, metadata !DIExpression()), !dbg !2920
; call core::slice::<impl [T]>::as_ptr
  %ptr = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h71c8ac8c06b7d8a2E"([0 x i8]* nonnull align 1 %slice.0, i64 %slice.1), !dbg !2921
  store i8* %ptr, i8** %ptr.dbg.spill, align 8, !dbg !2921
  call void @llvm.dbg.declare(metadata i8** %ptr.dbg.spill, metadata !2915, metadata !DIExpression()), !dbg !2922
  br label %bb1, !dbg !2921

bb1:                                              ; preds = %start
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_6 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h28ca124dcefc1f68E"(i8* %ptr), !dbg !2923
  br label %bb2, !dbg !2923

bb2:                                              ; preds = %bb1
  %_5 = xor i1 %_6, true, !dbg !2924
  call void @llvm.assume(i1 %_5), !dbg !2925
  br label %bb3, !dbg !2925

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !2926

bb4:                                              ; preds = %bb3
  %5 = icmp eq i64 1, 0, !dbg !2926
  br i1 %5, label %bb5, label %bb7, !dbg !2926

bb5:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !2927, metadata !DIExpression()), !dbg !2931
  store i64 %slice.1, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !2930, metadata !DIExpression()), !dbg !2933
  store i8* %ptr, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !2934, metadata !DIExpression()), !dbg !2938
  store i64 %slice.1, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !2937, metadata !DIExpression()), !dbg !2940
  %6 = getelementptr i8, i8* %ptr, i64 %slice.1, !dbg !2941
  store i8* %6, i8** %1, align 8, !dbg !2941
  %7 = load i8*, i8** %1, align 8, !dbg !2941
  br label %bb6, !dbg !2942

bb7:                                              ; preds = %bb4
  store i8* %ptr, i8** %self.dbg.spill.i4, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i4, metadata !262, metadata !DIExpression()), !dbg !2943
  store i64 %slice.1, i64* %count.dbg.spill.i3, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i3, metadata !270, metadata !DIExpression()), !dbg !2945
  store i8* %ptr, i8** %self.dbg.spill.i.i2, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i2, metadata !274, metadata !DIExpression()), !dbg !2946
  store i64 %slice.1, i64* %count.dbg.spill.i.i1, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i1, metadata !280, metadata !DIExpression()), !dbg !2948
  %8 = getelementptr inbounds i8, i8* %ptr, i64 %slice.1, !dbg !2949
  store i8* %8, i8** %0, align 8, !dbg !2949
  %9 = load i8*, i8** %0, align 8, !dbg !2949
  store i8* %9, i8** %end, align 8, !dbg !2950
  br label %bb8, !dbg !2950

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !2951

bb9:                                              ; preds = %bb6, %bb8
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_18 = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h232f62df0a4a4fe7E"(i8* %ptr), !dbg !2952
  br label %bb10, !dbg !2952

bb6:                                              ; preds = %bb5
  store i8* %7, i8** %end, align 8, !dbg !2942
  br label %bb9, !dbg !2951

bb10:                                             ; preds = %bb9
  %_21 = load i8*, i8** %end, align 8, !dbg !2953
  %10 = bitcast { i8*, i8* }* %2 to i8**, !dbg !2954
  store i8* %_18, i8** %10, align 8, !dbg !2954
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1, !dbg !2954
  store i8* %_21, i8** %11, align 8, !dbg !2954
  %12 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 0, !dbg !2955
  %13 = load i8*, i8** %12, align 8, !dbg !2955, !nonnull !4
  %14 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %2, i32 0, i32 1, !dbg !2955
  %15 = load i8*, i8** %14, align 8, !dbg !2955
  %16 = insertvalue { i8*, i8* } undef, i8* %13, 0, !dbg !2955
  %17 = insertvalue { i8*, i8* } %16, i8* %15, 1, !dbg !2955
  ret { i8*, i8* } %17, !dbg !2955
}

; core::slice::iter::Iter<T>::as_slice
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h720044fad6a2487fE"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #1 !dbg !2956 {
start:
  %_1.dbg.spill.i.i = alloca i8*, align 8
  %diff.dbg.spill.i = alloca i64, align 8
  %0 = alloca i64, align 8
  %size.dbg.spill.i = alloca i64, align 8
  %start.dbg.spill.i = alloca i8*, align 8
  %self.dbg.spill.i = alloca { i8*, i8* }*, align 8
  %_5.i = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !2960, metadata !DIExpression()), !dbg !2961
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill.i, metadata !2962, metadata !DIExpression()) #7, !dbg !2972
  %1 = bitcast { i8*, i8* }* %self to i8**, !dbg !2974
  %_4.i = load i8*, i8** %1, align 8, !dbg !2974, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_3.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_4.i) #7, !dbg !2974
  %2 = bitcast { i8*, i8* }* %self to i8**, !dbg !2975
  %start1.i = load i8*, i8** %2, align 8, !dbg !2975, !nonnull !4
  store i8* %start1.i, i8** %start.dbg.spill.i, align 8, !dbg !2975
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill.i, metadata !2966, metadata !DIExpression()) #7, !dbg !2976
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_9.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %start1.i) #7, !dbg !2976
  store i8* %_9.i, i8** %_1.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %_1.dbg.spill.i.i, metadata !2977, metadata !DIExpression()) #7, !dbg !2982
  store i64 1, i64* %size.dbg.spill.i, align 8, !dbg !2976
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill.i, metadata !2968, metadata !DIExpression()) #7, !dbg !2984
  %3 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !2984
  %_19.i = load i8*, i8** %3, align 8, !dbg !2984
  %_18.i = ptrtoint i8* %_19.i to i64, !dbg !2984
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_21.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %start1.i) #7, !dbg !2984
  %_20.i = ptrtoint i8* %_21.i to i64, !dbg !2984
  %4 = sub nuw i64 %_18.i, %_20.i, !dbg !2984
  store i64 %4, i64* %0, align 8, !dbg !2984
  %diff.i = load i64, i64* %0, align 8, !dbg !2984
  store i64 %diff.i, i64* %diff.dbg.spill.i, align 8, !dbg !2984
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill.i, metadata !2970, metadata !DIExpression()) #7, !dbg !2985
  store i64 %diff.i, i64* %_5.i, align 8, !dbg !2985
  %5 = load i64, i64* %_5.i, align 8, !dbg !2986
; call core::slice::raw::from_raw_parts
  %6 = call { [0 x i8]*, i64 } @_ZN4core5slice3raw14from_raw_parts17hcaadf253843d6163E(i8* %_3.i, i64 %5) #7, !dbg !2986
  %7 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !2986
  %8 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !2986
  %9 = extractvalue { [0 x i8]*, i64 } %6, 0, !dbg !2987
  %10 = extractvalue { [0 x i8]*, i64 } %6, 1, !dbg !2987
  br label %bb1, !dbg !2987

bb1:                                              ; preds = %start
  %11 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %9, 0, !dbg !2988
  %12 = insertvalue { [0 x i8]*, i64 } %11, i64 %10, 1, !dbg !2988
  ret { [0 x i8]*, i64 } %12, !dbg !2988
}

; core::slice::index::<impl core::ops::index::Index<I> for [T]>::index
; Function Attrs: inlinehint nounwind
define { [0 x i8]*, i64 } @"_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h85cbd218e682b1adE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, i64 %index, %"core::panic::Location"* align 8 dereferenceable(24) %0) unnamed_addr #0 !dbg !2989 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !2994, metadata !DIExpression()), !dbg !2997
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !2995, metadata !DIExpression()), !dbg !2998
; call <core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index
  %3 = call { [0 x i8]*, i64 } @"_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h9c2d9b358cf72ee1E"(i64 %index, [0 x i8]* nonnull align 1 %self.0, i64 %self.1, %"core::panic::Location"* align 8 dereferenceable(24) %0), !dbg !2999
  %4 = extractvalue { [0 x i8]*, i64 } %3, 0, !dbg !2999
  %5 = extractvalue { [0 x i8]*, i64 } %3, 1, !dbg !2999
  br label %bb1, !dbg !2999

bb1:                                              ; preds = %start
  %6 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %4, 0, !dbg !3000
  %7 = insertvalue { [0 x i8]*, i64 } %6, i64 %5, 1, !dbg !3000
  ret { [0 x i8]*, i64 } %7, !dbg !3000
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nounwind
define i32 @"_ZN4core6option15Option$LT$T$GT$3map17hffef032889a08927E"(i32 %0, i32 %1) unnamed_addr #0 !dbg !3001 {
start:
  %x.dbg.spill = alloca i32, align 4
  %f.dbg.spill = alloca %"[closure@<core::str::Chars as core::iter::Iterator>::next::{closure#0}]", align 1
  %_9 = alloca i8, align 1
  %_7 = alloca i32, align 4
  %2 = alloca i32, align 4
  %self = alloca { i32, i32 }, align 4
  %3 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 0
  store i32 %0, i32* %3, align 4
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %self, i32 0, i32 1
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata { i32, i32 }* %self, metadata !3021, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::Chars as core::iter::Iterator>::next::{closure#0}]"* %f.dbg.spill, metadata !3022, metadata !DIExpression()), !dbg !3029
  store i8 0, i8* %_9, align 1, !dbg !3030
  store i8 1, i8* %_9, align 1, !dbg !3030
  %5 = bitcast { i32, i32 }* %self to i32*, !dbg !3030
  %6 = load i32, i32* %5, align 4, !dbg !3030, !range !1207
  %_3 = zext i32 %6 to i64, !dbg !3030
  switch i64 %_3, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3031

bb2:                                              ; preds = %start
  unreachable, !dbg !3030

bb1:                                              ; preds = %start
  store i32 1114112, i32* %2, align 4, !dbg !3032
  br label %bb7, !dbg !3032

bb3:                                              ; preds = %start
  %7 = bitcast { i32, i32 }* %self to %"core::option::Option<u32>::Some"*, !dbg !3033
  %8 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %7, i32 0, i32 1, !dbg !3033
  %x = load i32, i32* %8, align 4, !dbg !3033
  store i32 %x, i32* %x.dbg.spill, align 4, !dbg !3033
  call void @llvm.dbg.declare(metadata i32* %x.dbg.spill, metadata !3023, metadata !DIExpression()), !dbg !3034
  store i8 0, i8* %_9, align 1, !dbg !3035
  store i32 %x, i32* %_7, align 4, !dbg !3035
  %9 = load i32, i32* %_7, align 4, !dbg !3035
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
  %_5 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hdb8dac89f30f1d27E"(i32 %9), !dbg !3035, !range !345
  br label %bb4, !dbg !3035

bb4:                                              ; preds = %bb3
  store i32 %_5, i32* %2, align 4, !dbg !3036
  br label %bb7, !dbg !3037

bb7:                                              ; preds = %bb1, %bb4
  %10 = load i8, i8* %_9, align 1, !dbg !3037, !range !238
  %11 = trunc i8 %10 to i1, !dbg !3037
  br i1 %11, label %bb6, label %bb5, !dbg !3037

bb5:                                              ; preds = %bb6, %bb7
  %12 = load i32, i32* %2, align 4, !dbg !3038, !range !344
  ret i32 %12, !dbg !3038

bb6:                                              ; preds = %bb7
  br label %bb5, !dbg !3037
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h1e3be241a57d2d6aE"({ i32, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3039 {
start:
  %self.dbg.spill = alloca { i32, i64 }*, align 8
  store { i32, i64 }* %self, { i32, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i64 }** %self.dbg.spill, metadata !3060, metadata !DIExpression()), !dbg !3061
; call core::option::Option<T>::is_some
  %_2 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17he00cc1c1f027ac36E"({ i32, i64 }* align 8 dereferenceable(16) %self), !dbg !3062
  br label %bb1, !dbg !3062

bb1:                                              ; preds = %start
  %0 = xor i1 %_2, true, !dbg !3063
  ret i1 %0, !dbg !3064
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17he00cc1c1f027ac36E"({ i32, i64 }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3065 {
start:
  %self.dbg.spill = alloca { i32, i64 }*, align 8
  %0 = alloca i8, align 1
  store { i32, i64 }* %self, { i32, i64 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i32, i64 }** %self.dbg.spill, metadata !3067, metadata !DIExpression()), !dbg !3068
  %1 = bitcast { i32, i64 }* %self to i32*, !dbg !3069
  %2 = load i32, i32* %1, align 8, !dbg !3069, !range !344
  %3 = sub i32 %2, 1114112, !dbg !3069
  %4 = icmp eq i32 %3, 0, !dbg !3069
  %_2 = select i1 %4, i64 0, i64 1, !dbg !3069
  %5 = icmp eq i64 %_2, 1, !dbg !3070
  br i1 %5, label %bb2, label %bb1, !dbg !3070

bb2:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !3070
  br label %bb3, !dbg !3070

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3070
  br label %bb3, !dbg !3070

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i8, i8* %0, align 1, !dbg !3071, !range !238
  %7 = trunc i8 %6 to i1, !dbg !3071
  ret i1 %7, !dbg !3071
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define i128 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha43927676a2de699E"(i128 %0, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 !dbg !3072 {
start:
  %t.dbg.spill = alloca double, align 8
  %e.dbg.spill = alloca i8, align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %1 = alloca %"core::result::Result<f64, ParseFloatError>", align 8
  %2 = alloca i128, align 8
  %self = alloca %"core::result::Result<f64, core::num::ParseFloatError>", align 8
  store i128 %0, i128* %2, align 8
  %3 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %self to i8*
  %4 = bitcast i128* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<f64, core::num::ParseFloatError>"* %self, metadata !3100, metadata !DIExpression()), !dbg !3109
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !3101, metadata !DIExpression()), !dbg !3110
  store i8 0, i8* %_11, align 1, !dbg !3111
  store i8 1, i8* %_11, align 1, !dbg !3111
  %5 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %self to i8*, !dbg !3111
  %6 = load i8, i8* %5, align 8, !dbg !3111, !range !238
  %7 = trunc i8 %6 to i1, !dbg !3111
  %_3 = zext i1 %7 to i64, !dbg !3111
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3112

bb2:                                              ; preds = %start
  unreachable, !dbg !3111

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %self to %"core::result::Result<f64, core::num::ParseFloatError>::Ok"*, !dbg !3113
  %9 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Ok", %"core::result::Result<f64, core::num::ParseFloatError>::Ok"* %8, i32 0, i32 1, !dbg !3113
  %t = load double, double* %9, align 8, !dbg !3113
  store double %t, double* %t.dbg.spill, align 8, !dbg !3113
  call void @llvm.dbg.declare(metadata double* %t.dbg.spill, metadata !3102, metadata !DIExpression()), !dbg !3114
  %10 = bitcast %"core::result::Result<f64, ParseFloatError>"* %1 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !3115
  %11 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %10, i32 0, i32 1, !dbg !3115
  store double %t, double* %11, align 8, !dbg !3115
  %12 = bitcast %"core::result::Result<f64, ParseFloatError>"* %1 to i8*, !dbg !3115
  store i8 0, i8* %12, align 8, !dbg !3115
  br label %bb5, !dbg !3116

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %self to %"core::result::Result<f64, core::num::ParseFloatError>::Err"*, !dbg !3117
  %14 = getelementptr inbounds %"core::result::Result<f64, core::num::ParseFloatError>::Err", %"core::result::Result<f64, core::num::ParseFloatError>::Err"* %13, i32 0, i32 1, !dbg !3117
  %15 = load i8, i8* %14, align 1, !dbg !3117, !range !238
  %e = trunc i8 %15 to i1, !dbg !3117
  %16 = zext i1 %e to i8, !dbg !3117
  store i8 %16, i8* %e.dbg.spill, align 1, !dbg !3117
  call void @llvm.dbg.declare(metadata i8* %e.dbg.spill, metadata !3104, metadata !DIExpression()), !dbg !3118
  store i8 0, i8* %_11, align 1, !dbg !3119
  %17 = zext i1 %e to i8, !dbg !3119
  store i8 %17, i8* %_9, align 1, !dbg !3119
  %18 = load i8, i8* %_9, align 1, !dbg !3119, !range !238
  %19 = trunc i8 %18 to i1, !dbg !3119
; call <f64 as num_traits::Num>::from_str_radix::{{closure}}
  %_7 = call zeroext i1 @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h549e94cd41e03766E"(i64* align 8 dereferenceable(16) %op, i1 zeroext %19), !dbg !3119
  br label %bb4, !dbg !3119

bb4:                                              ; preds = %bb1
  %20 = bitcast %"core::result::Result<f64, ParseFloatError>"* %1 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !3120
  %21 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %20, i32 0, i32 1, !dbg !3120
  %22 = zext i1 %_7 to i8, !dbg !3120
  store i8 %22, i8* %21, align 1, !dbg !3120
  %23 = bitcast %"core::result::Result<f64, ParseFloatError>"* %1 to i8*, !dbg !3120
  store i8 1, i8* %23, align 8, !dbg !3120
  br label %bb5, !dbg !3121

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !3122, !range !238
  %25 = trunc i8 %24 to i1, !dbg !3122
  br i1 %25, label %bb7, label %bb6, !dbg !3122

bb6:                                              ; preds = %bb7, %bb5
  %26 = bitcast %"core::result::Result<f64, ParseFloatError>"* %1 to i128*, !dbg !3123
  %27 = load i128, i128* %26, align 8, !dbg !3123
  ret i128 %27, !dbg !3123

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !3122
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nounwind
define i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb71883dcc5fa9debE"(i64 %0, i64* align 8 dereferenceable(16) %op) unnamed_addr #0 !dbg !3124 {
start:
  %t.dbg.spill = alloca float, align 4
  %e.dbg.spill = alloca i8, align 1
  %op.dbg.spill = alloca i64*, align 8
  %_11 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %1 = alloca %"core::result::Result<f32, ParseFloatError>", align 4
  %2 = alloca i64, align 8
  %self = alloca %"core::result::Result<f32, core::num::ParseFloatError>", align 4
  store i64 %0, i64* %2, align 8
  %3 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %self to i8*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 8 %4, i64 8, i1 false)
  call void @llvm.dbg.declare(metadata %"core::result::Result<f32, core::num::ParseFloatError>"* %self, metadata !3146, metadata !DIExpression()), !dbg !3154
  store i64* %op, i64** %op.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64** %op.dbg.spill, metadata !3147, metadata !DIExpression()), !dbg !3155
  store i8 0, i8* %_11, align 1, !dbg !3156
  store i8 1, i8* %_11, align 1, !dbg !3156
  %5 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %self to i8*, !dbg !3156
  %6 = load i8, i8* %5, align 4, !dbg !3156, !range !238
  %7 = trunc i8 %6 to i1, !dbg !3156
  %_3 = zext i1 %7 to i64, !dbg !3156
  switch i64 %_3, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3157

bb2:                                              ; preds = %start
  unreachable, !dbg !3156

bb3:                                              ; preds = %start
  %8 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %self to %"core::result::Result<f32, core::num::ParseFloatError>::Ok"*, !dbg !3158
  %9 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Ok", %"core::result::Result<f32, core::num::ParseFloatError>::Ok"* %8, i32 0, i32 1, !dbg !3158
  %t = load float, float* %9, align 4, !dbg !3158
  store float %t, float* %t.dbg.spill, align 4, !dbg !3158
  call void @llvm.dbg.declare(metadata float* %t.dbg.spill, metadata !3148, metadata !DIExpression()), !dbg !3159
  %10 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3160
  %11 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %10, i32 0, i32 1, !dbg !3160
  store float %t, float* %11, align 4, !dbg !3160
  %12 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i8*, !dbg !3160
  store i8 0, i8* %12, align 4, !dbg !3160
  br label %bb5, !dbg !3161

bb1:                                              ; preds = %start
  %13 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %self to %"core::result::Result<f32, core::num::ParseFloatError>::Err"*, !dbg !3162
  %14 = getelementptr inbounds %"core::result::Result<f32, core::num::ParseFloatError>::Err", %"core::result::Result<f32, core::num::ParseFloatError>::Err"* %13, i32 0, i32 1, !dbg !3162
  %15 = load i8, i8* %14, align 1, !dbg !3162, !range !238
  %e = trunc i8 %15 to i1, !dbg !3162
  %16 = zext i1 %e to i8, !dbg !3162
  store i8 %16, i8* %e.dbg.spill, align 1, !dbg !3162
  call void @llvm.dbg.declare(metadata i8* %e.dbg.spill, metadata !3150, metadata !DIExpression()), !dbg !3163
  store i8 0, i8* %_11, align 1, !dbg !3164
  %17 = zext i1 %e to i8, !dbg !3164
  store i8 %17, i8* %_9, align 1, !dbg !3164
  %18 = load i8, i8* %_9, align 1, !dbg !3164, !range !238
  %19 = trunc i8 %18 to i1, !dbg !3164
; call <f32 as num_traits::Num>::from_str_radix::{{closure}}
  %_7 = call zeroext i1 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h581169742fb4ec99E"(i64* align 8 dereferenceable(16) %op, i1 zeroext %19), !dbg !3164
  br label %bb4, !dbg !3164

bb4:                                              ; preds = %bb1
  %20 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !3165
  %21 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %20, i32 0, i32 1, !dbg !3165
  %22 = zext i1 %_7 to i8, !dbg !3165
  store i8 %22, i8* %21, align 1, !dbg !3165
  %23 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i8*, !dbg !3165
  store i8 1, i8* %23, align 4, !dbg !3165
  br label %bb5, !dbg !3166

bb5:                                              ; preds = %bb3, %bb4
  %24 = load i8, i8* %_11, align 1, !dbg !3167, !range !238
  %25 = trunc i8 %24 to i1, !dbg !3167
  br i1 %25, label %bb7, label %bb6, !dbg !3167

bb6:                                              ; preds = %bb7, %bb5
  %26 = bitcast %"core::result::Result<f32, ParseFloatError>"* %1 to i64*, !dbg !3168
  %27 = load i64, i64* %26, align 4, !dbg !3168
  ret i64 %27, !dbg !3168

bb7:                                              ; preds = %bb5
  br label %bb6, !dbg !3167
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %self) unnamed_addr #0 !dbg !3169 {
start:
  %self.dbg.spill = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  store %"core::iter::Enumerate<core::str::Chars>"* %self, %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %self.dbg.spill, metadata !3174, metadata !DIExpression()), !dbg !3177
  ret %"core::iter::Enumerate<core::str::Chars>"* %self, !dbg !3178
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9d5a3c46bc8c6025E"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 !dbg !3179 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3183, metadata !DIExpression()), !dbg !3184
  %2 = insertvalue { i8*, i8* } undef, i8* %self.0, 0, !dbg !3185
  %3 = insertvalue { i8*, i8* } %2, i8* %self.1, 1, !dbg !3185
  ret { i8*, i8* } %3, !dbg !3185
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nounwind
define { i8*, i8* } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha8a6bdf8abd5ff80E"(i8* nonnull %self.0, i8* %self.1) unnamed_addr #0 !dbg !3186 {
start:
  %self.dbg.spill = alloca { i8*, i8* }, align 8
  %0 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 0
  store i8* %self.0, i8** %0, align 8
  %1 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self.dbg.spill, i32 0, i32 1
  store i8* %self.1, i8** %1, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %self.dbg.spill, metadata !3190, metadata !DIExpression()), !dbg !3193
  %2 = insertvalue { i8*, i8* } undef, i8* %self.0, 0, !dbg !3194
  %3 = insertvalue { i8*, i8* } %2, i8* %self.1, 1, !dbg !3194
  ret { i8*, i8* } %3, !dbg !3194
}

; <[T] as core::convert::AsRef<[T]>>::as_ref
; Function Attrs: nounwind
define { [0 x i8]*, i64 } @"_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hf8157f5f8be10685E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1) unnamed_addr #1 !dbg !3195 {
start:
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %0, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %1, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3201, metadata !DIExpression()), !dbg !3202
  %2 = insertvalue { [0 x i8]*, i64 } undef, [0 x i8]* %self.0, 0, !dbg !3203
  %3 = insertvalue { [0 x i8]*, i64 } %2, i64 %self.1, 1, !dbg !3203
  ret { [0 x i8]*, i64 } %3, !dbg !3203
}

; <&mut I as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nounwind
define { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E"(%"core::iter::Enumerate<core::str::Chars>"** align 8 dereferenceable(8) %self) unnamed_addr #1 !dbg !3204 {
start:
  %self.dbg.spill = alloca %"core::iter::Enumerate<core::str::Chars>"**, align 8
  store %"core::iter::Enumerate<core::str::Chars>"** %self, %"core::iter::Enumerate<core::str::Chars>"*** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"*** %self.dbg.spill, metadata !3210, metadata !DIExpression()), !dbg !3213
  %_2 = load %"core::iter::Enumerate<core::str::Chars>"*, %"core::iter::Enumerate<core::str::Chars>"** %self, align 8, !dbg !3214, !nonnull !4
; call <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next
  %0 = call { i64, i32 } @"_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h25a9e1fc1ba2b9adE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %_2), !dbg !3214
  %1 = extractvalue { i64, i32 } %0, 0, !dbg !3214
  %2 = extractvalue { i64, i32 } %0, 1, !dbg !3214
  br label %bb1, !dbg !3214

bb1:                                              ; preds = %start
  %3 = insertvalue { i64, i32 } undef, i64 %1, 0, !dbg !3215
  %4 = insertvalue { i64, i32 } %3, i32 %2, 1, !dbg !3215
  ret { i64, i32 } %4, !dbg !3215
}

; <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
; Function Attrs: nounwind
define align 1 dereferenceable(1) i8* @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h418df6df8687309aE"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %index) unnamed_addr #1 !dbg !3216 {
start:
  %index.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3219, metadata !DIExpression()), !dbg !3221
  store i64 %index, i64* %index.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %index.dbg.spill, metadata !3220, metadata !DIExpression()), !dbg !3222
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %0 = call align 1 dereferenceable(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %index), !dbg !3223
  br label %bb1, !dbg !3223

bb1:                                              ; preds = %start
  ret i8* %0, !dbg !3224
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nounwind
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he900d6ddd152772fE"([0 x i8]* nonnull align 1 %self.0, i64 %self.1, [0 x i8]* nonnull align 1 %other.0, i64 %other.1) unnamed_addr #1 !dbg !3225 {
start:
  %size.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 0
  store [0 x i8]* %self.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %self.dbg.spill, i32 0, i32 1
  store i64 %self.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %self.dbg.spill, metadata !3228, metadata !DIExpression()), !dbg !3232
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 0
  store [0 x i8]* %other.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %other.dbg.spill, i32 0, i32 1
  store i64 %other.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %other.dbg.spill, metadata !3229, metadata !DIExpression()), !dbg !3233
  %_3 = icmp ne i64 %self.1, %other.1, !dbg !3234
  br i1 %_3, label %bb1, label %bb2, !dbg !3234

bb2:                                              ; preds = %start
; call core::mem::size_of_val
  %size = call i64 @_ZN4core3mem11size_of_val17h8cf98265f313b93aE([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !3235
  store i64 %size, i64* %size.dbg.spill, align 8, !dbg !3235
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3230, metadata !DIExpression()), !dbg !3236
  br label %bb3, !dbg !3235

bb1:                                              ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3237
  br label %bb7, !dbg !3238

bb7:                                              ; preds = %bb6, %bb1
  %5 = load i8, i8* %0, align 1, !dbg !3238, !range !238
  %6 = trunc i8 %5 to i1, !dbg !3238
  ret i1 %6, !dbg !3238

bb3:                                              ; preds = %bb2
; call core::slice::<impl [T]>::as_ptr
  %_12 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h71c8ac8c06b7d8a2E"([0 x i8]* nonnull align 1 %self.0, i64 %self.1), !dbg !3239
  br label %bb4, !dbg !3239

bb4:                                              ; preds = %bb3
; call core::slice::<impl [T]>::as_ptr
  %_15 = call i8* @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h71c8ac8c06b7d8a2E"([0 x i8]* nonnull align 1 %other.0, i64 %other.1), !dbg !3240
  br label %bb5, !dbg !3240

bb5:                                              ; preds = %bb4
  %_10 = call signext i32 @memcmp(i8* %_12, i8* %_15, i64 %size), !dbg !3241
  br label %bb6, !dbg !3241

bb6:                                              ; preds = %bb5
  %7 = icmp eq i32 %_10, 0, !dbg !3241
  %8 = zext i1 %7 to i8, !dbg !3241
  store i8 %8, i8* %0, align 1, !dbg !3241
  br label %bb7, !dbg !3238
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h604e3fef0399fad4E"(i8* align 1 dereferenceable_or_null(1) %0) unnamed_addr #0 !dbg !3242 {
start:
  %v.dbg.spill = alloca i8*, align 8
  %1 = alloca i8*, align 8
  %self = alloca i8*, align 8
  store i8* %0, i8** %self, align 8
  call void @llvm.dbg.declare(metadata i8** %self, metadata !3263, metadata !DIExpression()), !dbg !3266
  %2 = bitcast i8** %self to {}**, !dbg !3267
  %3 = load {}*, {}** %2, align 8, !dbg !3267
  %4 = icmp eq {}* %3, null, !dbg !3267
  %_2 = select i1 %4, i64 0, i64 1, !dbg !3267
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3268

bb2:                                              ; preds = %start
  unreachable, !dbg !3267

bb1:                                              ; preds = %start
  %5 = bitcast i8** %1 to {}**, !dbg !3269
  store {}* null, {}** %5, align 8, !dbg !3269
  br label %bb4, !dbg !3270

bb3:                                              ; preds = %start
  %v = load i8*, i8** %self, align 8, !dbg !3271, !nonnull !4
  store i8* %v, i8** %v.dbg.spill, align 8, !dbg !3271
  call void @llvm.dbg.declare(metadata i8** %v.dbg.spill, metadata !3264, metadata !DIExpression()), !dbg !3272
  store i8* %v, i8** %1, align 8, !dbg !3273
  br label %bb4, !dbg !3274

bb4:                                              ; preds = %bb1, %bb3
  %6 = load i8*, i8** %1, align 8, !dbg !3275
  ret i8* %6, !dbg !3275
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h833feb00c42a4ac7E"(i64 %0, i64 %1) unnamed_addr #0 !dbg !3276 {
start:
  %v.dbg.spill = alloca i64, align 8
  %2 = alloca { i64, i64 }, align 8
  %self = alloca { i64, i64 }, align 8
  %3 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 0
  store i64 %0, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %self, i32 0, i32 1
  store i64 %1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { i64, i64 }* %self, metadata !3294, metadata !DIExpression()), !dbg !3297
  %5 = bitcast { i64, i64 }* %self to i64*, !dbg !3298
  %_2 = load i64, i64* %5, align 8, !dbg !3298, !range !792
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3299

bb2:                                              ; preds = %start
  unreachable, !dbg !3298

bb1:                                              ; preds = %start
  %6 = bitcast { i64, i64 }* %2 to i64*, !dbg !3300
  store i64 1, i64* %6, align 8, !dbg !3300
  br label %bb4, !dbg !3301

bb3:                                              ; preds = %start
  %7 = bitcast { i64, i64 }* %self to %"core::option::Option<u64>::Some"*, !dbg !3302
  %8 = getelementptr inbounds %"core::option::Option<u64>::Some", %"core::option::Option<u64>::Some"* %7, i32 0, i32 1, !dbg !3302
  %v = load i64, i64* %8, align 8, !dbg !3302
  store i64 %v, i64* %v.dbg.spill, align 8, !dbg !3302
  call void @llvm.dbg.declare(metadata i64* %v.dbg.spill, metadata !3295, metadata !DIExpression()), !dbg !3303
  %9 = bitcast { i64, i64 }* %2 to %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"*, !dbg !3304
  %10 = getelementptr inbounds %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue", %"core::ops::ControlFlow<core::option::Option<core::convert::Infallible>, u64>::Continue"* %9, i32 0, i32 1, !dbg !3304
  store i64 %v, i64* %10, align 8, !dbg !3304
  %11 = bitcast { i64, i64 }* %2 to i64*, !dbg !3304
  store i64 0, i64* %11, align 8, !dbg !3304
  br label %bb4, !dbg !3305

bb4:                                              ; preds = %bb1, %bb3
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 0, !dbg !3306
  %13 = load i64, i64* %12, align 8, !dbg !3306, !range !792
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i32 0, i32 1, !dbg !3306
  %15 = load i64, i64* %14, align 8, !dbg !3306
  %16 = insertvalue { i64, i64 } undef, i64 %13, 0, !dbg !3306
  %17 = insertvalue { i64, i64 } %16, i64 %15, 1, !dbg !3306
  ret { i64, i64 } %17, !dbg !3306
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define i32 @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hedeb98747c67b596E"(i32 %0) unnamed_addr #0 !dbg !3307 {
start:
  %v.dbg.spill = alloca i32, align 4
  %1 = alloca i32, align 4
  %self = alloca i32, align 4
  store i32 %0, i32* %self, align 4
  call void @llvm.dbg.declare(metadata i32* %self, metadata !3326, metadata !DIExpression()), !dbg !3329
  %2 = load i32, i32* %self, align 4, !dbg !3330, !range !344
  %3 = sub i32 %2, 1114112, !dbg !3330
  %4 = icmp eq i32 %3, 0, !dbg !3330
  %_2 = select i1 %4, i64 0, i64 1, !dbg !3330
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb3
  ], !dbg !3331

bb2:                                              ; preds = %start
  unreachable, !dbg !3330

bb1:                                              ; preds = %start
  store i32 1114112, i32* %1, align 4, !dbg !3332
  br label %bb4, !dbg !3333

bb3:                                              ; preds = %start
  %v = load i32, i32* %self, align 4, !dbg !3334, !range !345
  store i32 %v, i32* %v.dbg.spill, align 4, !dbg !3334
  call void @llvm.dbg.declare(metadata i32* %v.dbg.spill, metadata !3327, metadata !DIExpression()), !dbg !3335
  store i32 %v, i32* %1, align 4, !dbg !3336
  br label %bb4, !dbg !3337

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i32, i32* %1, align 4, !dbg !3338, !range !344
  ret i32 %5, !dbg !3338
}

; <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
; Function Attrs: inlinehint nounwind
define i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha18dfe0473024406E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3339 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3344, metadata !DIExpression()), !dbg !3346
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3345, metadata !DIExpression()), !dbg !3347
; call core::ptr::const_ptr::<impl *const [T]>::as_ptr
  %_3 = call i8* @"_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6bb91fbf2dc375fbE"([0 x i8]* %slice.0, i64 %slice.1), !dbg !3348
  br label %bb1, !dbg !3348

bb1:                                              ; preds = %start
  store i8* %_3, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !262, metadata !DIExpression()), !dbg !3349
  store i64 %self, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !270, metadata !DIExpression()), !dbg !3351
  store i8* %_3, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !274, metadata !DIExpression()), !dbg !3352
  store i64 %self, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !280, metadata !DIExpression()), !dbg !3354
  %3 = getelementptr inbounds i8, i8* %_3, i64 %self, !dbg !3355
  store i8* %3, i8** %0, align 8, !dbg !3355
  %4 = load i8*, i8** %0, align 8, !dbg !3355
  br label %bb2, !dbg !3348

bb2:                                              ; preds = %bb1
  ret i8* %4, !dbg !3356
}

; <usize as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nounwind
define align 1 dereferenceable_or_null(1) i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h14f5d3ac0968a5c0E"(i64 %self, [0 x i8]* nonnull align 1 %slice.0, i64 %slice.1) unnamed_addr #0 !dbg !3357 {
start:
  %slice.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %self.dbg.spill = alloca i64, align 8
  %0 = alloca i8*, align 8
  store i64 %self, i64* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill, metadata !3361, metadata !DIExpression()), !dbg !3363
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 0
  store [0 x i8]* %slice.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %slice.dbg.spill, i32 0, i32 1
  store i64 %slice.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %slice.dbg.spill, metadata !3362, metadata !DIExpression()), !dbg !3364
  %_3 = icmp ult i64 %self, %slice.1, !dbg !3365
  br i1 %_3, label %bb1, label %bb3, !dbg !3365

bb3:                                              ; preds = %start
  %3 = bitcast i8** %0 to {}**, !dbg !3366
  store {}* null, {}** %3, align 8, !dbg !3366
  br label %bb4, !dbg !3367

bb1:                                              ; preds = %start
; call <usize as core::slice::index::SliceIndex<[T]>>::get_unchecked
  %_9 = call i8* @"_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha18dfe0473024406E"(i64 %self, [0 x i8]* %slice.0, i64 %slice.1), !dbg !3368
  br label %bb2, !dbg !3368

bb2:                                              ; preds = %bb1
  store i8* %_9, i8** %0, align 8, !dbg !3369
  br label %bb4, !dbg !3367

bb4:                                              ; preds = %bb3, %bb2
  %4 = load i8*, i8** %0, align 8, !dbg !3370
  ret i8* %4, !dbg !3370
}

; <core::num::dec2flt::common::BiasedFp as core::cmp::PartialEq>::ne
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17hc9d6db301fc3a3bdE"({ i64, i32 }* align 8 dereferenceable(16) %self, { i64, i32 }* align 8 dereferenceable(16) %other) unnamed_addr #0 !dbg !3371 {
start:
  %__self_0_1.dbg.spill = alloca i32*, align 8
  %__self_0_0.dbg.spill = alloca i64*, align 8
  %__self_1_1.dbg.spill = alloca i32*, align 8
  %__self_1_0.dbg.spill = alloca i64*, align 8
  %other.dbg.spill = alloca { i64, i32 }*, align 8
  %self.dbg.spill = alloca { i64, i32 }*, align 8
  %0 = alloca i8, align 1
  store { i64, i32 }* %self, { i64, i32 }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }** %self.dbg.spill, metadata !3377, metadata !DIExpression()), !dbg !3387
  store { i64, i32 }* %other, { i64, i32 }** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i64, i32 }** %other.dbg.spill, metadata !3378, metadata !DIExpression()), !dbg !3387
  %__self_1_0 = bitcast { i64, i32 }* %other to i64*, !dbg !3388
  store i64* %__self_1_0, i64** %__self_1_0.dbg.spill, align 8, !dbg !3388
  call void @llvm.dbg.declare(metadata i64** %__self_1_0.dbg.spill, metadata !3379, metadata !DIExpression()), !dbg !3389
  %__self_1_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %other, i32 0, i32 1, !dbg !3390
  store i32* %__self_1_1, i32** %__self_1_1.dbg.spill, align 8, !dbg !3390
  call void @llvm.dbg.declare(metadata i32** %__self_1_1.dbg.spill, metadata !3382, metadata !DIExpression()), !dbg !3391
  %__self_0_0 = bitcast { i64, i32 }* %self to i64*, !dbg !3389
  store i64* %__self_0_0, i64** %__self_0_0.dbg.spill, align 8, !dbg !3389
  call void @llvm.dbg.declare(metadata i64** %__self_0_0.dbg.spill, metadata !3384, metadata !DIExpression()), !dbg !3392
  %__self_0_1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %self, i32 0, i32 1, !dbg !3391
  store i32* %__self_0_1, i32** %__self_0_1.dbg.spill, align 8, !dbg !3391
  call void @llvm.dbg.declare(metadata i32** %__self_0_1.dbg.spill, metadata !3386, metadata !DIExpression()), !dbg !3393
  %_8 = load i64, i64* %__self_0_0, align 8, !dbg !3392
  %_9 = load i64, i64* %__self_1_0, align 8, !dbg !3392
  %_7 = icmp ne i64 %_8, %_9, !dbg !3392
  br i1 %_7, label %bb1, label %bb2, !dbg !3393

bb2:                                              ; preds = %start
  %_11 = load i32, i32* %__self_0_1, align 4, !dbg !3393
  %_12 = load i32, i32* %__self_1_1, align 4, !dbg !3393
  %_10 = icmp ne i32 %_11, %_12, !dbg !3393
  %1 = zext i1 %_10 to i8, !dbg !3393
  store i8 %1, i8* %0, align 1, !dbg !3393
  br label %bb3, !dbg !3393

bb1:                                              ; preds = %start
  store i8 1, i8* %0, align 1, !dbg !3393
  br label %bb3, !dbg !3393

bb3:                                              ; preds = %bb2, %bb1
  %2 = load i8, i8* %0, align 1, !dbg !3394, !range !238
  %3 = trunc i8 %2 to i1, !dbg !3394
  ret i1 %3, !dbg !3394
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nounwind
define internal i8 @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h21872b9da702deb4E"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %idx) unnamed_addr #0 !dbg !3395 {
start:
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3401, metadata !DIExpression()), !dbg !3403
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !3402, metadata !DIExpression()), !dbg !3404
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %0 = call i8 @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17habce9b3f3ab3f3ffE"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %idx), !dbg !3405
  br label %bb1, !dbg !3405

bb1:                                              ; preds = %start
  ret i8 %0, !dbg !3406
}

; <core::str::iter::Bytes as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define internal void @"_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69cd9049a6c0c30bE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3407 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3411, metadata !DIExpression()), !dbg !3412
; call <core::iter::adapters::copied::Copied<I> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h873532b9b576354dE"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !3413
  br label %bb1, !dbg !3413

bb1:                                              ; preds = %start
  ret void, !dbg !3414
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb51acee8bd391655E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3415 {
start:
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3420, metadata !DIExpression()), !dbg !3421
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17he73579e4f5eff6b8E({ i8*, i8* }* align 8 dereferenceable(16) %self), !dbg !3422
  %_2.0 = extractvalue { i32, i32 } %0, 0, !dbg !3422
  %_2.1 = extractvalue { i32, i32 } %0, 1, !dbg !3422
  br label %bb1, !dbg !3422

bb1:                                              ; preds = %start
; call core::option::Option<T>::map
  %1 = call i32 @"_ZN4core6option15Option$LT$T$GT$3map17hffef032889a08927E"(i32 %_2.0, i32 %_2.1), !dbg !3422, !range !344
  br label %bb2, !dbg !3422

bb2:                                              ; preds = %bb1
  ret i32 %1, !dbg !3423
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::{{closure}}
; Function Attrs: inlinehint nounwind
define i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hdb8dac89f30f1d27E"(i32 %ch) unnamed_addr #0 !dbg !3424 {
start:
  %ch.dbg.spill = alloca i32, align 4
  %_1.dbg.spill = alloca %"[closure@<core::str::Chars as core::iter::Iterator>::next::{closure#0}]", align 1
  call void @llvm.dbg.declare(metadata %"[closure@<core::str::Chars as core::iter::Iterator>::next::{closure#0}]"* %_1.dbg.spill, metadata !3429, metadata !DIExpression()), !dbg !3430
  store i32 %ch, i32* %ch.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !3428, metadata !DIExpression()), !dbg !3431
; call core::char::convert::from_u32_unchecked
  %0 = call i32 @_ZN4core4char7convert18from_u32_unchecked17h765baebb9a612ccdE(i32 %ch), !dbg !3432, !range !345
  br label %bb1, !dbg !3432

bb1:                                              ; preds = %start
  ret i32 %0, !dbg !3433
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define { i32, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h02c92a3856b0b191E"() unnamed_addr #0 !dbg !3434 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i32, i32 }, align 4
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !3439, metadata !DIExpression()), !dbg !3440
  %1 = bitcast { i32, i32 }* %0 to i32*, !dbg !3441
  store i32 0, i32* %1, align 4, !dbg !3441
  %2 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 0, !dbg !3442
  %3 = load i32, i32* %2, align 4, !dbg !3442, !range !1207
  %4 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %0, i32 0, i32 1, !dbg !3442
  %5 = load i32, i32* %4, align 4, !dbg !3442
  %6 = insertvalue { i32, i32 } undef, i32 %3, 0, !dbg !3442
  %7 = insertvalue { i32, i32 } %6, i32 %5, 1, !dbg !3442
  ret { i32, i32 } %7, !dbg !3442
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define { i32, float } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7d225edce8e764a3E"() unnamed_addr #0 !dbg !3443 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i32, float }, align 4
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !3447, metadata !DIExpression()), !dbg !3448
  %1 = bitcast { i32, float }* %0 to i32*, !dbg !3449
  store i32 0, i32* %1, align 4, !dbg !3449
  %2 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 0, !dbg !3450
  %3 = load i32, i32* %2, align 4, !dbg !3450, !range !1207
  %4 = getelementptr inbounds { i32, float }, { i32, float }* %0, i32 0, i32 1, !dbg !3450
  %5 = load float, float* %4, align 4, !dbg !3450
  %6 = insertvalue { i32, float } undef, i32 %3, 0, !dbg !3450
  %7 = insertvalue { i32, float } %6, float %5, 1, !dbg !3450
  ret { i32, float } %7, !dbg !3450
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, double } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hcd31cae4291415daE"() unnamed_addr #0 !dbg !3451 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i64, double }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !3455, metadata !DIExpression()), !dbg !3456
  %1 = bitcast { i64, double }* %0 to i64*, !dbg !3457
  store i64 0, i64* %1, align 8, !dbg !3457
  %2 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 0, !dbg !3458
  %3 = load i64, i64* %2, align 8, !dbg !3458, !range !792
  %4 = getelementptr inbounds { i64, double }, { i64, double }* %0, i32 0, i32 1, !dbg !3458
  %5 = load double, double* %4, align 8, !dbg !3458
  %6 = insertvalue { i64, double } undef, i64 %3, 0, !dbg !3458
  %7 = insertvalue { i64, double } %6, double %5, 1, !dbg !3458
  ret { i64, double } %7, !dbg !3458
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nounwind
define { i64, i32 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he188c053a388e2b1E"() unnamed_addr #0 !dbg !3459 {
start:
  %residual.dbg.spill = alloca %"core::option::Option<core::convert::Infallible>::None", align 1
  %0 = alloca { i64, i32 }, align 8
  call void @llvm.dbg.declare(metadata %"core::option::Option<core::convert::Infallible>::None"* %residual.dbg.spill, metadata !3463, metadata !DIExpression()), !dbg !3464
  %1 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !3465
  store i32 1114112, i32* %1, align 8, !dbg !3465
  %2 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 0, !dbg !3466
  %3 = load i64, i64* %2, align 8, !dbg !3466
  %4 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %0, i32 0, i32 1, !dbg !3466
  %5 = load i32, i32* %4, align 8, !dbg !3466, !range !344
  %6 = insertvalue { i64, i32 } undef, i64 %3, 0, !dbg !3466
  %7 = insertvalue { i64, i32 } %6, i32 %5, 1, !dbg !3466
  ret { i64, i32 } %7, !dbg !3466
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h22ba08a09e27f5f4E"(i8* align 1 dereferenceable(1) %self, i8* align 1 dereferenceable(1) %other) unnamed_addr #0 !dbg !3467 {
start:
  %__arg_1_0.dbg.spill4 = alloca {}*, align 8
  %__self_0.dbg.spill2 = alloca {}*, align 8
  %__arg_1_0.dbg.spill = alloca {}*, align 8
  %__self_0.dbg.spill = alloca {}*, align 8
  %__arg_1_vi.dbg.spill = alloca i64, align 8
  %__self_vi.dbg.spill = alloca i64, align 8
  %other.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_13 = alloca { i8*, i8* }, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3473, metadata !DIExpression()), !dbg !3485
  store i8* %other, i8** %other.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %other.dbg.spill, metadata !3474, metadata !DIExpression()), !dbg !3485
  %1 = load i8, i8* %self, align 1, !dbg !3485, !range !238
  %2 = trunc i8 %1 to i1, !dbg !3485
  %__self_vi = zext i1 %2 to i64, !dbg !3485
  store i64 %__self_vi, i64* %__self_vi.dbg.spill, align 8, !dbg !3485
  call void @llvm.dbg.declare(metadata i64* %__self_vi.dbg.spill, metadata !3475, metadata !DIExpression()), !dbg !3486
  %3 = load i8, i8* %other, align 1, !dbg !3486, !range !238
  %4 = trunc i8 %3 to i1, !dbg !3486
  %__arg_1_vi = zext i1 %4 to i64, !dbg !3486
  store i64 %__arg_1_vi, i64* %__arg_1_vi.dbg.spill, align 8, !dbg !3486
  call void @llvm.dbg.declare(metadata i64* %__arg_1_vi.dbg.spill, metadata !3477, metadata !DIExpression()), !dbg !3487
  %_10 = icmp eq i64 %__self_vi, %__arg_1_vi, !dbg !3487
  br i1 %_10, label %bb1, label %bb10, !dbg !3487

bb10:                                             ; preds = %start
  store i8 0, i8* %0, align 1, !dbg !3487
  br label %bb11, !dbg !3487

bb1:                                              ; preds = %start
  %5 = bitcast { i8*, i8* }* %_13 to i8**, !dbg !3487
  store i8* %self, i8** %5, align 8, !dbg !3487
  %6 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1, !dbg !3487
  store i8* %other, i8** %6, align 8, !dbg !3487
  %7 = bitcast { i8*, i8* }* %_13 to i8**, !dbg !3487
  %8 = load i8*, i8** %7, align 8, !dbg !3487, !nonnull !4
  %9 = load i8, i8* %8, align 1, !dbg !3487, !range !238
  %10 = trunc i8 %9 to i1, !dbg !3487
  %_18 = zext i1 %10 to i64, !dbg !3487
  switch i64 %_18, label %bb3 [
    i64 0, label %bb2
    i64 1, label %bb4
  ], !dbg !3487

bb3:                                              ; preds = %bb2, %bb4, %bb1
  unreachable, !dbg !3487

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1, !dbg !3487
  %12 = load i8*, i8** %11, align 8, !dbg !3487, !nonnull !4
  %13 = load i8, i8* %12, align 1, !dbg !3487, !range !238
  %14 = trunc i8 %13 to i1, !dbg !3487
  %_16 = zext i1 %14 to i64, !dbg !3487
  %15 = icmp eq i64 %_16, 0, !dbg !3487
  br i1 %15, label %bb5, label %bb3, !dbg !3487

bb4:                                              ; preds = %bb1
  %16 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1, !dbg !3487
  %17 = load i8*, i8** %16, align 8, !dbg !3487, !nonnull !4
  %18 = load i8, i8* %17, align 1, !dbg !3487, !range !238
  %19 = trunc i8 %18 to i1, !dbg !3487
  %_17 = zext i1 %19 to i64, !dbg !3487
  %20 = icmp eq i64 %_17, 1, !dbg !3487
  br i1 %20, label %bb7, label %bb3, !dbg !3487

bb7:                                              ; preds = %bb4
  %21 = bitcast { i8*, i8* }* %_13 to i8**, !dbg !3488
  %22 = load i8*, i8** %21, align 8, !dbg !3488, !nonnull !4
  %23 = bitcast i8* %22 to %"core::ops::ControlFlow<()>::Break"*, !dbg !3488
  %__self_0 = getelementptr inbounds %"core::ops::ControlFlow<()>::Break", %"core::ops::ControlFlow<()>::Break"* %23, i32 0, i32 1, !dbg !3488
  store {}* %__self_0, {}** %__self_0.dbg.spill, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata {}** %__self_0.dbg.spill, metadata !3482, metadata !DIExpression()), !dbg !3489
  %24 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1, !dbg !3488
  %25 = load i8*, i8** %24, align 8, !dbg !3488, !nonnull !4
  %26 = bitcast i8* %25 to %"core::ops::ControlFlow<()>::Break"*, !dbg !3488
  %__arg_1_0 = getelementptr inbounds %"core::ops::ControlFlow<()>::Break", %"core::ops::ControlFlow<()>::Break"* %26, i32 0, i32 1, !dbg !3488
  store {}* %__arg_1_0, {}** %__arg_1_0.dbg.spill, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata {}** %__arg_1_0.dbg.spill, metadata !3484, metadata !DIExpression()), !dbg !3489
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %27 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h264c06fe5bf4a2f5E"({}* nonnull align 1 %__self_0, {}* nonnull align 1 %__arg_1_0), !dbg !3489
  %28 = zext i1 %27 to i8, !dbg !3489
  store i8 %28, i8* %0, align 1, !dbg !3489
  br label %bb8, !dbg !3489

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !3490

bb9:                                              ; preds = %bb6, %bb8
  br label %bb11, !dbg !3487

bb5:                                              ; preds = %bb2
  %29 = bitcast { i8*, i8* }* %_13 to i8**, !dbg !3491
  %30 = load i8*, i8** %29, align 8, !dbg !3491, !nonnull !4
  %31 = bitcast i8* %30 to %"core::ops::ControlFlow<()>::Continue"*, !dbg !3491
  %__self_01 = getelementptr inbounds %"core::ops::ControlFlow<()>::Continue", %"core::ops::ControlFlow<()>::Continue"* %31, i32 0, i32 1, !dbg !3491
  store {}* %__self_01, {}** %__self_0.dbg.spill2, align 8, !dbg !3491
  call void @llvm.dbg.declare(metadata {}** %__self_0.dbg.spill2, metadata !3479, metadata !DIExpression()), !dbg !3492
  %32 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %_13, i32 0, i32 1, !dbg !3491
  %33 = load i8*, i8** %32, align 8, !dbg !3491, !nonnull !4
  %34 = bitcast i8* %33 to %"core::ops::ControlFlow<()>::Continue"*, !dbg !3491
  %__arg_1_03 = getelementptr inbounds %"core::ops::ControlFlow<()>::Continue", %"core::ops::ControlFlow<()>::Continue"* %34, i32 0, i32 1, !dbg !3491
  store {}* %__arg_1_03, {}** %__arg_1_0.dbg.spill4, align 8, !dbg !3491
  call void @llvm.dbg.declare(metadata {}** %__arg_1_0.dbg.spill4, metadata !3481, metadata !DIExpression()), !dbg !3492
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %35 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h264c06fe5bf4a2f5E"({}* nonnull align 1 %__self_01, {}* nonnull align 1 %__arg_1_03), !dbg !3492
  %36 = zext i1 %35 to i8, !dbg !3492
  store i8 %36, i8* %0, align 1, !dbg !3492
  br label %bb6, !dbg !3492

bb6:                                              ; preds = %bb5
  br label %bb9, !dbg !3490

bb11:                                             ; preds = %bb10, %bb9
  %37 = load i8, i8* %0, align 1, !dbg !3493, !range !238
  %38 = trunc i8 %37 to i1, !dbg !3493
  ret i1 %38, !dbg !3493
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nounwind
define align 1 dereferenceable(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE"({ i8*, i8* }* align 8 dereferenceable(16) %self, i64 %idx) unnamed_addr #1 !dbg !3494 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i.i = alloca i64, align 8
  %self.dbg.spill.i.i = alloca i8*, align 8
  %count.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i8*, align 8
  %idx.dbg.spill = alloca i64, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3497, metadata !DIExpression()), !dbg !3499
  store i64 %idx, i64* %idx.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %idx.dbg.spill, metadata !3498, metadata !DIExpression()), !dbg !3500
  %1 = bitcast { i8*, i8* }* %self to i8**, !dbg !3501
  %_5 = load i8*, i8** %1, align 8, !dbg !3501, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_4 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_5), !dbg !3501
  br label %bb1, !dbg !3501

bb1:                                              ; preds = %start
  store i8* %_4, i8** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i, metadata !3502, metadata !DIExpression()), !dbg !3508
  store i64 %idx, i64* %count.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i, metadata !3507, metadata !DIExpression()), !dbg !3510
  store i8* %_4, i8** %self.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i.i, metadata !3511, metadata !DIExpression()), !dbg !3517
  store i64 %idx, i64* %count.dbg.spill.i.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i.i, metadata !3516, metadata !DIExpression()), !dbg !3519
  %2 = getelementptr inbounds i8, i8* %_4, i64 %idx, !dbg !3520
  store i8* %2, i8** %0, align 8, !dbg !3520
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !3520
  br label %bb2, !dbg !3501

bb2:                                              ; preds = %bb1
  ret i8* %_3.i.i, !dbg !3521
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nounwind
define align 1 dereferenceable_or_null(1) i8* @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E"({ i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3522 {
start:
  %0 = alloca i8*, align 8
  %count.dbg.spill.i1.i = alloca i64, align 8
  %self.dbg.spill.i2.i = alloca i8*, align 8
  %old.dbg.spill.i = alloca i8*, align 8
  %offset.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca { i8*, i8* }*, align 8
  %1 = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %2 = alloca i8*, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3526, metadata !DIExpression()), !dbg !3527
  %3 = bitcast { i8*, i8* }* %self to i8**, !dbg !3528
  %_6 = load i8*, i8** %3, align 8, !dbg !3528, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_5 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_6), !dbg !3528
  br label %bb1, !dbg !3528

bb1:                                              ; preds = %start
; call core::ptr::mut_ptr::<impl *mut T>::is_null
  %_4 = call zeroext i1 @"_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcf7dfc9c26e0d15aE"(i8* %_5), !dbg !3528
  br label %bb2, !dbg !3528

bb2:                                              ; preds = %bb1
  %_3 = xor i1 %_4, true, !dbg !3529
  call void @llvm.assume(i1 %_3), !dbg !3530
  br label %bb3, !dbg !3530

bb3:                                              ; preds = %bb2
  br label %bb4, !dbg !3531

bb4:                                              ; preds = %bb3
  %4 = icmp eq i64 1, 0, !dbg !3531
  br i1 %4, label %bb8, label %bb5, !dbg !3531

bb8:                                              ; preds = %bb4
  br label %bb9, !dbg !3532

bb5:                                              ; preds = %bb4
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3533
  %_11 = load i8*, i8** %5, align 8, !dbg !3533
; call core::ptr::const_ptr::<impl *const T>::is_null
  %_10 = call zeroext i1 @"_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h28ca124dcefc1f68E"(i8* %_11), !dbg !3533
  br label %bb6, !dbg !3533

bb6:                                              ; preds = %bb5
  %_9 = xor i1 %_10, true, !dbg !3534
  call void @llvm.assume(i1 %_9), !dbg !3535
  br label %bb7, !dbg !3535

bb7:                                              ; preds = %bb6
  br label %bb9, !dbg !3532

bb9:                                              ; preds = %bb8, %bb7
  %6 = bitcast { i8*, i8* }* %self to i8**, !dbg !3536
  %_15 = load i8*, i8** %6, align 8, !dbg !3536, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_14 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_15), !dbg !3536
  br label %bb10, !dbg !3536

bb10:                                             ; preds = %bb9
  %7 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3536
  %_16 = load i8*, i8** %7, align 8, !dbg !3536
  %_12 = icmp eq i8* %_14, %_16, !dbg !3536
  br i1 %_12, label %bb11, label %bb12, !dbg !3536

bb12:                                             ; preds = %bb10
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill.i, metadata !3537, metadata !DIExpression()) #7, !dbg !3545
  store i64 1, i64* %offset.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill.i, metadata !3542, metadata !DIExpression()) #7, !dbg !3547
  %8 = bitcast { i8*, i8* }* %self to i8**, !dbg !3548
  %_12.i = load i8*, i8** %8, align 8, !dbg !3548, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %old.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_12.i) #7, !dbg !3548
  store i8* %old.i, i8** %old.dbg.spill.i, align 8, !dbg !3548
  call void @llvm.dbg.declare(metadata i8** %old.dbg.spill.i, metadata !3543, metadata !DIExpression()) #7, !dbg !3549
  %9 = bitcast { i8*, i8* }* %self to i8**, !dbg !3550
  %_16.i = load i8*, i8** %9, align 8, !dbg !3550, !nonnull !4
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_15.i = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %_16.i) #7, !dbg !3550
  store i8* %_15.i, i8** %self.dbg.spill.i2.i, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill.i2.i, metadata !3511, metadata !DIExpression()) #7, !dbg !3551
  store i64 1, i64* %count.dbg.spill.i1.i, align 8
  call void @llvm.dbg.declare(metadata i64* %count.dbg.spill.i1.i, metadata !3516, metadata !DIExpression()) #7, !dbg !3553
  %10 = getelementptr inbounds i8, i8* %_15.i, i64 1, !dbg !3554
  store i8* %10, i8** %0, align 8, !dbg !3554
  %_3.i.i = load i8*, i8** %0, align 8, !dbg !3554
; call core::ptr::non_null::NonNull<T>::new_unchecked
  %_13.i = call nonnull i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h232f62df0a4a4fe7E"(i8* %_3.i.i) #7, !dbg !3555
  %11 = bitcast { i8*, i8* }* %self to i8**, !dbg !3556
  store i8* %_13.i, i8** %11, align 8, !dbg !3556
  store i8* %old.i, i8** %1, align 8, !dbg !3557
  %12 = load i8*, i8** %1, align 8, !dbg !3558
  br label %bb13, !dbg !3559

bb11:                                             ; preds = %bb10
  %13 = bitcast i8** %2 to {}**, !dbg !3560
  store {}* null, {}** %13, align 8, !dbg !3560
  br label %bb14, !dbg !3561

bb14:                                             ; preds = %bb13, %bb11
  %14 = load i8*, i8** %2, align 8, !dbg !3562
  ret i8* %14, !dbg !3562

bb13:                                             ; preds = %bb12
  store i8* %12, i8** %2, align 8, !dbg !3563
  br label %bb14, !dbg !3561
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nounwind
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha1de5e1f1190acc2E"({ i64, { i64, i64 } }* noalias nocapture sret({ i64, { i64, i64 } }) dereferenceable(24) %0, { i8*, i8* }* align 8 dereferenceable(16) %self) unnamed_addr #0 !dbg !3564 {
start:
  %rhs.dbg.spill.i = alloca i64, align 8
  %self.dbg.spill.i = alloca i64, align 8
  %_1.dbg.spill.i = alloca i8*, align 8
  %diff.dbg.spill = alloca i64, align 8
  %1 = alloca i64, align 8
  %size.dbg.spill = alloca i64, align 8
  %start.dbg.spill = alloca i8*, align 8
  %self.dbg.spill = alloca { i8*, i8* }*, align 8
  %_23 = alloca { i64, i64 }, align 8
  %exact = alloca i64, align 8
  store { i8*, i8* }* %self, { i8*, i8* }** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata { i8*, i8* }** %self.dbg.spill, metadata !3568, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i64* %exact, metadata !3569, metadata !DIExpression()), !dbg !3578
  %2 = bitcast { i8*, i8* }* %self to i8**, !dbg !3579
  %start1 = load i8*, i8** %2, align 8, !dbg !3579, !nonnull !4
  store i8* %start1, i8** %start.dbg.spill, align 8, !dbg !3579
  call void @llvm.dbg.declare(metadata i8** %start.dbg.spill, metadata !3571, metadata !DIExpression()), !dbg !3580
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_6 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %start1), !dbg !3580
  br label %bb1, !dbg !3580

bb1:                                              ; preds = %start
  store i8* %_6, i8** %_1.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i8** %_1.dbg.spill.i, metadata !2977, metadata !DIExpression()), !dbg !3581
  store i64 1, i64* %size.dbg.spill, align 8, !dbg !3580
  call void @llvm.dbg.declare(metadata i64* %size.dbg.spill, metadata !3573, metadata !DIExpression()), !dbg !3583
  br label %bb2, !dbg !3580

bb2:                                              ; preds = %bb1
  %3 = icmp eq i64 1, 0, !dbg !3583
  br i1 %3, label %bb3, label %bb6, !dbg !3583

bb3:                                              ; preds = %bb2
  %4 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3583
  %_10 = load i8*, i8** %4, align 8, !dbg !3583
  %_9 = ptrtoint i8* %_10 to i64, !dbg !3583
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_12 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %start1), !dbg !3583
  br label %bb4, !dbg !3583

bb6:                                              ; preds = %bb2
  %5 = getelementptr inbounds { i8*, i8* }, { i8*, i8* }* %self, i32 0, i32 1, !dbg !3583
  %_16 = load i8*, i8** %5, align 8, !dbg !3583
  %_15 = ptrtoint i8* %_16 to i64, !dbg !3583
; call core::ptr::non_null::NonNull<T>::as_ptr
  %_18 = call i8* @"_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E"(i8* nonnull %start1), !dbg !3583
  br label %bb7, !dbg !3583

bb7:                                              ; preds = %bb6
  %_17 = ptrtoint i8* %_18 to i64, !dbg !3583
  %6 = sub nuw i64 %_15, %_17, !dbg !3583
  store i64 %6, i64* %1, align 8, !dbg !3583
  %diff = load i64, i64* %1, align 8, !dbg !3583
  store i64 %diff, i64* %diff.dbg.spill, align 8, !dbg !3583
  call void @llvm.dbg.declare(metadata i64* %diff.dbg.spill, metadata !3575, metadata !DIExpression()), !dbg !3584
  br label %bb8, !dbg !3583

bb8:                                              ; preds = %bb7
  %7 = udiv exact i64 %diff, 1, !dbg !3584
  store i64 %7, i64* %exact, align 8, !dbg !3584
  br label %bb9, !dbg !3584

bb9:                                              ; preds = %bb8
  br label %bb10, !dbg !3583

bb10:                                             ; preds = %bb5, %bb9
  %_22 = load i64, i64* %exact, align 8, !dbg !3585
  %_24 = load i64, i64* %exact, align 8, !dbg !3586
  %8 = bitcast { i64, i64 }* %_23 to %"core::option::Option<usize>::Some"*, !dbg !3587
  %9 = getelementptr inbounds %"core::option::Option<usize>::Some", %"core::option::Option<usize>::Some"* %8, i32 0, i32 1, !dbg !3587
  store i64 %_24, i64* %9, align 8, !dbg !3587
  %10 = bitcast { i64, i64 }* %_23 to i64*, !dbg !3587
  store i64 1, i64* %10, align 8, !dbg !3587
  %11 = bitcast { i64, { i64, i64 } }* %0 to i64*, !dbg !3588
  store i64 %_22, i64* %11, align 8, !dbg !3588
  %12 = getelementptr inbounds { i64, { i64, i64 } }, { i64, { i64, i64 } }* %0, i32 0, i32 1, !dbg !3588
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 0, !dbg !3588
  %14 = load i64, i64* %13, align 8, !dbg !3588, !range !792
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %_23, i32 0, i32 1, !dbg !3588
  %16 = load i64, i64* %15, align 8, !dbg !3588
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 0, !dbg !3588
  store i64 %14, i64* %17, align 8, !dbg !3588
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i32 0, i32 1, !dbg !3588
  store i64 %16, i64* %18, align 8, !dbg !3588
  ret void, !dbg !3589

bb4:                                              ; preds = %bb3
  %_11 = ptrtoint i8* %_12 to i64, !dbg !3583
  store i64 %_9, i64* %self.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %self.dbg.spill.i, metadata !3590, metadata !DIExpression()), !dbg !3595
  store i64 %_11, i64* %rhs.dbg.spill.i, align 8
  call void @llvm.dbg.declare(metadata i64* %rhs.dbg.spill.i, metadata !3594, metadata !DIExpression()), !dbg !3597
  %19 = sub i64 %_9, %_11, !dbg !3598
  store i64 %19, i64* %exact, align 8, !dbg !3583
  br label %bb5, !dbg !3583

bb5:                                              ; preds = %bb4
  br label %bb10, !dbg !3583
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4eb715901cb89672E"() unnamed_addr #0 !dbg !3599 {
start:
  %output.dbg.spill = alloca {}, align 1
  %0 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata {}* %output.dbg.spill, metadata !3604, metadata !DIExpression()), !dbg !3605
  %1 = bitcast i8* %0 to %"core::ops::ControlFlow<()>::Continue"*, !dbg !3606
  %2 = getelementptr inbounds %"core::ops::ControlFlow<()>::Continue", %"core::ops::ControlFlow<()>::Continue"* %1, i32 0, i32 1, !dbg !3606
  store i8 0, i8* %0, align 1, !dbg !3606
  %3 = load i8, i8* %0, align 1, !dbg !3607, !range !238
  %4 = trunc i8 %3 to i1, !dbg !3607
  ret i1 %4, !dbg !3607
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nounwind
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ed8bd68cd15059fE"(i1 zeroext %0) unnamed_addr #0 !dbg !3608 {
start:
  %b.dbg.spill = alloca {}, align 1
  %c.dbg.spill = alloca {}, align 1
  %_6 = alloca %"core::ops::ControlFlow<(), core::convert::Infallible>::Break", align 1
  %1 = alloca i8, align 1
  %self = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, i8* %self, align 1
  call void @llvm.dbg.declare(metadata i8* %self, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.declare(metadata {}* %c.dbg.spill, metadata !3613, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.declare(metadata {}* %b.dbg.spill, metadata !3615, metadata !DIExpression()), !dbg !3619
  %3 = load i8, i8* %self, align 1, !dbg !3620, !range !238
  %4 = trunc i8 %3 to i1, !dbg !3620
  %_2 = zext i1 %4 to i64, !dbg !3620
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3621

bb2:                                              ; preds = %start
  unreachable, !dbg !3620

bb3:                                              ; preds = %start
  %5 = bitcast i8* %1 to %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Continue"*, !dbg !3622
  %6 = getelementptr inbounds %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Continue", %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Continue"* %5, i32 0, i32 1, !dbg !3622
  store i8 0, i8* %1, align 1, !dbg !3622
  br label %bb4, !dbg !3623

bb1:                                              ; preds = %start
  %7 = bitcast %"core::ops::ControlFlow<(), core::convert::Infallible>::Break"* %_6 to {}*, !dbg !3624
  %8 = bitcast i8* %1 to %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Break"*, !dbg !3625
  %9 = getelementptr inbounds %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Break", %"core::ops::ControlFlow<core::ops::ControlFlow<(), core::convert::Infallible>>::Break"* %8, i32 0, i32 1, !dbg !3625
  store i8 1, i8* %1, align 1, !dbg !3625
  br label %bb4, !dbg !3626

bb4:                                              ; preds = %bb3, %bb1
  %10 = load i8, i8* %1, align 1, !dbg !3627, !range !238
  %11 = trunc i8 %10 to i1, !dbg !3627
  ret i1 %11, !dbg !3627
}

; num_traits::float::integer_decode_f32
; Function Attrs: nounwind
define i128 @_ZN10num_traits5float18integer_decode_f3217h7311a72543b9d616E(float %f) unnamed_addr #1 !dbg !3628 {
start:
  %bits.dbg.spill = alloca i32, align 4
  %0 = alloca i32, align 4
  %f.dbg.spill = alloca float, align 4
  %mantissa = alloca i32, align 4
  %exponent = alloca i16, align 2
  %sign = alloca i8, align 1
  %1 = alloca { i64, i16, i8, [5 x i8] }, align 8
  store float %f, float* %f.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %f.dbg.spill, metadata !3640, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !3643, metadata !DIExpression()), !dbg !3650
  call void @llvm.dbg.declare(metadata i16* %exponent, metadata !3645, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.declare(metadata i32* %mantissa, metadata !3647, metadata !DIExpression()), !dbg !3652
  %2 = bitcast float %f to i32, !dbg !3653
  store i32 %2, i32* %0, align 4, !dbg !3653
  %bits = load i32, i32* %0, align 4, !dbg !3653
  store i32 %bits, i32* %bits.dbg.spill, align 4, !dbg !3653
  call void @llvm.dbg.declare(metadata i32* %bits.dbg.spill, metadata !3641, metadata !DIExpression()), !dbg !3654
  br label %bb1, !dbg !3653

bb1:                                              ; preds = %start
  %_7.0 = lshr i32 %bits, 31, !dbg !3655
  br label %bb2, !dbg !3655

bb2:                                              ; preds = %bb1
  %3 = icmp eq i32 %_7.0, 0, !dbg !3655
  br i1 %3, label %bb3, label %bb4, !dbg !3655

bb3:                                              ; preds = %bb2
  store i8 1, i8* %sign, align 1, !dbg !3656
  br label %bb5, !dbg !3657

bb4:                                              ; preds = %bb2
  store i8 -1, i8* %sign, align 1, !dbg !3658
  br label %bb5, !dbg !3657

bb5:                                              ; preds = %bb3, %bb4
  %_12.0 = lshr i32 %bits, 23, !dbg !3659
  br label %bb6, !dbg !3659

bb6:                                              ; preds = %bb5
  %_9 = and i32 %_12.0, 255, !dbg !3660
  %4 = trunc i32 %_9 to i16, !dbg !3660
  store i16 %4, i16* %exponent, align 2, !dbg !3660
  %_14 = load i16, i16* %exponent, align 2, !dbg !3661
  %5 = icmp eq i16 %_14, 0, !dbg !3661
  br i1 %5, label %bb7, label %bb9, !dbg !3661

bb7:                                              ; preds = %bb6
  %_15 = and i32 %bits, 8388607, !dbg !3662
  %_17.0 = shl i32 %_15, 1, !dbg !3662
  br label %bb8, !dbg !3662

bb9:                                              ; preds = %bb6
  %_18 = and i32 %bits, 8388607, !dbg !3663
  %6 = or i32 %_18, 8388608, !dbg !3663
  store i32 %6, i32* %mantissa, align 4, !dbg !3663
  br label %bb10, !dbg !3664

bb10:                                             ; preds = %bb8, %bb9
  %7 = load i16, i16* %exponent, align 2, !dbg !3665
  %8 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %7, i16 150), !dbg !3665
  %_21.0 = extractvalue { i16, i1 } %8, 0, !dbg !3665
  %_21.1 = extractvalue { i16, i1 } %8, 1, !dbg !3665
  %9 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !3665
  br i1 %9, label %panic, label %bb11, !dbg !3665

bb8:                                              ; preds = %bb7
  store i32 %_17.0, i32* %mantissa, align 4, !dbg !3662
  br label %bb10, !dbg !3664

bb11:                                             ; preds = %bb10
  store i16 %_21.0, i16* %exponent, align 2, !dbg !3665
  %_23 = load i32, i32* %mantissa, align 4, !dbg !3666
  %_22 = zext i32 %_23 to i64, !dbg !3666
  %_24 = load i16, i16* %exponent, align 2, !dbg !3667
  %_25 = load i8, i8* %sign, align 1, !dbg !3668
  %10 = bitcast { i64, i16, i8, [5 x i8] }* %1 to i64*, !dbg !3669
  store i64 %_22, i64* %10, align 8, !dbg !3669
  %11 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %1, i32 0, i32 1, !dbg !3669
  store i16 %_24, i16* %11, align 8, !dbg !3669
  %12 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %1, i32 0, i32 2, !dbg !3669
  store i8 %_25, i8* %12, align 2, !dbg !3669
  %13 = bitcast { i64, i16, i8, [5 x i8] }* %1 to i128*, !dbg !3670
  %14 = load i128, i128* %13, align 8, !dbg !3670
  ret i128 %14, !dbg !3670

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2955 to %"core::panic::Location"*)), !dbg !3665
  unreachable, !dbg !3665
}

; num_traits::float::integer_decode_f64
; Function Attrs: nounwind
define i128 @_ZN10num_traits5float18integer_decode_f6417he274636522a29100E(double %f) unnamed_addr #1 !dbg !3671 {
start:
  %bits.dbg.spill = alloca i64, align 8
  %0 = alloca i64, align 8
  %f.dbg.spill = alloca double, align 8
  %mantissa = alloca i64, align 8
  %exponent = alloca i16, align 2
  %sign = alloca i8, align 1
  %1 = alloca { i64, i16, i8, [5 x i8] }, align 8
  store double %f, double* %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %f.dbg.spill, metadata !3675, metadata !DIExpression()), !dbg !3684
  call void @llvm.dbg.declare(metadata i8* %sign, metadata !3678, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.declare(metadata i16* %exponent, metadata !3680, metadata !DIExpression()), !dbg !3686
  call void @llvm.dbg.declare(metadata i64* %mantissa, metadata !3682, metadata !DIExpression()), !dbg !3687
  %2 = bitcast double %f to i64, !dbg !3688
  store i64 %2, i64* %0, align 8, !dbg !3688
  %bits = load i64, i64* %0, align 8, !dbg !3688
  store i64 %bits, i64* %bits.dbg.spill, align 8, !dbg !3688
  call void @llvm.dbg.declare(metadata i64* %bits.dbg.spill, metadata !3676, metadata !DIExpression()), !dbg !3689
  br label %bb1, !dbg !3688

bb1:                                              ; preds = %start
  %_7.0 = lshr i64 %bits, 63, !dbg !3690
  br label %bb2, !dbg !3690

bb2:                                              ; preds = %bb1
  %3 = icmp eq i64 %_7.0, 0, !dbg !3690
  br i1 %3, label %bb3, label %bb4, !dbg !3690

bb3:                                              ; preds = %bb2
  store i8 1, i8* %sign, align 1, !dbg !3691
  br label %bb5, !dbg !3692

bb4:                                              ; preds = %bb2
  store i8 -1, i8* %sign, align 1, !dbg !3693
  br label %bb5, !dbg !3692

bb5:                                              ; preds = %bb3, %bb4
  %_12.0 = lshr i64 %bits, 52, !dbg !3694
  br label %bb6, !dbg !3694

bb6:                                              ; preds = %bb5
  %_9 = and i64 %_12.0, 2047, !dbg !3695
  %4 = trunc i64 %_9 to i16, !dbg !3695
  store i16 %4, i16* %exponent, align 2, !dbg !3695
  %_14 = load i16, i16* %exponent, align 2, !dbg !3696
  %5 = icmp eq i16 %_14, 0, !dbg !3696
  br i1 %5, label %bb7, label %bb9, !dbg !3696

bb7:                                              ; preds = %bb6
  %_15 = and i64 %bits, 4503599627370495, !dbg !3697
  %_17.0 = shl i64 %_15, 1, !dbg !3697
  br label %bb8, !dbg !3697

bb9:                                              ; preds = %bb6
  %_18 = and i64 %bits, 4503599627370495, !dbg !3698
  %6 = or i64 %_18, 4503599627370496, !dbg !3698
  store i64 %6, i64* %mantissa, align 8, !dbg !3698
  br label %bb10, !dbg !3699

bb10:                                             ; preds = %bb8, %bb9
  %7 = load i16, i16* %exponent, align 2, !dbg !3700
  %8 = call { i16, i1 } @llvm.ssub.with.overflow.i16(i16 %7, i16 1075), !dbg !3700
  %_21.0 = extractvalue { i16, i1 } %8, 0, !dbg !3700
  %_21.1 = extractvalue { i16, i1 } %8, 1, !dbg !3700
  %9 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false), !dbg !3700
  br i1 %9, label %panic, label %bb11, !dbg !3700

bb8:                                              ; preds = %bb7
  store i64 %_17.0, i64* %mantissa, align 8, !dbg !3697
  br label %bb10, !dbg !3699

bb11:                                             ; preds = %bb10
  store i16 %_21.0, i16* %exponent, align 2, !dbg !3700
  %_22 = load i64, i64* %mantissa, align 8, !dbg !3701
  %_23 = load i16, i16* %exponent, align 2, !dbg !3702
  %_24 = load i8, i8* %sign, align 1, !dbg !3703
  %10 = bitcast { i64, i16, i8, [5 x i8] }* %1 to i64*, !dbg !3704
  store i64 %_22, i64* %10, align 8, !dbg !3704
  %11 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %1, i32 0, i32 1, !dbg !3704
  store i16 %_23, i16* %11, align 8, !dbg !3704
  %12 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, { i64, i16, i8, [5 x i8] }* %1, i32 0, i32 2, !dbg !3704
  store i8 %_24, i8* %12, align 2, !dbg !3704
  %13 = bitcast { i64, i16, i8, [5 x i8] }* %1 to i128*, !dbg !3705
  %14 = load i128, i128* %13, align 8, !dbg !3705
  ret i128 %14, !dbg !3705

panic:                                            ; preds = %bb10
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([33 x i8]* @str.1 to [0 x i8]*), i64 33, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2957 to %"core::panic::Location"*)), !dbg !3700
  unreachable, !dbg !3700
}

; <num_traits::ParseFloatError as core::fmt::Display>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN66_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Display$GT$3fmt17h51372839e59ecd79E"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3706 {
start:
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %description = alloca { [0 x i8]*, i64 }, align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3712, metadata !DIExpression()), !dbg !3716
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3713, metadata !DIExpression()), !dbg !3717
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %description, metadata !3714, metadata !DIExpression()), !dbg !3718
  %0 = load i8, i8* %self, align 1, !dbg !3719, !range !238
  %1 = trunc i8 %0 to i1, !dbg !3719
  %_4 = zext i1 %1 to i64, !dbg !3719
  switch i64 %_4, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3720

bb2:                                              ; preds = %start
  unreachable, !dbg !3719

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !3721
  store [0 x i8]* bitcast (<{ [36 x i8] }>* @alloc2959 to [0 x i8]*), [0 x i8]** %2, align 8, !dbg !3721
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !3721
  store i64 36, i64* %3, align 8, !dbg !3721
  br label %bb4, !dbg !3721

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !3722
  store [0 x i8]* bitcast (<{ [21 x i8] }>* @alloc2958 to [0 x i8]*), [0 x i8]** %4, align 8, !dbg !3722
  %5 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !3722
  store i64 21, i64* %5, align 8, !dbg !3722
  br label %bb4, !dbg !3723

bb4:                                              ; preds = %bb3, %bb1
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 0, !dbg !3724
  %_6.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !3724, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %description, i32 0, i32 1, !dbg !3724
  %_6.1 = load i64, i64* %7, align 8, !dbg !3724
; call <str as core::fmt::Display>::fmt
  %8 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h22e9b1a86f36eac1E"([0 x i8]* nonnull align 1 %_6.0, i64 %_6.1, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f), !dbg !3724
  br label %bb5, !dbg !3724

bb5:                                              ; preds = %bb4
  ret i1 %8, !dbg !3725
}

; num_traits::str_to_ascii_lower_eq_str
; Function Attrs: nounwind
define internal zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %a.0, i64 %a.1, [0 x i8]* nonnull align 1 %b.0, i64 %b.1) unnamed_addr #1 !dbg !3726 {
start:
  %b.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %a.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_10 = alloca %"core::iter::Zip<core::str::Bytes, core::str::Bytes>", align 8
  %0 = alloca i8, align 1
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 0
  store [0 x i8]* %a.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %a.dbg.spill, i32 0, i32 1
  store i64 %a.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %a.dbg.spill, metadata !3728, metadata !DIExpression()), !dbg !3730
  %3 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %b.dbg.spill, i32 0, i32 0
  store [0 x i8]* %b.0, [0 x i8]** %3, align 8
  %4 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %b.dbg.spill, i32 0, i32 1
  store i64 %b.1, i64* %4, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %b.dbg.spill, metadata !3729, metadata !DIExpression()), !dbg !3731
; call core::str::<impl str>::len
  %_4 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %a.0, i64 %a.1), !dbg !3732
  br label %bb4, !dbg !3732

bb4:                                              ; preds = %start
; call core::str::<impl str>::len
  %_6 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E"([0 x i8]* nonnull align 1 %b.0, i64 %b.1), !dbg !3733
  br label %bb5, !dbg !3733

bb5:                                              ; preds = %bb4
  %_3 = icmp eq i64 %_4, %_6, !dbg !3732
  br i1 %_3, label %bb2, label %bb1, !dbg !3732

bb1:                                              ; preds = %bb5
  store i8 0, i8* %0, align 1, !dbg !3732
  br label %bb3, !dbg !3732

bb2:                                              ; preds = %bb5
; call core::str::<impl str>::bytes
  %5 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hbe664ab4ae5d6b2fE"([0 x i8]* nonnull align 1 %a.0, i64 %a.1), !dbg !3734
  %_11.0 = extractvalue { i8*, i8* } %5, 0, !dbg !3734
  %_11.1 = extractvalue { i8*, i8* } %5, 1, !dbg !3734
  br label %bb6, !dbg !3734

bb6:                                              ; preds = %bb2
; call core::str::<impl str>::bytes
  %6 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hbe664ab4ae5d6b2fE"([0 x i8]* nonnull align 1 %b.0, i64 %b.1), !dbg !3735
  %_13.0 = extractvalue { i8*, i8* } %6, 0, !dbg !3735
  %_13.1 = extractvalue { i8*, i8* } %6, 1, !dbg !3735
  br label %bb7, !dbg !3735

bb7:                                              ; preds = %bb6
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17h31e15a62e7100431E(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* noalias nocapture sret(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>") dereferenceable(56) %_10, i8* nonnull %_11.0, i8* %_11.1, i8* nonnull %_13.0, i8* %_13.1), !dbg !3734
  br label %bb8, !dbg !3734

bb8:                                              ; preds = %bb7
; call core::iter::traits::iterator::Iterator::all
  %_8 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator3all17h759b38be3e8bef1aE(%"core::iter::Zip<core::str::Bytes, core::str::Bytes>"* align 8 dereferenceable(56) %_10), !dbg !3734
  br label %bb9, !dbg !3734

bb9:                                              ; preds = %bb8
  %7 = zext i1 %_8 to i8, !dbg !3732
  store i8 %7, i8* %0, align 1, !dbg !3732
  br label %bb3, !dbg !3732

bb3:                                              ; preds = %bb1, %bb9
  %8 = load i8, i8* %0, align 1, !dbg !3736, !range !238
  %9 = trunc i8 %8 to i1, !dbg !3736
  ret i1 %9, !dbg !3736
}

; num_traits::str_to_ascii_lower_eq_str::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17haa1e1f0636e531b8E"(%"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"* nonnull align 1 %_1, i8 %_2.0, i8 %_2.1) unnamed_addr #0 !dbg !3737 {
start:
  %a_to_ascii_lower.dbg.spill = alloca i8, align 1
  %b.dbg.spill = alloca i8, align 1
  %a.dbg.spill = alloca i8, align 1
  %_2.dbg.spill = alloca { i8, i8 }, align 1
  %_1.dbg.spill = alloca %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"*, align 8
  %_9 = alloca i8, align 1
  store %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"* %_1, %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"** %_1.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"[closure@/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs:214:41: 217:10]"** %_1.dbg.spill, metadata !3747, metadata !DIExpression()), !dbg !3749
  %0 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2.dbg.spill, i32 0, i32 0
  store i8 %_2.0, i8* %0, align 1
  %1 = getelementptr inbounds { i8, i8 }, { i8, i8 }* %_2.dbg.spill, i32 0, i32 1
  store i8 %_2.1, i8* %1, align 1
  call void @llvm.dbg.declare(metadata { i8, i8 }* %_2.dbg.spill, metadata !3748, metadata !DIExpression()), !dbg !3750
  store i8 %_2.0, i8* %a.dbg.spill, align 1, !dbg !3751
  call void @llvm.dbg.declare(metadata i8* %a.dbg.spill, metadata !3742, metadata !DIExpression()), !dbg !3752
  store i8 %_2.1, i8* %b.dbg.spill, align 1, !dbg !3753
  call void @llvm.dbg.declare(metadata i8* %b.dbg.spill, metadata !3744, metadata !DIExpression()), !dbg !3754
  %_10 = icmp ule i8 65, %_2.0, !dbg !3755
  br i1 %_10, label %bb2, label %bb1, !dbg !3756

bb1:                                              ; preds = %start
  store i8 0, i8* %_9, align 1, !dbg !3756
  br label %bb3, !dbg !3756

bb2:                                              ; preds = %start
  %_12 = icmp ule i8 %_2.0, 90, !dbg !3757
  %2 = zext i1 %_12 to i8, !dbg !3756
  store i8 %2, i8* %_9, align 1, !dbg !3756
  br label %bb3, !dbg !3756

bb3:                                              ; preds = %bb1, %bb2
  %3 = load i8, i8* %_9, align 1, !dbg !3758, !range !238
  %4 = trunc i8 %3 to i1, !dbg !3758
  %5 = icmp ule i1 %4, true, !dbg !3758
  call void @llvm.assume(i1 %5), !dbg !3758
  %_8 = zext i1 %4 to i8, !dbg !3758
  %_14.0 = shl i8 %_8, 5, !dbg !3759
  br label %bb4, !dbg !3759

bb4:                                              ; preds = %bb3
  %a_to_ascii_lower = or i8 %_2.0, %_14.0, !dbg !3760
  store i8 %a_to_ascii_lower, i8* %a_to_ascii_lower.dbg.spill, align 1, !dbg !3760
  call void @llvm.dbg.declare(metadata i8* %a_to_ascii_lower.dbg.spill, metadata !3745, metadata !DIExpression()), !dbg !3761
  %6 = icmp eq i8 %a_to_ascii_lower, %_2.1, !dbg !3762
  ret i1 %6, !dbg !3763
}

; <f32 as num_traits::float::Float>::powi
; Function Attrs: inlinehint nounwind
define internal float @"_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17ha04dd418e89c7c5fE"(float %self, i32 %n) unnamed_addr #0 !dbg !3764 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca float, align 4
  store float %self, float* %self.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %self.dbg.spill, metadata !3768, metadata !DIExpression()), !dbg !3770
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3769, metadata !DIExpression()), !dbg !3771
; call std::f32::<impl f32>::powi
  %0 = call float @"_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17h346b69919f8c3eb6E"(float %self, i32 %n), !dbg !3772
  br label %bb1, !dbg !3772

bb1:                                              ; preds = %start
  ret float %0, !dbg !3773
}

; <f64 as num_traits::float::Float>::powi
; Function Attrs: inlinehint nounwind
define internal double @"_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17h0817970147c1b9b7E"(double %self, i32 %n) unnamed_addr #0 !dbg !3774 {
start:
  %n.dbg.spill = alloca i32, align 4
  %self.dbg.spill = alloca double, align 8
  store double %self, double* %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %self.dbg.spill, metadata !3777, metadata !DIExpression()), !dbg !3779
  store i32 %n, i32* %n.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %n.dbg.spill, metadata !3778, metadata !DIExpression()), !dbg !3780
; call std::f64::<impl f64>::powi
  %0 = call double @"_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17hc5b39c35377ec9d5E"(double %self, i32 %n), !dbg !3781
  br label %bb1, !dbg !3781

bb1:                                              ; preds = %start
  ret double %0, !dbg !3782
}

; <num_traits::FloatErrorKind as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hb7677d240ac5cfebE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3783 {
start:
  %debug_trait_builder.dbg.spill1 = alloca %"core::fmt::DebugTuple"*, align 8
  %debug_trait_builder.dbg.spill = alloca %"core::fmt::DebugTuple"*, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_13 = alloca %"core::fmt::DebugTuple", align 8
  %_7 = alloca %"core::fmt::DebugTuple", align 8
  %_3 = alloca i8*, align 8
  %0 = alloca i8, align 1
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3788, metadata !DIExpression()), !dbg !3802
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3789, metadata !DIExpression()), !dbg !3802
  store i8* %self, i8** %_3, align 8, !dbg !3802
  %1 = load i8*, i8** %_3, align 8, !dbg !3802, !nonnull !4
  %2 = load i8, i8* %1, align 1, !dbg !3802, !range !238
  %3 = trunc i8 %2 to i1, !dbg !3802
  %_5 = zext i1 %3 to i64, !dbg !3802
  switch i64 %_5, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb1
  ], !dbg !3802

bb2:                                              ; preds = %start
  unreachable, !dbg !3802

bb3:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"core::fmt::DebugTuple"* noalias nocapture sret(%"core::fmt::DebugTuple") dereferenceable(24) %_7, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [5 x i8] }>* @alloc2961 to [0 x i8]*), i64 5), !dbg !3802
  br label %bb4, !dbg !3802

bb1:                                              ; preds = %start
; call core::fmt::Formatter::debug_tuple
  call void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"core::fmt::DebugTuple"* noalias nocapture sret(%"core::fmt::DebugTuple") dereferenceable(24) %_13, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [7 x i8] }>* @alloc2960 to [0 x i8]*), i64 7), !dbg !3802
  br label %bb5, !dbg !3802

bb5:                                              ; preds = %bb1
  store %"core::fmt::DebugTuple"* %_13, %"core::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, align 8, !dbg !3802
  call void @llvm.dbg.declare(metadata %"core::fmt::DebugTuple"** %debug_trait_builder.dbg.spill, metadata !3800, metadata !DIExpression()), !dbg !3803
; call core::fmt::builders::DebugTuple::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"core::fmt::DebugTuple"* align 8 dereferenceable(24) %_13), !dbg !3803
  %5 = zext i1 %4 to i8, !dbg !3803
  store i8 %5, i8* %0, align 1, !dbg !3803
  br label %bb6, !dbg !3803

bb6:                                              ; preds = %bb4, %bb5
  %6 = load i8, i8* %0, align 1, !dbg !3804, !range !238
  %7 = trunc i8 %6 to i1, !dbg !3804
  ret i1 %7, !dbg !3804

bb4:                                              ; preds = %bb3
  store %"core::fmt::DebugTuple"* %_7, %"core::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, align 8, !dbg !3802
  call void @llvm.dbg.declare(metadata %"core::fmt::DebugTuple"** %debug_trait_builder.dbg.spill1, metadata !3790, metadata !DIExpression()), !dbg !3805
; call core::fmt::builders::DebugTuple::finish
  %8 = call zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"core::fmt::DebugTuple"* align 8 dereferenceable(24) %_7), !dbg !3805
  %9 = zext i1 %8 to i8, !dbg !3805
  store i8 %9, i8* %0, align 1, !dbg !3805
  br label %bb6, !dbg !3805
}

; <num_traits::ParseFloatError as core::fmt::Debug>::fmt
; Function Attrs: nounwind
define zeroext i1 @"_ZN64_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6bb2c7eb69980bdE"(i8* align 1 dereferenceable(1) %self, %"core::fmt::Formatter"* align 8 dereferenceable(64) %f) unnamed_addr #1 !dbg !3806 {
start:
  %debug_trait_builder.dbg.spill = alloca %"core::fmt::DebugStruct"*, align 8
  %0 = alloca i128, align 8
  %__self_0_0.dbg.spill = alloca i8*, align 8
  %f.dbg.spill = alloca %"core::fmt::Formatter"*, align 8
  %self.dbg.spill = alloca i8*, align 8
  %_16 = alloca i8*, align 8
  %_5 = alloca %"core::fmt::DebugStruct", align 8
  store i8* %self, i8** %self.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i8** %self.dbg.spill, metadata !3809, metadata !DIExpression()), !dbg !3821
  store %"core::fmt::Formatter"* %f, %"core::fmt::Formatter"** %f.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata %"core::fmt::Formatter"** %f.dbg.spill, metadata !3810, metadata !DIExpression()), !dbg !3821
  store i8* %self, i8** %__self_0_0.dbg.spill, align 8, !dbg !3822
  call void @llvm.dbg.declare(metadata i8** %__self_0_0.dbg.spill, metadata !3811, metadata !DIExpression()), !dbg !3823
; call core::fmt::Formatter::debug_struct
  %1 = call i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"core::fmt::Formatter"* align 8 dereferenceable(64) %f, [0 x i8]* nonnull align 1 bitcast (<{ [15 x i8] }>* @alloc2962 to [0 x i8]*), i64 15), !dbg !3824
  store i128 %1, i128* %0, align 8, !dbg !3824
  %2 = bitcast %"core::fmt::DebugStruct"* %_5 to i8*, !dbg !3824
  %3 = bitcast i128* %0 to i8*, !dbg !3824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 16, i1 false), !dbg !3824
  br label %bb1, !dbg !3824

bb1:                                              ; preds = %start
  store %"core::fmt::DebugStruct"* %_5, %"core::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, align 8, !dbg !3824
  call void @llvm.dbg.declare(metadata %"core::fmt::DebugStruct"** %debug_trait_builder.dbg.spill, metadata !3813, metadata !DIExpression()), !dbg !3825
  store i8* %self, i8** %_16, align 8, !dbg !3826
  %_13.0 = bitcast i8** %_16 to {}*, !dbg !3826
; call core::fmt::builders::DebugStruct::field
  %_9 = call align 8 dereferenceable(16) %"core::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"core::fmt::DebugStruct"* align 8 dereferenceable(16) %_5, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc2963 to [0 x i8]*), i64 4, {}* nonnull align 1 %_13.0, [3 x i64]* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8], i8*, [0 x i8] }>* @vtable.2 to [3 x i64]*)), !dbg !3827
  br label %bb2, !dbg !3827

bb2:                                              ; preds = %bb1
; call core::fmt::builders::DebugStruct::finish
  %4 = call zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"core::fmt::DebugStruct"* align 8 dereferenceable(16) %_5), !dbg !3827
  br label %bb3, !dbg !3827

bb3:                                              ; preds = %bb2
  ret i1 %4, !dbg !3828
}

; <f32 as num_traits::Num>::from_str_radix
; Function Attrs: nounwind
define i64 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix17h213ec8c43e9bf63fE"([0 x i8]* nonnull align 1 %0, i64 %1, i32 %radix) unnamed_addr #1 !dbg !3829 {
start:
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %exp.dbg.spill27 = alloca i64, align 8
  %exp.dbg.spill = alloca i64, align 8
  %is_positive.dbg.spill24 = alloca i8, align 1
  %4 = alloca i128, align 8
  %src.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %5 = alloca i128, align 8
  %src.dbg.spill19 = alloca { [0 x i8]*, i64 }, align 8
  %6 = alloca i128, align 8
  %src.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %offset.dbg.spill = alloca i64, align 8
  %c.dbg.spill15 = alloca i32, align 4
  %digit.dbg.spill13 = alloca i32, align 4
  %c.dbg.spill11 = alloca i32, align 4
  %i.dbg.spill10 = alloca i64, align 8
  %__next.dbg.spill9 = alloca { i64, i32 }, align 8
  %val.dbg.spill8 = alloca { i64, i32 }, align 8
  %digit.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %__next.dbg.spill = alloca { i64, i32 }, align 8
  %val.dbg.spill = alloca { i64, i32 }, align 8
  %src.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %is_positive.dbg.spill = alloca i8, align 1
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %radix.dbg.spill = alloca i32, align 4
  %_208 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_206 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, align 8
  %_204 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_202 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_199 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_195 = alloca %"core::option::Option<(char, &str)>", align 8
  %_194 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, align 8
  %exp2 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_190 = alloca i64, align 8
  %base = alloca float, align 4
  %exp = alloca float, align 4
  %_173 = alloca { i32, i64 }, align 8
  %_172 = alloca { i32, i64 }, align 8
  %_165 = alloca i8, align 1
  %_160 = alloca i8, align 1
  %_148 = alloca float, align 4
  %_140 = alloca { i32, i32 }, align 4
  %_132 = alloca { i64, i32 }, align 8
  %iter1 = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  %power = alloca float, align 4
  %_119 = alloca { i32, i64 }, align 8
  %_118 = alloca { i32, i64 }, align 8
  %_105 = alloca i8, align 1
  %_94 = alloca i8, align 1
  %_88 = alloca i8, align 1
  %_83 = alloca i8, align 1
  %_64 = alloca { i32, i32 }, align 4
  %_56 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  %exp_info = alloca { i32, i64 }, align 8
  %cs = alloca %"core::iter::Enumerate<core::str::Chars>", align 8
  %prev_sig = alloca float, align 4
  %sig = alloca float, align 4
  %_37 = alloca %"core::option::Option<(char, &str)>", align 8
  %_36 = alloca { i8, [7 x i8], { [0 x i8]*, i64 } }, align 8
  %_17 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_6 = alloca i64*, align 8
  %_4 = alloca %"core::result::Result<f32, core::num::ParseFloatError>", align 4
  %7 = alloca %"core::result::Result<f32, ParseFloatError>", align 4
  %src = alloca { [0 x i8]*, i64 }, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %9, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src, metadata !3833, metadata !DIExpression()), !dbg !3892
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !3834, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.declare(metadata float* %sig, metadata !3840, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata float* %prev_sig, metadata !3842, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"* %cs, metadata !3844, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata { i32, i64 }* %exp_info, metadata !3846, metadata !DIExpression()), !dbg !3897
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %iter, metadata !3848, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.declare(metadata float* %power, metadata !3859, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %iter1, metadata !3861, metadata !DIExpression()), !dbg !3900
  call void @llvm.dbg.declare(metadata float* %exp, metadata !3872, metadata !DIExpression()), !dbg !3901
  call void @llvm.dbg.declare(metadata float* %base, metadata !3877, metadata !DIExpression()), !dbg !3902
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, core::num::ParseIntError>"* %exp2, metadata !3883, metadata !DIExpression()), !dbg !3903
  %10 = icmp eq i32 %radix, 10, !dbg !3904
  br i1 %10, label %bb1, label %bb3, !dbg !3904

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3905
  %_5.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !3905, !nonnull !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3905
  %_5.1 = load i64, i64* %12, align 8, !dbg !3905
; call core::str::<impl str>::parse
  %13 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he99c810f82e6b0d7E"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !3905
  store i64 %13, i64* %3, align 8, !dbg !3905
  %14 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %_4 to i8*, !dbg !3905
  %15 = bitcast i64* %3 to i8*, !dbg !3905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %15, i64 8, i1 false), !dbg !3905
  br label %bb2, !dbg !3905

bb3:                                              ; preds = %start
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3906
  %_10.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !3906, !nonnull !4
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3906
  %_10.1 = load i64, i64* %17, align 8, !dbg !3906
; call num_traits::str_to_ascii_lower_eq_str
  %_9 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_10.0, i64 %_10.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2976 to [0 x i8]*), i64 3), !dbg !3907
  br label %bb7, !dbg !3907

bb7:                                              ; preds = %bb3
  br i1 %_9, label %bb4, label %bb5, !dbg !3907

bb5:                                              ; preds = %bb7
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3908
  %_14.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !3908, !nonnull !4
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3908
  %_14.1 = load i64, i64* %19, align 8, !dbg !3908
; call num_traits::str_to_ascii_lower_eq_str
  %_13 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_14.0, i64 %_14.1, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc2977 to [0 x i8]*), i64 8), !dbg !3909
  br label %bb8, !dbg !3909

bb4:                                              ; preds = %bb7
  store i8 1, i8* %_8, align 1, !dbg !3907
  br label %bb6, !dbg !3907

bb6:                                              ; preds = %bb8, %bb4
  %20 = load i8, i8* %_8, align 1, !dbg !3907, !range !238
  %21 = trunc i8 %20 to i1, !dbg !3907
  br i1 %21, label %bb9, label %bb10, !dbg !3907

bb8:                                              ; preds = %bb5
  %22 = zext i1 %_13 to i8, !dbg !3907
  store i8 %22, i8* %_8, align 1, !dbg !3907
  br label %bb6, !dbg !3907

bb10:                                             ; preds = %bb6
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3910
  %_19.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !dbg !3910, !nonnull !4
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3910
  %_19.1 = load i64, i64* %24, align 8, !dbg !3910
; call num_traits::str_to_ascii_lower_eq_str
  %_18 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_19.0, i64 %_19.1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc2978 to [0 x i8]*), i64 4), !dbg !3911
  br label %bb14, !dbg !3911

bb9:                                              ; preds = %bb6
  %25 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3912
  %26 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %25, i32 0, i32 1, !dbg !3912
  store float 0x7FF0000000000000, float* %26, align 4, !dbg !3912
  %27 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3912
  store i8 0, i8* %27, align 4, !dbg !3912
  br label %bb138, !dbg !3913

bb138:                                            ; preds = %bb2, %bb30, %bb137, %bb119, %bb133, %bb109, %bb102, %bb100, %bb95, %bb73, %bb71, %bb66, %bb61, %bb56, %bb31, %bb22, %bb19, %bb16, %bb9
  %28 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i64*, !dbg !3914
  %29 = load i64, i64* %28, align 4, !dbg !3914
  ret i64 %29, !dbg !3914

bb14:                                             ; preds = %bb10
  br i1 %_18, label %bb11, label %bb12, !dbg !3911

bb12:                                             ; preds = %bb14
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3915
  %_23.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !3915, !nonnull !4
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3915
  %_23.1 = load i64, i64* %31, align 8, !dbg !3915
; call num_traits::str_to_ascii_lower_eq_str
  %_22 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_23.0, i64 %_23.1, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc2979 to [0 x i8]*), i64 9), !dbg !3916
  br label %bb15, !dbg !3916

bb11:                                             ; preds = %bb14
  store i8 1, i8* %_17, align 1, !dbg !3911
  br label %bb13, !dbg !3911

bb13:                                             ; preds = %bb15, %bb11
  %32 = load i8, i8* %_17, align 1, !dbg !3911, !range !238
  %33 = trunc i8 %32 to i1, !dbg !3911
  br i1 %33, label %bb16, label %bb17, !dbg !3911

bb15:                                             ; preds = %bb12
  %34 = zext i1 %_22 to i8, !dbg !3911
  store i8 %34, i8* %_17, align 1, !dbg !3911
  br label %bb13, !dbg !3911

bb17:                                             ; preds = %bb13
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3917
  %_27.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !dbg !3917, !nonnull !4
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3917
  %_27.1 = load i64, i64* %36, align 8, !dbg !3917
; call num_traits::str_to_ascii_lower_eq_str
  %_26 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_27.0, i64 %_27.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2980 to [0 x i8]*), i64 3), !dbg !3918
  br label %bb18, !dbg !3918

bb16:                                             ; preds = %bb13
  %37 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3919
  %38 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %37, i32 0, i32 1, !dbg !3919
  store float 0xFFF0000000000000, float* %38, align 4, !dbg !3919
  %39 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3919
  store i8 0, i8* %39, align 4, !dbg !3919
  br label %bb138, !dbg !3920

bb18:                                             ; preds = %bb17
  br i1 %_26, label %bb19, label %bb20, !dbg !3918

bb20:                                             ; preds = %bb18
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3921
  %_31.0 = load [0 x i8]*, [0 x i8]** %40, align 8, !dbg !3921, !nonnull !4
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3921
  %_31.1 = load i64, i64* %41, align 8, !dbg !3921
; call num_traits::str_to_ascii_lower_eq_str
  %_30 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_31.0, i64 %_31.1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc2981 to [0 x i8]*), i64 4), !dbg !3922
  br label %bb21, !dbg !3922

bb19:                                             ; preds = %bb18
  %42 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3923
  %43 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %42, i32 0, i32 1, !dbg !3923
  store float 0x7FF8000000000000, float* %43, align 4, !dbg !3923
  %44 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3923
  store i8 0, i8* %44, align 4, !dbg !3923
  br label %bb138, !dbg !3924

bb21:                                             ; preds = %bb20
  br i1 %_30, label %bb22, label %bb23, !dbg !3922

bb23:                                             ; preds = %bb21
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3925
  %_38.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !dbg !3925, !nonnull !4
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3925
  %_38.1 = load i64, i64* %46, align 8, !dbg !3925
; call <f32 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h17943db7526cdedeE"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %_37, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1), !dbg !3926
  br label %bb24, !dbg !3926

bb22:                                             ; preds = %bb21
  %47 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3927
  %48 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %47, i32 0, i32 1, !dbg !3927
  store float 0xFFF8000000000000, float* %48, align 4, !dbg !3927
  %49 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3927
  store i8 0, i8* %49, align 4, !dbg !3927
  br label %bb138, !dbg !3928

bb24:                                             ; preds = %bb23
  %50 = bitcast %"core::option::Option<(char, &str)>"* %_37 to i32*, !dbg !3926
  %51 = load i32, i32* %50, align 8, !dbg !3926, !range !344
  %52 = sub i32 %51, 1114112, !dbg !3926
  %53 = icmp eq i32 %52, 0, !dbg !3926
  %_40 = select i1 %53, i64 0, i64 1, !dbg !3926
  switch i64 %_40, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb25
  ], !dbg !3929

bb29:                                             ; preds = %bb24
  unreachable, !dbg !3926

bb30:                                             ; preds = %bb24
  %54 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !3930
  %55 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %54, i32 0, i32 1, !dbg !3930
  store i8 0, i8* %55, align 1, !dbg !3930
  %56 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3930
  store i8 1, i8* %56, align 4, !dbg !3930
  br label %bb138, !dbg !3931

bb25:                                             ; preds = %bb24
  %57 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !3929
  %58 = bitcast %"core::option::Option<(char, &str)>::Some"* %57 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !3929
  %59 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %58 to i32*, !dbg !3929
  %60 = load i32, i32* %59, align 8, !dbg !3929, !range !345
  %61 = icmp eq i32 %60, 45, !dbg !3929
  br i1 %61, label %bb26, label %bb28, !dbg !3929

bb26:                                             ; preds = %bb25
  %62 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !3932
  %63 = bitcast %"core::option::Option<(char, &str)>::Some"* %62 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !3932
  %64 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %63, i32 0, i32 2, !dbg !3932
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %64, i32 0, i32 0, !dbg !3932
  %66 = load [0 x i8]*, [0 x i8]** %65, align 8, !dbg !3932, !nonnull !4
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %64, i32 0, i32 1, !dbg !3932
  %68 = load i64, i64* %67, align 8, !dbg !3932
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_39 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb406591fb252ecfaE"([0 x i8]* nonnull align 1 %66, i64 %68, [0 x i8]* nonnull align 1 getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc2982, i32 0, i32 0), i64 0), !dbg !3932
  br label %bb27, !dbg !3932

bb28:                                             ; preds = %bb25
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !3933
  %_43.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !3933, !nonnull !4
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !3933
  %_43.1 = load i64, i64* %70, align 8, !dbg !3933
  %71 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !3934
  store i8 1, i8* %71, align 8, !dbg !3934
  %72 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !3934
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 0, !dbg !3934
  store [0 x i8]* %_43.0, [0 x i8]** %73, align 8, !dbg !3934
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 1, !dbg !3934
  store i64 %_43.1, i64* %74, align 8, !dbg !3934
  br label %bb33, !dbg !3935

bb33:                                             ; preds = %bb32, %bb28
  %75 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !3936
  %76 = load i8, i8* %75, align 8, !dbg !3936, !range !238
  %is_positive = trunc i8 %76 to i1, !dbg !3936
  %77 = zext i1 %is_positive to i8, !dbg !3936
  store i8 %77, i8* %is_positive.dbg.spill, align 1, !dbg !3936
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill, metadata !3835, metadata !DIExpression()), !dbg !3937
  %78 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !3938
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 0, !dbg !3938
  %src.03 = load [0 x i8]*, [0 x i8]** %79, align 8, !dbg !3938, !nonnull !4
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 1, !dbg !3938
  %src.14 = load i64, i64* %80, align 8, !dbg !3938
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 0, !dbg !3938
  store [0 x i8]* %src.03, [0 x i8]** %81, align 8, !dbg !3938
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 1, !dbg !3938
  store i64 %src.14, i64* %82, align 8, !dbg !3938
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill5, metadata !3837, metadata !DIExpression()), !dbg !3939
  br i1 %is_positive, label %bb34, label %bb35, !dbg !3940

bb27:                                             ; preds = %bb26
  br i1 %_39, label %bb31, label %bb32, !dbg !3932

bb32:                                             ; preds = %bb27
  %83 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !3941
  %84 = bitcast %"core::option::Option<(char, &str)>::Some"* %83 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !3941
  %85 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %84, i32 0, i32 2, !dbg !3941
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 0, !dbg !3941
  %src.0 = load [0 x i8]*, [0 x i8]** %86, align 8, !dbg !3941, !nonnull !4
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 1, !dbg !3941
  %src.1 = load i64, i64* %87, align 8, !dbg !3941
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0, !dbg !3941
  store [0 x i8]* %src.0, [0 x i8]** %88, align 8, !dbg !3941
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1, !dbg !3941
  store i64 %src.1, i64* %89, align 8, !dbg !3941
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !3838, metadata !DIExpression()), !dbg !3942
  %90 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !3943
  store i8 0, i8* %90, align 8, !dbg !3943
  %91 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !3943
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 0, !dbg !3943
  store [0 x i8]* %src.0, [0 x i8]** %92, align 8, !dbg !3943
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 1, !dbg !3943
  store i64 %src.1, i64* %93, align 8, !dbg !3943
  br label %bb33, !dbg !3944

bb31:                                             ; preds = %bb27
  %94 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !3945
  %95 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %94, i32 0, i32 1, !dbg !3945
  store i8 0, i8* %95, align 1, !dbg !3945
  %96 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3945
  store i8 1, i8* %96, align 4, !dbg !3945
  br label %bb138, !dbg !3946

bb35:                                             ; preds = %bb33
  store float -0.000000e+00, float* %sig, align 4, !dbg !3947
  br label %bb36, !dbg !3948

bb34:                                             ; preds = %bb33
  store float 0.000000e+00, float* %sig, align 4, !dbg !3949
  br label %bb36, !dbg !3948

bb36:                                             ; preds = %bb35, %bb34
  %97 = load float, float* %sig, align 4, !dbg !3950
  store float %97, float* %prev_sig, align 4, !dbg !3950
; call core::str::<impl str>::chars
  %98 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE"([0 x i8]* nonnull align 1 %src.03, i64 %src.14), !dbg !3951
  %_48.0 = extractvalue { i8*, i8* } %98, 0, !dbg !3951
  %_48.1 = extractvalue { i8*, i8* } %98, 1, !dbg !3951
  br label %bb37, !dbg !3951

bb37:                                             ; preds = %bb36
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h97135b2391b53e59E(%"core::iter::Enumerate<core::str::Chars>"* noalias nocapture sret(%"core::iter::Enumerate<core::str::Chars>") dereferenceable(24) %cs, i8* nonnull %_48.0, i8* %_48.1), !dbg !3951
  br label %bb38, !dbg !3951

bb38:                                             ; preds = %bb37
  %99 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !3952
  store i32 1114112, i32* %99, align 8, !dbg !3952
; call core::iter::traits::iterator::Iterator::by_ref
  %_52 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %cs), !dbg !3953
  br label %bb39, !dbg !3953

bb39:                                             ; preds = %bb38
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_51 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %_52), !dbg !3953
  br label %bb40, !dbg !3953

bb40:                                             ; preds = %bb39
  store %"core::iter::Enumerate<core::str::Chars>"* %_51, %"core::iter::Enumerate<core::str::Chars>"** %iter, align 8, !dbg !3953
  br label %bb41, !dbg !3954

bb41:                                             ; preds = %bb72, %bb40
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %100 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E"(%"core::iter::Enumerate<core::str::Chars>"** align 8 dereferenceable(8) %iter), !dbg !3955
  store { i64, i32 } %100, { i64, i32 }* %_56, align 8, !dbg !3955
  br label %bb42, !dbg !3955

bb42:                                             ; preds = %bb41
  %101 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 1, !dbg !3955
  %102 = load i32, i32* %101, align 8, !dbg !3955, !range !344
  %103 = sub i32 %102, 1114112, !dbg !3955
  %104 = icmp eq i32 %103, 0, !dbg !3955
  %_59 = select i1 %104, i64 0, i64 1, !dbg !3955
  switch i64 %_59, label %bb43 [
    i64 0, label %bb76
    i64 1, label %bb44
  ], !dbg !3955

bb43:                                             ; preds = %bb42
  unreachable, !dbg !3955

bb76:                                             ; preds = %bb75, %bb46, %bb42
; call core::option::Option<T>::is_none
  %_124 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h1e3be241a57d2d6aE"({ i32, i64 }* align 8 dereferenceable(16) %exp_info), !dbg !3956
  br label %bb77, !dbg !3956

bb44:                                             ; preds = %bb42
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 0, !dbg !3957
  %val.0 = load i64, i64* %105, align 8, !dbg !3957
  %106 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 1, !dbg !3957
  %val.1 = load i32, i32* %106, align 8, !dbg !3957, !range !345
  %107 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill, i32 0, i32 0, !dbg !3957
  store i64 %val.0, i64* %107, align 8, !dbg !3957
  %108 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill, i32 0, i32 1, !dbg !3957
  store i32 %val.1, i32* %108, align 8, !dbg !3957
  call void @llvm.dbg.declare(metadata { i64, i32 }* %val.dbg.spill, metadata !3852, metadata !DIExpression()), !dbg !3958
  %109 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill, i32 0, i32 0, !dbg !3958
  store i64 %val.0, i64* %109, align 8, !dbg !3958
  %110 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill, i32 0, i32 1, !dbg !3958
  store i32 %val.1, i32* %110, align 8, !dbg !3958
  call void @llvm.dbg.declare(metadata { i64, i32 }* %__next.dbg.spill, metadata !3850, metadata !DIExpression()), !dbg !3955
  store i64 %val.0, i64* %i.dbg.spill, align 8, !dbg !3959
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !3854, metadata !DIExpression()), !dbg !3960
  store i32 %val.1, i32* %c.dbg.spill, align 4, !dbg !3961
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !3856, metadata !DIExpression()), !dbg !3962
; call core::char::methods::<impl char>::to_digit
  %111 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E"(i32 %val.1, i32 %radix), !dbg !3963
  store { i32, i32 } %111, { i32, i32 }* %_64, align 4, !dbg !3963
  br label %bb45, !dbg !3963

bb45:                                             ; preds = %bb44
  %112 = bitcast { i32, i32 }* %_64 to i32*, !dbg !3963
  %113 = load i32, i32* %112, align 4, !dbg !3963, !range !1207
  %_67 = zext i32 %113 to i64, !dbg !3963
  switch i64 %_67, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ], !dbg !3964

bb47:                                             ; preds = %bb45
  unreachable, !dbg !3963

bb46:                                             ; preds = %bb45
  switch i32 %val.1, label %bb73 [
    i32 101, label %bb74
    i32 69, label %bb74
    i32 112, label %bb74
    i32 80, label %bb74
    i32 46, label %bb76
  ], !dbg !3965

bb48:                                             ; preds = %bb45
  %114 = bitcast { i32, i32 }* %_64 to %"core::option::Option<u32>::Some"*, !dbg !3966
  %115 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %114, i32 0, i32 1, !dbg !3966
  %digit = load i32, i32* %115, align 4, !dbg !3966
  store i32 %digit, i32* %digit.dbg.spill, align 4, !dbg !3966
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill, metadata !3857, metadata !DIExpression()), !dbg !3967
  %_69 = load float, float* %sig, align 4, !dbg !3968
  %_70 = uitofp i32 %radix to float, !dbg !3969
  %116 = fmul float %_69, %_70, !dbg !3970
  store float %116, float* %sig, align 4, !dbg !3970
  br i1 %is_positive, label %bb49, label %bb50, !dbg !3971

bb50:                                             ; preds = %bb48
  %_77 = load float, float* %sig, align 4, !dbg !3972
  %_79 = zext i32 %digit to i64, !dbg !3973
  %_78 = sitofp i64 %_79 to float, !dbg !3974
  %117 = fsub float %_77, %_78, !dbg !3975
  store float %117, float* %sig, align 4, !dbg !3975
  br label %bb51, !dbg !3976

bb49:                                             ; preds = %bb48
  %_73 = load float, float* %sig, align 4, !dbg !3977
  %_75 = zext i32 %digit to i64, !dbg !3978
  %_74 = sitofp i64 %_75 to float, !dbg !3979
  %118 = fadd float %_73, %_74, !dbg !3980
  store float %118, float* %sig, align 4, !dbg !3980
  br label %bb51, !dbg !3976

bb51:                                             ; preds = %bb50, %bb49
  %_82 = load float, float* %prev_sig, align 4, !dbg !3981
  %_81 = fcmp une float %_82, 0.000000e+00, !dbg !3981
  br i1 %_81, label %bb52, label %bb72, !dbg !3981

bb72:                                             ; preds = %bb70, %bb51
  %_117 = load float, float* %sig, align 4, !dbg !3982
  store float %_117, float* %prev_sig, align 4, !dbg !3983
  br label %bb41, !dbg !3954

bb52:                                             ; preds = %bb51
  br i1 %is_positive, label %bb54, label %bb53, !dbg !3984

bb53:                                             ; preds = %bb52
  store i8 0, i8* %_83, align 1, !dbg !3984
  br label %bb55, !dbg !3984

bb54:                                             ; preds = %bb52
  %_86 = load float, float* %sig, align 4, !dbg !3985
  %_87 = load float, float* %prev_sig, align 4, !dbg !3986
  %_85 = fcmp ole float %_86, %_87, !dbg !3985
  %119 = zext i1 %_85 to i8, !dbg !3984
  store i8 %119, i8* %_83, align 1, !dbg !3984
  br label %bb55, !dbg !3984

bb55:                                             ; preds = %bb53, %bb54
  %120 = load i8, i8* %_83, align 1, !dbg !3984, !range !238
  %121 = trunc i8 %120 to i1, !dbg !3984
  br i1 %121, label %bb56, label %bb57, !dbg !3984

bb57:                                             ; preds = %bb55
  %_89 = xor i1 %is_positive, true, !dbg !3987
  br i1 %_89, label %bb59, label %bb58, !dbg !3987

bb56:                                             ; preds = %bb55
  %122 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3988
  %123 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %122, i32 0, i32 1, !dbg !3988
  store float 0x7FF0000000000000, float* %123, align 4, !dbg !3988
  %124 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3988
  store i8 0, i8* %124, align 4, !dbg !3988
  br label %bb138, !dbg !3989

bb58:                                             ; preds = %bb57
  store i8 0, i8* %_88, align 1, !dbg !3987
  br label %bb60, !dbg !3987

bb59:                                             ; preds = %bb57
  %_92 = load float, float* %sig, align 4, !dbg !3990
  %_93 = load float, float* %prev_sig, align 4, !dbg !3991
  %_91 = fcmp oge float %_92, %_93, !dbg !3990
  %125 = zext i1 %_91 to i8, !dbg !3987
  store i8 %125, i8* %_88, align 1, !dbg !3987
  br label %bb60, !dbg !3987

bb60:                                             ; preds = %bb58, %bb59
  %126 = load i8, i8* %_88, align 1, !dbg !3987, !range !238
  %127 = trunc i8 %126 to i1, !dbg !3987
  br i1 %127, label %bb61, label %bb62, !dbg !3987

bb62:                                             ; preds = %bb60
  br i1 %is_positive, label %bb64, label %bb63, !dbg !3992

bb61:                                             ; preds = %bb60
  %128 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !3993
  %129 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %128, i32 0, i32 1, !dbg !3993
  store float 0xFFF0000000000000, float* %129, align 4, !dbg !3993
  %130 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3993
  store i8 0, i8* %130, align 4, !dbg !3993
  br label %bb138, !dbg !3989

bb63:                                             ; preds = %bb62
  store i8 0, i8* %_94, align 1, !dbg !3992
  br label %bb65, !dbg !3992

bb64:                                             ; preds = %bb62
  %_97 = load float, float* %prev_sig, align 4, !dbg !3994
  %_100 = load float, float* %sig, align 4, !dbg !3995
  %_101 = uitofp i32 %digit to float, !dbg !3996
  %_99 = fsub float %_100, %_101, !dbg !3997
  %_103 = uitofp i32 %radix to float, !dbg !3998
  %_98 = fdiv float %_99, %_103, !dbg !3997
  %_96 = fcmp une float %_97, %_98, !dbg !3999
  %131 = zext i1 %_96 to i8, !dbg !3992
  store i8 %131, i8* %_94, align 1, !dbg !3992
  br label %bb65, !dbg !3992

bb65:                                             ; preds = %bb63, %bb64
  %132 = load i8, i8* %_94, align 1, !dbg !3992, !range !238
  %133 = trunc i8 %132 to i1, !dbg !3992
  br i1 %133, label %bb66, label %bb67, !dbg !3992

bb67:                                             ; preds = %bb65
  %_106 = xor i1 %is_positive, true, !dbg !4000
  br i1 %_106, label %bb69, label %bb68, !dbg !4000

bb66:                                             ; preds = %bb65
  %134 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4001
  %135 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %134, i32 0, i32 1, !dbg !4001
  store float 0x7FF0000000000000, float* %135, align 4, !dbg !4001
  %136 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4001
  store i8 0, i8* %136, align 4, !dbg !4001
  br label %bb138, !dbg !3989

bb68:                                             ; preds = %bb67
  store i8 0, i8* %_105, align 1, !dbg !4000
  br label %bb70, !dbg !4000

bb69:                                             ; preds = %bb67
  %_109 = load float, float* %prev_sig, align 4, !dbg !4002
  %_112 = load float, float* %sig, align 4, !dbg !4003
  %_113 = uitofp i32 %digit to float, !dbg !4004
  %_111 = fadd float %_112, %_113, !dbg !4005
  %_115 = uitofp i32 %radix to float, !dbg !4006
  %_110 = fdiv float %_111, %_115, !dbg !4005
  %_108 = fcmp une float %_109, %_110, !dbg !4007
  %137 = zext i1 %_108 to i8, !dbg !4000
  store i8 %137, i8* %_105, align 1, !dbg !4000
  br label %bb70, !dbg !4000

bb70:                                             ; preds = %bb68, %bb69
  %138 = load i8, i8* %_105, align 1, !dbg !4000, !range !238
  %139 = trunc i8 %138 to i1, !dbg !4000
  br i1 %139, label %bb71, label %bb72, !dbg !4000

bb71:                                             ; preds = %bb70
  %140 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4008
  %141 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %140, i32 0, i32 1, !dbg !4008
  store float 0xFFF0000000000000, float* %141, align 4, !dbg !4008
  %142 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4008
  store i8 0, i8* %142, align 4, !dbg !4008
  br label %bb138, !dbg !3989

bb73:                                             ; preds = %bb46
  %143 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4009
  %144 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %143, i32 0, i32 1, !dbg !4009
  store i8 1, i8* %144, align 1, !dbg !4009
  %145 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4009
  store i8 1, i8* %145, align 4, !dbg !4009
  br label %bb138, !dbg !4010

bb74:                                             ; preds = %bb46, %bb46, %bb46, %bb46
  %146 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val.0, i64 1), !dbg !4011
  %_123.0 = extractvalue { i64, i1 } %146, 0, !dbg !4011
  %_123.1 = extractvalue { i64, i1 } %146, 1, !dbg !4011
  %147 = call i1 @llvm.expect.i1(i1 %_123.1, i1 false), !dbg !4011
  br i1 %147, label %panic, label %bb75, !dbg !4011

bb75:                                             ; preds = %bb74
  %148 = bitcast { i32, i64 }* %_119 to i32*, !dbg !4012
  store i32 %val.1, i32* %148, align 8, !dbg !4012
  %149 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 1, !dbg !4012
  store i64 %_123.0, i64* %149, align 8, !dbg !4012
  %150 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 0, !dbg !4013
  %151 = load i32, i32* %150, align 8, !dbg !4013, !range !345
  %152 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 1, !dbg !4013
  %153 = load i64, i64* %152, align 8, !dbg !4013
  %154 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 0, !dbg !4013
  store i32 %151, i32* %154, align 8, !dbg !4013
  %155 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 1, !dbg !4013
  store i64 %153, i64* %155, align 8, !dbg !4013
  %156 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 0, !dbg !4014
  %157 = load i32, i32* %156, align 8, !dbg !4014, !range !344
  %158 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 1, !dbg !4014
  %159 = load i64, i64* %158, align 8, !dbg !4014
  %160 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4014
  store i32 %157, i32* %160, align 8, !dbg !4014
  %161 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4014
  store i64 %159, i64* %161, align 8, !dbg !4014
  br label %bb76, !dbg !4015

panic:                                            ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4011
  unreachable, !dbg !4011

bb77:                                             ; preds = %bb76
  br i1 %_124, label %bb78, label %bb105, !dbg !3956

bb105:                                            ; preds = %bb104, %bb82, %bb77
  %162 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4016
  %163 = load i32, i32* %162, align 8, !dbg !4016, !range !344
  %164 = sub i32 %163, 1114112, !dbg !4016
  %165 = icmp eq i32 %164, 0, !dbg !4016
  %_179 = select i1 %165, i64 0, i64 1, !dbg !4016
  switch i64 %_179, label %bb107 [
    i64 0, label %bb106
    i64 1, label %bb108
  ], !dbg !4017

bb78:                                             ; preds = %bb77
  store float 1.000000e+00, float* %power, align 4, !dbg !4018
; call core::iter::traits::iterator::Iterator::by_ref
  %_128 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %cs), !dbg !4019
  br label %bb79, !dbg !4019

bb79:                                             ; preds = %bb78
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_127 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %_128), !dbg !4019
  br label %bb80, !dbg !4019

bb80:                                             ; preds = %bb79
  store %"core::iter::Enumerate<core::str::Chars>"* %_127, %"core::iter::Enumerate<core::str::Chars>"** %iter1, align 8, !dbg !4019
  br label %bb81, !dbg !4020

bb81:                                             ; preds = %bb101, %bb80
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %166 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E"(%"core::iter::Enumerate<core::str::Chars>"** align 8 dereferenceable(8) %iter1), !dbg !4021
  store { i64, i32 } %166, { i64, i32 }* %_132, align 8, !dbg !4021
  br label %bb82, !dbg !4021

bb82:                                             ; preds = %bb81
  %167 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 1, !dbg !4021
  %168 = load i32, i32* %167, align 8, !dbg !4021, !range !344
  %169 = sub i32 %168, 1114112, !dbg !4021
  %170 = icmp eq i32 %169, 0, !dbg !4021
  %_135 = select i1 %170, i64 0, i64 1, !dbg !4021
  switch i64 %_135, label %bb83 [
    i64 0, label %bb105
    i64 1, label %bb84
  ], !dbg !4021

bb83:                                             ; preds = %bb82
  unreachable, !dbg !4021

bb84:                                             ; preds = %bb82
  %171 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 0, !dbg !4022
  %val.06 = load i64, i64* %171, align 8, !dbg !4022
  %172 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 1, !dbg !4022
  %val.17 = load i32, i32* %172, align 8, !dbg !4022, !range !345
  %173 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill8, i32 0, i32 0, !dbg !4022
  store i64 %val.06, i64* %173, align 8, !dbg !4022
  %174 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill8, i32 0, i32 1, !dbg !4022
  store i32 %val.17, i32* %174, align 8, !dbg !4022
  call void @llvm.dbg.declare(metadata { i64, i32 }* %val.dbg.spill8, metadata !3865, metadata !DIExpression()), !dbg !4023
  %175 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill9, i32 0, i32 0, !dbg !4023
  store i64 %val.06, i64* %175, align 8, !dbg !4023
  %176 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill9, i32 0, i32 1, !dbg !4023
  store i32 %val.17, i32* %176, align 8, !dbg !4023
  call void @llvm.dbg.declare(metadata { i64, i32 }* %__next.dbg.spill9, metadata !3863, metadata !DIExpression()), !dbg !4021
  store i64 %val.06, i64* %i.dbg.spill10, align 8, !dbg !4024
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill10, metadata !3867, metadata !DIExpression()), !dbg !4025
  store i32 %val.17, i32* %c.dbg.spill11, align 4, !dbg !4026
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill11, metadata !3869, metadata !DIExpression()), !dbg !4027
; call core::char::methods::<impl char>::to_digit
  %177 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E"(i32 %val.17, i32 %radix), !dbg !4028
  store { i32, i32 } %177, { i32, i32 }* %_140, align 4, !dbg !4028
  br label %bb85, !dbg !4028

bb85:                                             ; preds = %bb84
  %178 = bitcast { i32, i32 }* %_140 to i32*, !dbg !4028
  %179 = load i32, i32* %178, align 4, !dbg !4028, !range !1207
  %_143 = zext i32 %179 to i64, !dbg !4028
  switch i64 %_143, label %bb87 [
    i64 0, label %bb86
    i64 1, label %bb88
  ], !dbg !4029

bb87:                                             ; preds = %bb85
  unreachable, !dbg !4028

bb86:                                             ; preds = %bb85
  switch i32 %val.17, label %bb102 [
    i32 101, label %bb103
    i32 69, label %bb103
    i32 112, label %bb103
    i32 80, label %bb103
  ], !dbg !4030

bb88:                                             ; preds = %bb85
  %180 = bitcast { i32, i32 }* %_140 to %"core::option::Option<u32>::Some"*, !dbg !4031
  %181 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %180, i32 0, i32 1, !dbg !4031
  %digit12 = load i32, i32* %181, align 4, !dbg !4031
  store i32 %digit12, i32* %digit.dbg.spill13, align 4, !dbg !4031
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill13, metadata !3870, metadata !DIExpression()), !dbg !4032
  %_145 = load float, float* %power, align 4, !dbg !4033
  %_146 = uitofp i32 %radix to float, !dbg !4034
  %182 = fdiv float %_145, %_146, !dbg !4035
  store float %182, float* %power, align 4, !dbg !4035
  br i1 %is_positive, label %bb89, label %bb90, !dbg !4036

bb90:                                             ; preds = %bb88
  %_155 = load float, float* %sig, align 4, !dbg !4037
  %_157 = uitofp i32 %digit12 to float, !dbg !4038
  %_159 = load float, float* %power, align 4, !dbg !4039
  %_156 = fmul float %_157, %_159, !dbg !4038
  %183 = fsub float %_155, %_156, !dbg !4037
  store float %183, float* %_148, align 4, !dbg !4037
  br label %bb91, !dbg !4040

bb89:                                             ; preds = %bb88
  %_150 = load float, float* %sig, align 4, !dbg !4041
  %_152 = uitofp i32 %digit12 to float, !dbg !4042
  %_154 = load float, float* %power, align 4, !dbg !4043
  %_151 = fmul float %_152, %_154, !dbg !4042
  %184 = fadd float %_150, %_151, !dbg !4041
  store float %184, float* %_148, align 4, !dbg !4041
  br label %bb91, !dbg !4040

bb91:                                             ; preds = %bb90, %bb89
  %185 = load float, float* %_148, align 4, !dbg !4044
  store float %185, float* %sig, align 4, !dbg !4044
  br i1 %is_positive, label %bb93, label %bb92, !dbg !4045

bb92:                                             ; preds = %bb91
  store i8 0, i8* %_160, align 1, !dbg !4045
  br label %bb94, !dbg !4045

bb93:                                             ; preds = %bb91
  %_163 = load float, float* %sig, align 4, !dbg !4046
  %_164 = load float, float* %prev_sig, align 4, !dbg !4047
  %_162 = fcmp olt float %_163, %_164, !dbg !4046
  %186 = zext i1 %_162 to i8, !dbg !4045
  store i8 %186, i8* %_160, align 1, !dbg !4045
  br label %bb94, !dbg !4045

bb94:                                             ; preds = %bb92, %bb93
  %187 = load i8, i8* %_160, align 1, !dbg !4045, !range !238
  %188 = trunc i8 %187 to i1, !dbg !4045
  br i1 %188, label %bb95, label %bb96, !dbg !4045

bb96:                                             ; preds = %bb94
  %_166 = xor i1 %is_positive, true, !dbg !4048
  br i1 %_166, label %bb98, label %bb97, !dbg !4048

bb95:                                             ; preds = %bb94
  %189 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4049
  %190 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %189, i32 0, i32 1, !dbg !4049
  store float 0x7FF0000000000000, float* %190, align 4, !dbg !4049
  %191 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4049
  store i8 0, i8* %191, align 4, !dbg !4049
  br label %bb138, !dbg !4050

bb97:                                             ; preds = %bb96
  store i8 0, i8* %_165, align 1, !dbg !4048
  br label %bb99, !dbg !4048

bb98:                                             ; preds = %bb96
  %_169 = load float, float* %sig, align 4, !dbg !4051
  %_170 = load float, float* %prev_sig, align 4, !dbg !4052
  %_168 = fcmp ogt float %_169, %_170, !dbg !4051
  %192 = zext i1 %_168 to i8, !dbg !4048
  store i8 %192, i8* %_165, align 1, !dbg !4048
  br label %bb99, !dbg !4048

bb99:                                             ; preds = %bb97, %bb98
  %193 = load i8, i8* %_165, align 1, !dbg !4048, !range !238
  %194 = trunc i8 %193 to i1, !dbg !4048
  br i1 %194, label %bb100, label %bb101, !dbg !4048

bb101:                                            ; preds = %bb99
  %_171 = load float, float* %sig, align 4, !dbg !4053
  store float %_171, float* %prev_sig, align 4, !dbg !4054
  br label %bb81, !dbg !4020

bb100:                                            ; preds = %bb99
  %195 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4055
  %196 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %195, i32 0, i32 1, !dbg !4055
  store float 0xFFF0000000000000, float* %196, align 4, !dbg !4055
  %197 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4055
  store i8 0, i8* %197, align 4, !dbg !4055
  br label %bb138, !dbg !4050

bb102:                                            ; preds = %bb86
  %198 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4056
  %199 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %198, i32 0, i32 1, !dbg !4056
  store i8 1, i8* %199, align 1, !dbg !4056
  %200 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4056
  store i8 1, i8* %200, align 4, !dbg !4056
  br label %bb138, !dbg !4057

bb103:                                            ; preds = %bb86, %bb86, %bb86, %bb86
  %201 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val.06, i64 1), !dbg !4058
  %_177.0 = extractvalue { i64, i1 } %201, 0, !dbg !4058
  %_177.1 = extractvalue { i64, i1 } %201, 1, !dbg !4058
  %202 = call i1 @llvm.expect.i1(i1 %_177.1, i1 false), !dbg !4058
  br i1 %202, label %panic14, label %bb104, !dbg !4058

bb104:                                            ; preds = %bb103
  %203 = bitcast { i32, i64 }* %_173 to i32*, !dbg !4059
  store i32 %val.17, i32* %203, align 8, !dbg !4059
  %204 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 1, !dbg !4059
  store i64 %_177.0, i64* %204, align 8, !dbg !4059
  %205 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 0, !dbg !4060
  %206 = load i32, i32* %205, align 8, !dbg !4060, !range !345
  %207 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 1, !dbg !4060
  %208 = load i64, i64* %207, align 8, !dbg !4060
  %209 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 0, !dbg !4060
  store i32 %206, i32* %209, align 8, !dbg !4060
  %210 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 1, !dbg !4060
  store i64 %208, i64* %210, align 8, !dbg !4060
  %211 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 0, !dbg !4061
  %212 = load i32, i32* %211, align 8, !dbg !4061, !range !344
  %213 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 1, !dbg !4061
  %214 = load i64, i64* %213, align 8, !dbg !4061
  %215 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4061
  store i32 %212, i32* %215, align 8, !dbg !4061
  %216 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4061
  store i64 %214, i64* %216, align 8, !dbg !4061
  br label %bb105, !dbg !4062

panic14:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4058
  unreachable, !dbg !4058

bb107:                                            ; preds = %bb105
  unreachable, !dbg !4016

bb106:                                            ; preds = %bb105
  store float 1.000000e+00, float* %exp, align 4, !dbg !4063
  br label %bb137, !dbg !4063

bb108:                                            ; preds = %bb105
  %217 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4064
  %c = load i32, i32* %217, align 8, !dbg !4064, !range !345
  store i32 %c, i32* %c.dbg.spill15, align 4, !dbg !4064
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill15, metadata !3874, metadata !DIExpression()), !dbg !4065
  %218 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4066
  %offset = load i64, i64* %218, align 8, !dbg !4066
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !4066
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !3876, metadata !DIExpression()), !dbg !4067
  switch i32 %c, label %bb109 [
    i32 69, label %bb111
    i32 101, label %bb112
    i32 80, label %bb114
    i32 112, label %bb115
  ], !dbg !4068

bb109:                                            ; preds = %bb111, %bb112, %bb114, %bb115, %bb108
  %219 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4069
  %220 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %219, i32 0, i32 1, !dbg !4069
  store i8 1, i8* %220, align 1, !dbg !4069
  %221 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4069
  store i8 1, i8* %221, align 4, !dbg !4069
  br label %bb138, !dbg !4070

bb111:                                            ; preds = %bb108
  %222 = icmp eq i32 %radix, 10, !dbg !4071
  br i1 %222, label %bb110, label %bb109, !dbg !4071

bb112:                                            ; preds = %bb108
  %223 = icmp eq i32 %radix, 10, !dbg !4071
  br i1 %223, label %bb110, label %bb109, !dbg !4071

bb114:                                            ; preds = %bb108
  %224 = icmp eq i32 %radix, 16, !dbg !4072
  br i1 %224, label %bb113, label %bb109, !dbg !4072

bb115:                                            ; preds = %bb108
  %225 = icmp eq i32 %radix, 16, !dbg !4072
  br i1 %225, label %bb113, label %bb109, !dbg !4072

bb113:                                            ; preds = %bb114, %bb115
  store float 2.000000e+00, float* %base, align 4, !dbg !4073
  br label %bb116, !dbg !4073

bb116:                                            ; preds = %bb110, %bb113
  store i64 %offset, i64* %_190, align 8, !dbg !4074
  %226 = load i64, i64* %_190, align 8, !dbg !4075
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %227 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb957295e3d336df5E"([0 x i8]* nonnull align 1 %src.03, i64 %src.14, i64 %226, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4075
  %_188.0 = extractvalue { [0 x i8]*, i64 } %227, 0, !dbg !4075
  %_188.1 = extractvalue { [0 x i8]*, i64 } %227, 1, !dbg !4075
  br label %bb117, !dbg !4075

bb110:                                            ; preds = %bb111, %bb112
  store float 1.000000e+01, float* %base, align 4, !dbg !4076
  br label %bb116, !dbg !4076

bb117:                                            ; preds = %bb116
  %228 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill16, i32 0, i32 0, !dbg !4077
  store [0 x i8]* %_188.0, [0 x i8]** %228, align 8, !dbg !4077
  %229 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill16, i32 0, i32 1, !dbg !4077
  store i64 %_188.1, i64* %229, align 8, !dbg !4077
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill16, metadata !3879, metadata !DIExpression()), !dbg !4078
; call <f32 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h17943db7526cdedeE"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %_195, [0 x i8]* nonnull align 1 %_188.0, i64 %_188.1), !dbg !4079
  br label %bb118, !dbg !4079

bb118:                                            ; preds = %bb117
  %230 = bitcast %"core::option::Option<(char, &str)>"* %_195 to i32*, !dbg !4079
  %231 = load i32, i32* %230, align 8, !dbg !4079, !range !344
  %232 = sub i32 %231, 1114112, !dbg !4079
  %233 = icmp eq i32 %232, 0, !dbg !4079
  %_197 = select i1 %233, i64 0, i64 1, !dbg !4079
  switch i64 %_197, label %bb121 [
    i64 0, label %bb119
    i64 1, label %bb120
  ], !dbg !4080

bb121:                                            ; preds = %bb118
  unreachable, !dbg !4079

bb119:                                            ; preds = %bb118
  %234 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4081
  %235 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %234, i32 0, i32 1, !dbg !4081
  store i8 1, i8* %235, align 1, !dbg !4081
  %236 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4081
  store i8 1, i8* %236, align 4, !dbg !4081
  br label %bb138, !dbg !4082

bb120:                                            ; preds = %bb118
  %237 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4080
  %238 = bitcast %"core::option::Option<(char, &str)>::Some"* %237 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4080
  %239 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %238 to i32*, !dbg !4080
  %240 = load i32, i32* %239, align 8, !dbg !4080, !range !345
  switch i32 %240, label %bb126 [
    i32 45, label %bb122
    i32 43, label %bb124
  ], !dbg !4080

bb126:                                            ; preds = %bb120
; call core::str::<impl str>::parse
  %241 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %_188.0, i64 %_188.1), !dbg !4083
  store i128 %241, i128* %6, align 8, !dbg !4083
  %242 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_204 to i8*, !dbg !4083
  %243 = bitcast i128* %6 to i8*, !dbg !4083
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 16, i1 false), !dbg !4083
  br label %bb127, !dbg !4083

bb122:                                            ; preds = %bb120
  %244 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4084
  %245 = bitcast %"core::option::Option<(char, &str)>::Some"* %244 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4084
  %246 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %245, i32 0, i32 2, !dbg !4084
  %247 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %246, i32 0, i32 0, !dbg !4084
  %src.020 = load [0 x i8]*, [0 x i8]** %247, align 8, !dbg !4084, !nonnull !4
  %248 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %246, i32 0, i32 1, !dbg !4084
  %src.121 = load i64, i64* %248, align 8, !dbg !4084
  %249 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill22, i32 0, i32 0, !dbg !4084
  store [0 x i8]* %src.020, [0 x i8]** %249, align 8, !dbg !4084
  %250 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill22, i32 0, i32 1, !dbg !4084
  store i64 %src.121, i64* %250, align 8, !dbg !4084
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill22, metadata !3884, metadata !DIExpression()), !dbg !4085
; call core::str::<impl str>::parse
  %251 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %src.020, i64 %src.121), !dbg !4086
  store i128 %251, i128* %4, align 8, !dbg !4086
  %252 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_199 to i8*, !dbg !4086
  %253 = bitcast i128* %4 to i8*, !dbg !4086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false), !dbg !4086
  br label %bb123, !dbg !4086

bb124:                                            ; preds = %bb120
  %254 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4087
  %255 = bitcast %"core::option::Option<(char, &str)>::Some"* %254 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4087
  %256 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %255, i32 0, i32 2, !dbg !4087
  %257 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %256, i32 0, i32 0, !dbg !4087
  %src.017 = load [0 x i8]*, [0 x i8]** %257, align 8, !dbg !4087, !nonnull !4
  %258 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %256, i32 0, i32 1, !dbg !4087
  %src.118 = load i64, i64* %258, align 8, !dbg !4087
  %259 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill19, i32 0, i32 0, !dbg !4087
  store [0 x i8]* %src.017, [0 x i8]** %259, align 8, !dbg !4087
  %260 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill19, i32 0, i32 1, !dbg !4087
  store i64 %src.118, i64* %260, align 8, !dbg !4087
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill19, metadata !3886, metadata !DIExpression()), !dbg !4088
; call core::str::<impl str>::parse
  %261 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %src.017, i64 %src.118), !dbg !4089
  store i128 %261, i128* %5, align 8, !dbg !4089
  %262 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_202 to i8*, !dbg !4089
  %263 = bitcast i128* %5 to i8*, !dbg !4089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 16, i1 false), !dbg !4089
  br label %bb125, !dbg !4089

bb127:                                            ; preds = %bb126
  %264 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4090
  store i8 1, i8* %264, align 8, !dbg !4090
  %265 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4090
  %266 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %265 to i8*, !dbg !4090
  %267 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_204 to i8*, !dbg !4090
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %267, i64 16, i1 false), !dbg !4090
  br label %bb128, !dbg !4091

bb128:                                            ; preds = %bb123, %bb125, %bb127
  %268 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4092
  %269 = load i8, i8* %268, align 8, !dbg !4092, !range !238
  %is_positive23 = trunc i8 %269 to i1, !dbg !4092
  %270 = zext i1 %is_positive23 to i8, !dbg !4092
  store i8 %270, i8* %is_positive.dbg.spill24, align 1, !dbg !4092
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill24, metadata !3881, metadata !DIExpression()), !dbg !4093
  %271 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4094
  %272 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %exp2 to i8*, !dbg !4094
  %273 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %271 to i8*, !dbg !4094
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false), !dbg !4094
  %274 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_208 to i8*, !dbg !4095
  %275 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %exp2 to i8*, !dbg !4095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 16, i1 false), !dbg !4095
  %276 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206 to i8*, !dbg !4096
  %277 = zext i1 %is_positive23 to i8, !dbg !4096
  store i8 %277, i8* %276, align 8, !dbg !4096
  %278 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4096
  %279 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %278 to i8*, !dbg !4096
  %280 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_208 to i8*, !dbg !4096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 16, i1 false), !dbg !4096
  %281 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206 to i8*, !dbg !4097
  %282 = load i8, i8* %281, align 8, !dbg !4097, !range !238
  %283 = trunc i8 %282 to i1, !dbg !4097
  br i1 %283, label %bb129, label %bb131, !dbg !4097

bb125:                                            ; preds = %bb124
  %284 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4098
  store i8 1, i8* %284, align 8, !dbg !4098
  %285 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4098
  %286 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %285 to i8*, !dbg !4098
  %287 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_202 to i8*, !dbg !4098
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %287, i64 16, i1 false), !dbg !4098
  br label %bb128, !dbg !4099

bb123:                                            ; preds = %bb122
  %288 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4100
  store i8 0, i8* %288, align 8, !dbg !4100
  %289 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4100
  %290 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %289 to i8*, !dbg !4100
  %291 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_199 to i8*, !dbg !4100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 16, i1 false), !dbg !4100
  br label %bb128, !dbg !4101

bb131:                                            ; preds = %bb128
  %292 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4096
  %293 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %292 to i8*, !dbg !4096
  %294 = load i8, i8* %293, align 8, !dbg !4096, !range !238
  %295 = trunc i8 %294 to i1, !dbg !4096
  %_210 = zext i1 %295 to i64, !dbg !4096
  %296 = icmp eq i64 %_210, 0, !dbg !4097
  br i1 %296, label %bb135, label %bb130, !dbg !4097

bb129:                                            ; preds = %bb128
  %297 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4096
  %298 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %297 to i8*, !dbg !4096
  %299 = load i8, i8* %298, align 8, !dbg !4096, !range !238
  %300 = trunc i8 %299 to i1, !dbg !4096
  %_209 = zext i1 %300 to i64, !dbg !4096
  %301 = icmp eq i64 %_209, 0, !dbg !4097
  br i1 %301, label %bb134, label %bb130, !dbg !4097

bb134:                                            ; preds = %bb129
  %302 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4102
  %303 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %302 to %"core::result::Result<usize, core::num::ParseIntError>::Ok"*, !dbg !4102
  %304 = getelementptr inbounds %"core::result::Result<usize, core::num::ParseIntError>::Ok", %"core::result::Result<usize, core::num::ParseIntError>::Ok"* %303, i32 0, i32 1, !dbg !4102
  %exp25 = load i64, i64* %304, align 8, !dbg !4102
  store i64 %exp25, i64* %exp.dbg.spill, align 8, !dbg !4102
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !3888, metadata !DIExpression()), !dbg !4103
  %_213 = load float, float* %base, align 4, !dbg !4104
; call <f32 as num_traits::Num>::from_str_radix::pow
  %305 = call float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17he28998159e117e56E"(float %_213, i64 %exp25), !dbg !4105
  store float %305, float* %exp, align 4, !dbg !4105
  br label %bb137, !dbg !4105

bb130:                                            ; preds = %bb131, %bb129
  %306 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4096
  %307 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %306 to i8*, !dbg !4096
  %308 = load i8, i8* %307, align 8, !dbg !4096, !range !238
  %309 = trunc i8 %308 to i1, !dbg !4096
  %_211 = zext i1 %309 to i64, !dbg !4096
  %310 = icmp eq i64 %_211, 1, !dbg !4097
  br i1 %310, label %bb133, label %bb132, !dbg !4097

bb137:                                            ; preds = %bb106, %bb136, %bb134
  %_220 = load float, float* %sig, align 4, !dbg !4106
  %_221 = load float, float* %exp, align 4, !dbg !4107
  %_219 = fmul float %_220, %_221, !dbg !4106
  %311 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Ok"*, !dbg !4108
  %312 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Ok", %"core::result::Result<f32, ParseFloatError>::Ok"* %311, i32 0, i32 1, !dbg !4108
  store float %_219, float* %312, align 4, !dbg !4108
  %313 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4108
  store i8 0, i8* %313, align 4, !dbg !4108
  br label %bb138, !dbg !3914

bb135:                                            ; preds = %bb131
  %314 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4109
  %315 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %314 to %"core::result::Result<usize, core::num::ParseIntError>::Ok"*, !dbg !4109
  %316 = getelementptr inbounds %"core::result::Result<usize, core::num::ParseIntError>::Ok", %"core::result::Result<usize, core::num::ParseIntError>::Ok"* %315, i32 0, i32 1, !dbg !4109
  %exp26 = load i64, i64* %316, align 8, !dbg !4109
  store i64 %exp26, i64* %exp.dbg.spill27, align 8, !dbg !4109
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill27, metadata !3890, metadata !DIExpression()), !dbg !4110
  %_217 = load float, float* %base, align 4, !dbg !4111
; call <f32 as num_traits::Num>::from_str_radix::pow
  %_216 = call float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17he28998159e117e56E"(float %_217, i64 %exp26), !dbg !4112
  br label %bb136, !dbg !4112

bb133:                                            ; preds = %bb130
  %317 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to %"core::result::Result<f32, ParseFloatError>::Err"*, !dbg !4113
  %318 = getelementptr inbounds %"core::result::Result<f32, ParseFloatError>::Err", %"core::result::Result<f32, ParseFloatError>::Err"* %317, i32 0, i32 1, !dbg !4113
  store i8 1, i8* %318, align 1, !dbg !4113
  %319 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !4113
  store i8 1, i8* %319, align 4, !dbg !4113
  br label %bb138, !dbg !4114

bb132:                                            ; preds = %bb130
  unreachable, !dbg !4096

bb136:                                            ; preds = %bb135
  %320 = fdiv float 1.000000e+00, %_216, !dbg !4115
  store float %320, float* %exp, align 4, !dbg !4115
  br label %bb137, !dbg !4116

bb2:                                              ; preds = %bb1
  %321 = bitcast i64** %_6 to { [0 x i8]*, i64 }**, !dbg !4117
  store { [0 x i8]*, i64 }* %src, { [0 x i8]*, i64 }** %321, align 8, !dbg !4117
  %322 = bitcast %"core::result::Result<f32, core::num::ParseFloatError>"* %_4 to i64*, !dbg !3905
  %323 = load i64, i64* %322, align 4, !dbg !3905
  %324 = load i64*, i64** %_6, align 8, !dbg !3905, !nonnull !4
; call core::result::Result<T,E>::map_err
  %325 = call i64 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb71883dcc5fa9debE"(i64 %323, i64* align 8 dereferenceable(16) %324), !dbg !3905
  store i64 %325, i64* %2, align 8, !dbg !3905
  %326 = bitcast %"core::result::Result<f32, ParseFloatError>"* %7 to i8*, !dbg !3905
  %327 = bitcast i64* %2 to i8*, !dbg !3905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %326, i8* align 8 %327, i64 8, i1 false), !dbg !3905
  br label %bb138, !dbg !3905
}

; <f32 as num_traits::Num>::from_str_radix::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h581169742fb4ec99E"(i64* align 8 dereferenceable(16) %_1, i1 zeroext %_2) unnamed_addr #0 !dbg !4118 {
start:
  %_2.dbg.spill = alloca i8, align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %1 = bitcast i64** %_1.dbg.spill to { [0 x i8]*, i64 }**
  %2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !4122, metadata !DIExpression(DW_OP_deref)), !dbg !4124
  %3 = zext i1 %_2 to i8
  store i8 %3, i8* %_2.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %_2.dbg.spill, metadata !4123, metadata !DIExpression()), !dbg !4125
  %4 = bitcast i64* %_1 to { [0 x i8]*, i64 }*, !dbg !4126
  %5 = bitcast i64* %_1 to { [0 x i8]*, i64 }*, !dbg !4126
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !4126
  %_5.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !4126, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !4126
  %_5.1 = load i64, i64* %7, align 8, !dbg !4126
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hcd0145b4087fba4fE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !4126
  br label %bb1, !dbg !4126

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !4126

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_3, align 1, !dbg !4127
  br label %bb4, !dbg !4128

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_3, align 1, !dbg !4129
  br label %bb4, !dbg !4128

bb4:                                              ; preds = %bb3, %bb2
  %8 = load i8, i8* %_3, align 1, !dbg !4130, !range !238
  %9 = trunc i8 %8 to i1, !dbg !4130
  %10 = zext i1 %9 to i8, !dbg !4130
  store i8 %10, i8* %0, align 1, !dbg !4130
  %11 = load i8, i8* %0, align 1, !dbg !4131, !range !238
  %12 = trunc i8 %11 to i1, !dbg !4131
  ret i1 %12, !dbg !4131
}

; <f32 as num_traits::Num>::from_str_radix::slice_shift_char
; Function Attrs: nounwind
define internal void @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h17943db7526cdedeE"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !4132 {
start:
  %ch.dbg.spill = alloca i32, align 4
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i32, [1 x i32], { [0 x i8]*, i64 } }, align 8
  %_4 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4152, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %chars, metadata !4153, metadata !DIExpression()), !dbg !4158
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE"([0 x i8]* nonnull align 1 %src.0, i64 %src.1), !dbg !4159
  store { i8*, i8* } %3, { i8*, i8* }* %chars, align 8, !dbg !4159
  br label %bb1, !dbg !4159

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %4 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb51acee8bd391655E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !dbg !4160, !range !344
  store i32 %4, i32* %_4, align 4, !dbg !4160
  br label %bb2, !dbg !4160

bb2:                                              ; preds = %bb1
  %5 = load i32, i32* %_4, align 4, !dbg !4161, !range !344
  %6 = sub i32 %5, 1114112, !dbg !4161
  %7 = icmp eq i32 %6, 0, !dbg !4161
  %_6 = select i1 %7, i64 0, i64 1, !dbg !4161
  %8 = icmp eq i64 %_6, 1, !dbg !4161
  br i1 %8, label %bb3, label %bb5, !dbg !4161

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !dbg !4162, !range !345
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !4162
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4155, metadata !DIExpression()), !dbg !4163
; call core::str::iter::Chars::as_str
  %9 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h676e0f9eaa5200d8E({ i8*, i8* }* align 8 dereferenceable(16) %chars), !dbg !4164
  %_11.0 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !4164
  %_11.1 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !4164
  br label %bb4, !dbg !4164

bb5:                                              ; preds = %bb2
  %10 = bitcast %"core::option::Option<(char, &str)>"* %0 to i32*, !dbg !4165
  store i32 1114112, i32* %10, align 8, !dbg !4165
  br label %bb6, !dbg !4166

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !4167

bb4:                                              ; preds = %bb3
  %11 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8 to i32*, !dbg !4168
  store i32 %ch, i32* %11, align 8, !dbg !4168
  %12 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8, i32 0, i32 2, !dbg !4168
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !4168
  store [0 x i8]* %_11.0, [0 x i8]** %13, align 8, !dbg !4168
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !4168
  store i64 %_11.1, i64* %14, align 8, !dbg !4168
  %15 = bitcast %"core::option::Option<(char, &str)>"* %0 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4169
  %16 = bitcast %"core::option::Option<(char, &str)>::Some"* %15 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4169
  %17 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %16 to i8*, !dbg !4169
  %18 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8 to i8*, !dbg !4169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !4169
  br label %bb6, !dbg !4166
}

; <f32 as num_traits::Num>::from_str_radix::pow
; Function Attrs: nounwind
define internal float @"_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17he28998159e117e56E"(float %base, i64 %exp) unnamed_addr #1 !dbg !4170 {
start:
  %exp.dbg.spill = alloca i64, align 8
  %base.dbg.spill = alloca float, align 4
  store float %base, float* %base.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata float* %base.dbg.spill, metadata !4174, metadata !DIExpression()), !dbg !4176
  store i64 %exp, i64* %exp.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4175, metadata !DIExpression()), !dbg !4177
  %_4 = trunc i64 %exp to i32, !dbg !4178
; call <f32 as num_traits::float::Float>::powi
  %0 = call float @"_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17ha04dd418e89c7c5fE"(float %base, i32 %_4), !dbg !4179
  br label %bb1, !dbg !4179

bb1:                                              ; preds = %start
  ret float %0, !dbg !4180
}

; <f64 as num_traits::Num>::from_str_radix
; Function Attrs: nounwind
define i128 @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix17ha98c96c1bbf9a4e7E"([0 x i8]* nonnull align 1 %0, i64 %1, i32 %radix) unnamed_addr #1 !dbg !4181 {
start:
  %2 = alloca i128, align 8
  %3 = alloca i128, align 8
  %exp.dbg.spill27 = alloca i64, align 8
  %exp.dbg.spill = alloca i64, align 8
  %is_positive.dbg.spill24 = alloca i8, align 1
  %4 = alloca i128, align 8
  %src.dbg.spill22 = alloca { [0 x i8]*, i64 }, align 8
  %5 = alloca i128, align 8
  %src.dbg.spill19 = alloca { [0 x i8]*, i64 }, align 8
  %6 = alloca i128, align 8
  %src.dbg.spill16 = alloca { [0 x i8]*, i64 }, align 8
  %offset.dbg.spill = alloca i64, align 8
  %c.dbg.spill15 = alloca i32, align 4
  %digit.dbg.spill13 = alloca i32, align 4
  %c.dbg.spill11 = alloca i32, align 4
  %i.dbg.spill10 = alloca i64, align 8
  %__next.dbg.spill9 = alloca { i64, i32 }, align 8
  %val.dbg.spill8 = alloca { i64, i32 }, align 8
  %digit.dbg.spill = alloca i32, align 4
  %c.dbg.spill = alloca i32, align 4
  %i.dbg.spill = alloca i64, align 8
  %__next.dbg.spill = alloca { i64, i32 }, align 8
  %val.dbg.spill = alloca { i64, i32 }, align 8
  %src.dbg.spill5 = alloca { [0 x i8]*, i64 }, align 8
  %is_positive.dbg.spill = alloca i8, align 1
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %radix.dbg.spill = alloca i32, align 4
  %_208 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_206 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, align 8
  %_204 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_202 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_199 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_195 = alloca %"core::option::Option<(char, &str)>", align 8
  %_194 = alloca { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, align 8
  %exp2 = alloca %"core::result::Result<usize, core::num::ParseIntError>", align 8
  %_190 = alloca i64, align 8
  %base = alloca double, align 8
  %exp = alloca double, align 8
  %_173 = alloca { i32, i64 }, align 8
  %_172 = alloca { i32, i64 }, align 8
  %_165 = alloca i8, align 1
  %_160 = alloca i8, align 1
  %_148 = alloca double, align 8
  %_140 = alloca { i32, i32 }, align 4
  %_132 = alloca { i64, i32 }, align 8
  %iter1 = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  %power = alloca double, align 8
  %_119 = alloca { i32, i64 }, align 8
  %_118 = alloca { i32, i64 }, align 8
  %_105 = alloca i8, align 1
  %_94 = alloca i8, align 1
  %_88 = alloca i8, align 1
  %_83 = alloca i8, align 1
  %_64 = alloca { i32, i32 }, align 4
  %_56 = alloca { i64, i32 }, align 8
  %iter = alloca %"core::iter::Enumerate<core::str::Chars>"*, align 8
  %exp_info = alloca { i32, i64 }, align 8
  %cs = alloca %"core::iter::Enumerate<core::str::Chars>", align 8
  %prev_sig = alloca double, align 8
  %sig = alloca double, align 8
  %_37 = alloca %"core::option::Option<(char, &str)>", align 8
  %_36 = alloca { i8, [7 x i8], { [0 x i8]*, i64 } }, align 8
  %_17 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_6 = alloca i64*, align 8
  %_4 = alloca %"core::result::Result<f64, core::num::ParseFloatError>", align 8
  %7 = alloca %"core::result::Result<f64, ParseFloatError>", align 8
  %src = alloca { [0 x i8]*, i64 }, align 8
  %8 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0
  store [0 x i8]* %0, [0 x i8]** %8, align 8
  %9 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1
  store i64 %1, i64* %9, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src, metadata !4185, metadata !DIExpression()), !dbg !4244
  store i32 %radix, i32* %radix.dbg.spill, align 4
  call void @llvm.dbg.declare(metadata i32* %radix.dbg.spill, metadata !4186, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.declare(metadata double* %sig, metadata !4192, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata double* %prev_sig, metadata !4194, metadata !DIExpression()), !dbg !4247
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"* %cs, metadata !4196, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.declare(metadata { i32, i64 }* %exp_info, metadata !4198, metadata !DIExpression()), !dbg !4249
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %iter, metadata !4200, metadata !DIExpression()), !dbg !4250
  call void @llvm.dbg.declare(metadata double* %power, metadata !4211, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata %"core::iter::Enumerate<core::str::Chars>"** %iter1, metadata !4213, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.declare(metadata double* %exp, metadata !4224, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.declare(metadata double* %base, metadata !4229, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.declare(metadata %"core::result::Result<usize, core::num::ParseIntError>"* %exp2, metadata !4235, metadata !DIExpression()), !dbg !4255
  %10 = icmp eq i32 %radix, 10, !dbg !4256
  br i1 %10, label %bb1, label %bb3, !dbg !4256

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4257
  %_5.0 = load [0 x i8]*, [0 x i8]** %11, align 8, !dbg !4257, !nonnull !4
  %12 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4257
  %_5.1 = load i64, i64* %12, align 8, !dbg !4257
; call core::str::<impl str>::parse
  %13 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17haddabf03b8561c9cE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !4257
  store i128 %13, i128* %3, align 8, !dbg !4257
  %14 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %_4 to i8*, !dbg !4257
  %15 = bitcast i128* %3 to i8*, !dbg !4257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 16, i1 false), !dbg !4257
  br label %bb2, !dbg !4257

bb3:                                              ; preds = %start
  %16 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4258
  %_10.0 = load [0 x i8]*, [0 x i8]** %16, align 8, !dbg !4258, !nonnull !4
  %17 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4258
  %_10.1 = load i64, i64* %17, align 8, !dbg !4258
; call num_traits::str_to_ascii_lower_eq_str
  %_9 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_10.0, i64 %_10.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2976 to [0 x i8]*), i64 3), !dbg !4259
  br label %bb7, !dbg !4259

bb7:                                              ; preds = %bb3
  br i1 %_9, label %bb4, label %bb5, !dbg !4259

bb5:                                              ; preds = %bb7
  %18 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4260
  %_14.0 = load [0 x i8]*, [0 x i8]** %18, align 8, !dbg !4260, !nonnull !4
  %19 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4260
  %_14.1 = load i64, i64* %19, align 8, !dbg !4260
; call num_traits::str_to_ascii_lower_eq_str
  %_13 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_14.0, i64 %_14.1, [0 x i8]* nonnull align 1 bitcast (<{ [8 x i8] }>* @alloc2977 to [0 x i8]*), i64 8), !dbg !4261
  br label %bb8, !dbg !4261

bb4:                                              ; preds = %bb7
  store i8 1, i8* %_8, align 1, !dbg !4259
  br label %bb6, !dbg !4259

bb6:                                              ; preds = %bb8, %bb4
  %20 = load i8, i8* %_8, align 1, !dbg !4259, !range !238
  %21 = trunc i8 %20 to i1, !dbg !4259
  br i1 %21, label %bb9, label %bb10, !dbg !4259

bb8:                                              ; preds = %bb5
  %22 = zext i1 %_13 to i8, !dbg !4259
  store i8 %22, i8* %_8, align 1, !dbg !4259
  br label %bb6, !dbg !4259

bb10:                                             ; preds = %bb6
  %23 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4262
  %_19.0 = load [0 x i8]*, [0 x i8]** %23, align 8, !dbg !4262, !nonnull !4
  %24 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4262
  %_19.1 = load i64, i64* %24, align 8, !dbg !4262
; call num_traits::str_to_ascii_lower_eq_str
  %_18 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_19.0, i64 %_19.1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc2978 to [0 x i8]*), i64 4), !dbg !4263
  br label %bb14, !dbg !4263

bb9:                                              ; preds = %bb6
  %25 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4264
  %26 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %25, i32 0, i32 1, !dbg !4264
  store double 0x7FF0000000000000, double* %26, align 8, !dbg !4264
  %27 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4264
  store i8 0, i8* %27, align 8, !dbg !4264
  br label %bb138, !dbg !4265

bb138:                                            ; preds = %bb2, %bb30, %bb137, %bb119, %bb133, %bb109, %bb102, %bb100, %bb95, %bb73, %bb71, %bb66, %bb61, %bb56, %bb31, %bb22, %bb19, %bb16, %bb9
  %28 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i128*, !dbg !4266
  %29 = load i128, i128* %28, align 8, !dbg !4266
  ret i128 %29, !dbg !4266

bb14:                                             ; preds = %bb10
  br i1 %_18, label %bb11, label %bb12, !dbg !4263

bb12:                                             ; preds = %bb14
  %30 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4267
  %_23.0 = load [0 x i8]*, [0 x i8]** %30, align 8, !dbg !4267, !nonnull !4
  %31 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4267
  %_23.1 = load i64, i64* %31, align 8, !dbg !4267
; call num_traits::str_to_ascii_lower_eq_str
  %_22 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_23.0, i64 %_23.1, [0 x i8]* nonnull align 1 bitcast (<{ [9 x i8] }>* @alloc2979 to [0 x i8]*), i64 9), !dbg !4268
  br label %bb15, !dbg !4268

bb11:                                             ; preds = %bb14
  store i8 1, i8* %_17, align 1, !dbg !4263
  br label %bb13, !dbg !4263

bb13:                                             ; preds = %bb15, %bb11
  %32 = load i8, i8* %_17, align 1, !dbg !4263, !range !238
  %33 = trunc i8 %32 to i1, !dbg !4263
  br i1 %33, label %bb16, label %bb17, !dbg !4263

bb15:                                             ; preds = %bb12
  %34 = zext i1 %_22 to i8, !dbg !4263
  store i8 %34, i8* %_17, align 1, !dbg !4263
  br label %bb13, !dbg !4263

bb17:                                             ; preds = %bb13
  %35 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4269
  %_27.0 = load [0 x i8]*, [0 x i8]** %35, align 8, !dbg !4269, !nonnull !4
  %36 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4269
  %_27.1 = load i64, i64* %36, align 8, !dbg !4269
; call num_traits::str_to_ascii_lower_eq_str
  %_26 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_27.0, i64 %_27.1, [0 x i8]* nonnull align 1 bitcast (<{ [3 x i8] }>* @alloc2980 to [0 x i8]*), i64 3), !dbg !4270
  br label %bb18, !dbg !4270

bb16:                                             ; preds = %bb13
  %37 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4271
  %38 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %37, i32 0, i32 1, !dbg !4271
  store double 0xFFF0000000000000, double* %38, align 8, !dbg !4271
  %39 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4271
  store i8 0, i8* %39, align 8, !dbg !4271
  br label %bb138, !dbg !4272

bb18:                                             ; preds = %bb17
  br i1 %_26, label %bb19, label %bb20, !dbg !4270

bb20:                                             ; preds = %bb18
  %40 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4273
  %_31.0 = load [0 x i8]*, [0 x i8]** %40, align 8, !dbg !4273, !nonnull !4
  %41 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4273
  %_31.1 = load i64, i64* %41, align 8, !dbg !4273
; call num_traits::str_to_ascii_lower_eq_str
  %_30 = call zeroext i1 @_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE([0 x i8]* nonnull align 1 %_31.0, i64 %_31.1, [0 x i8]* nonnull align 1 bitcast (<{ [4 x i8] }>* @alloc2981 to [0 x i8]*), i64 4), !dbg !4274
  br label %bb21, !dbg !4274

bb19:                                             ; preds = %bb18
  %42 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4275
  %43 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %42, i32 0, i32 1, !dbg !4275
  store double 0x7FF8000000000000, double* %43, align 8, !dbg !4275
  %44 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4275
  store i8 0, i8* %44, align 8, !dbg !4275
  br label %bb138, !dbg !4276

bb21:                                             ; preds = %bb20
  br i1 %_30, label %bb22, label %bb23, !dbg !4274

bb23:                                             ; preds = %bb21
  %45 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4277
  %_38.0 = load [0 x i8]*, [0 x i8]** %45, align 8, !dbg !4277, !nonnull !4
  %46 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4277
  %_38.1 = load i64, i64* %46, align 8, !dbg !4277
; call <f64 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h5f449bc64c8d58c9E"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %_37, [0 x i8]* nonnull align 1 %_38.0, i64 %_38.1), !dbg !4278
  br label %bb24, !dbg !4278

bb22:                                             ; preds = %bb21
  %47 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4279
  %48 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %47, i32 0, i32 1, !dbg !4279
  store double 0xFFF8000000000000, double* %48, align 8, !dbg !4279
  %49 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4279
  store i8 0, i8* %49, align 8, !dbg !4279
  br label %bb138, !dbg !4280

bb24:                                             ; preds = %bb23
  %50 = bitcast %"core::option::Option<(char, &str)>"* %_37 to i32*, !dbg !4278
  %51 = load i32, i32* %50, align 8, !dbg !4278, !range !344
  %52 = sub i32 %51, 1114112, !dbg !4278
  %53 = icmp eq i32 %52, 0, !dbg !4278
  %_40 = select i1 %53, i64 0, i64 1, !dbg !4278
  switch i64 %_40, label %bb29 [
    i64 0, label %bb30
    i64 1, label %bb25
  ], !dbg !4281

bb29:                                             ; preds = %bb24
  unreachable, !dbg !4278

bb30:                                             ; preds = %bb24
  %54 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4282
  %55 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %54, i32 0, i32 1, !dbg !4282
  store i8 0, i8* %55, align 1, !dbg !4282
  %56 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4282
  store i8 1, i8* %56, align 8, !dbg !4282
  br label %bb138, !dbg !4283

bb25:                                             ; preds = %bb24
  %57 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4281
  %58 = bitcast %"core::option::Option<(char, &str)>::Some"* %57 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4281
  %59 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %58 to i32*, !dbg !4281
  %60 = load i32, i32* %59, align 8, !dbg !4281, !range !345
  %61 = icmp eq i32 %60, 45, !dbg !4281
  br i1 %61, label %bb26, label %bb28, !dbg !4281

bb26:                                             ; preds = %bb25
  %62 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4284
  %63 = bitcast %"core::option::Option<(char, &str)>::Some"* %62 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4284
  %64 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %63, i32 0, i32 2, !dbg !4284
  %65 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %64, i32 0, i32 0, !dbg !4284
  %66 = load [0 x i8]*, [0 x i8]** %65, align 8, !dbg !4284, !nonnull !4
  %67 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %64, i32 0, i32 1, !dbg !4284
  %68 = load i64, i64* %67, align 8, !dbg !4284
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_39 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb406591fb252ecfaE"([0 x i8]* nonnull align 1 %66, i64 %68, [0 x i8]* nonnull align 1 getelementptr inbounds (<{ [0 x i8] }>, <{ [0 x i8] }>* @alloc2982, i32 0, i32 0), i64 0), !dbg !4284
  br label %bb27, !dbg !4284

bb28:                                             ; preds = %bb25
  %69 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 0, !dbg !4285
  %_43.0 = load [0 x i8]*, [0 x i8]** %69, align 8, !dbg !4285, !nonnull !4
  %70 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src, i32 0, i32 1, !dbg !4285
  %_43.1 = load i64, i64* %70, align 8, !dbg !4285
  %71 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4286
  store i8 1, i8* %71, align 8, !dbg !4286
  %72 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4286
  %73 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 0, !dbg !4286
  store [0 x i8]* %_43.0, [0 x i8]** %73, align 8, !dbg !4286
  %74 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %72, i32 0, i32 1, !dbg !4286
  store i64 %_43.1, i64* %74, align 8, !dbg !4286
  br label %bb33, !dbg !4287

bb33:                                             ; preds = %bb32, %bb28
  %75 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4288
  %76 = load i8, i8* %75, align 8, !dbg !4288, !range !238
  %is_positive = trunc i8 %76 to i1, !dbg !4288
  %77 = zext i1 %is_positive to i8, !dbg !4288
  store i8 %77, i8* %is_positive.dbg.spill, align 1, !dbg !4288
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill, metadata !4187, metadata !DIExpression()), !dbg !4289
  %78 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4290
  %79 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 0, !dbg !4290
  %src.03 = load [0 x i8]*, [0 x i8]** %79, align 8, !dbg !4290, !nonnull !4
  %80 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %78, i32 0, i32 1, !dbg !4290
  %src.14 = load i64, i64* %80, align 8, !dbg !4290
  %81 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 0, !dbg !4290
  store [0 x i8]* %src.03, [0 x i8]** %81, align 8, !dbg !4290
  %82 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill5, i32 0, i32 1, !dbg !4290
  store i64 %src.14, i64* %82, align 8, !dbg !4290
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill5, metadata !4189, metadata !DIExpression()), !dbg !4291
  br i1 %is_positive, label %bb34, label %bb35, !dbg !4292

bb27:                                             ; preds = %bb26
  br i1 %_39, label %bb31, label %bb32, !dbg !4284

bb32:                                             ; preds = %bb27
  %83 = bitcast %"core::option::Option<(char, &str)>"* %_37 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4293
  %84 = bitcast %"core::option::Option<(char, &str)>::Some"* %83 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4293
  %85 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %84, i32 0, i32 2, !dbg !4293
  %86 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 0, !dbg !4293
  %src.0 = load [0 x i8]*, [0 x i8]** %86, align 8, !dbg !4293, !nonnull !4
  %87 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %85, i32 0, i32 1, !dbg !4293
  %src.1 = load i64, i64* %87, align 8, !dbg !4293
  %88 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0, !dbg !4293
  store [0 x i8]* %src.0, [0 x i8]** %88, align 8, !dbg !4293
  %89 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1, !dbg !4293
  store i64 %src.1, i64* %89, align 8, !dbg !4293
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4190, metadata !DIExpression()), !dbg !4294
  %90 = bitcast { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36 to i8*, !dbg !4295
  store i8 0, i8* %90, align 8, !dbg !4295
  %91 = getelementptr inbounds { i8, [7 x i8], { [0 x i8]*, i64 } }, { i8, [7 x i8], { [0 x i8]*, i64 } }* %_36, i32 0, i32 2, !dbg !4295
  %92 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 0, !dbg !4295
  store [0 x i8]* %src.0, [0 x i8]** %92, align 8, !dbg !4295
  %93 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %91, i32 0, i32 1, !dbg !4295
  store i64 %src.1, i64* %93, align 8, !dbg !4295
  br label %bb33, !dbg !4296

bb31:                                             ; preds = %bb27
  %94 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4297
  %95 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %94, i32 0, i32 1, !dbg !4297
  store i8 0, i8* %95, align 1, !dbg !4297
  %96 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4297
  store i8 1, i8* %96, align 8, !dbg !4297
  br label %bb138, !dbg !4298

bb35:                                             ; preds = %bb33
  store double -0.000000e+00, double* %sig, align 8, !dbg !4299
  br label %bb36, !dbg !4300

bb34:                                             ; preds = %bb33
  store double 0.000000e+00, double* %sig, align 8, !dbg !4301
  br label %bb36, !dbg !4300

bb36:                                             ; preds = %bb35, %bb34
  %97 = load double, double* %sig, align 8, !dbg !4302
  store double %97, double* %prev_sig, align 8, !dbg !4302
; call core::str::<impl str>::chars
  %98 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE"([0 x i8]* nonnull align 1 %src.03, i64 %src.14), !dbg !4303
  %_48.0 = extractvalue { i8*, i8* } %98, 0, !dbg !4303
  %_48.1 = extractvalue { i8*, i8* } %98, 1, !dbg !4303
  br label %bb37, !dbg !4303

bb37:                                             ; preds = %bb36
; call core::iter::traits::iterator::Iterator::enumerate
  call void @_ZN4core4iter6traits8iterator8Iterator9enumerate17h97135b2391b53e59E(%"core::iter::Enumerate<core::str::Chars>"* noalias nocapture sret(%"core::iter::Enumerate<core::str::Chars>") dereferenceable(24) %cs, i8* nonnull %_48.0, i8* %_48.1), !dbg !4303
  br label %bb38, !dbg !4303

bb38:                                             ; preds = %bb37
  %99 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4304
  store i32 1114112, i32* %99, align 8, !dbg !4304
; call core::iter::traits::iterator::Iterator::by_ref
  %_52 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %cs), !dbg !4305
  br label %bb39, !dbg !4305

bb39:                                             ; preds = %bb38
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_51 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %_52), !dbg !4305
  br label %bb40, !dbg !4305

bb40:                                             ; preds = %bb39
  store %"core::iter::Enumerate<core::str::Chars>"* %_51, %"core::iter::Enumerate<core::str::Chars>"** %iter, align 8, !dbg !4305
  br label %bb41, !dbg !4306

bb41:                                             ; preds = %bb72, %bb40
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %100 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E"(%"core::iter::Enumerate<core::str::Chars>"** align 8 dereferenceable(8) %iter), !dbg !4307
  store { i64, i32 } %100, { i64, i32 }* %_56, align 8, !dbg !4307
  br label %bb42, !dbg !4307

bb42:                                             ; preds = %bb41
  %101 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 1, !dbg !4307
  %102 = load i32, i32* %101, align 8, !dbg !4307, !range !344
  %103 = sub i32 %102, 1114112, !dbg !4307
  %104 = icmp eq i32 %103, 0, !dbg !4307
  %_59 = select i1 %104, i64 0, i64 1, !dbg !4307
  switch i64 %_59, label %bb43 [
    i64 0, label %bb76
    i64 1, label %bb44
  ], !dbg !4307

bb43:                                             ; preds = %bb42
  unreachable, !dbg !4307

bb76:                                             ; preds = %bb75, %bb46, %bb42
; call core::option::Option<T>::is_none
  %_124 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h1e3be241a57d2d6aE"({ i32, i64 }* align 8 dereferenceable(16) %exp_info), !dbg !4308
  br label %bb77, !dbg !4308

bb44:                                             ; preds = %bb42
  %105 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 0, !dbg !4309
  %val.0 = load i64, i64* %105, align 8, !dbg !4309
  %106 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_56, i32 0, i32 1, !dbg !4309
  %val.1 = load i32, i32* %106, align 8, !dbg !4309, !range !345
  %107 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill, i32 0, i32 0, !dbg !4309
  store i64 %val.0, i64* %107, align 8, !dbg !4309
  %108 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill, i32 0, i32 1, !dbg !4309
  store i32 %val.1, i32* %108, align 8, !dbg !4309
  call void @llvm.dbg.declare(metadata { i64, i32 }* %val.dbg.spill, metadata !4204, metadata !DIExpression()), !dbg !4310
  %109 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill, i32 0, i32 0, !dbg !4310
  store i64 %val.0, i64* %109, align 8, !dbg !4310
  %110 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill, i32 0, i32 1, !dbg !4310
  store i32 %val.1, i32* %110, align 8, !dbg !4310
  call void @llvm.dbg.declare(metadata { i64, i32 }* %__next.dbg.spill, metadata !4202, metadata !DIExpression()), !dbg !4307
  store i64 %val.0, i64* %i.dbg.spill, align 8, !dbg !4311
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill, metadata !4206, metadata !DIExpression()), !dbg !4312
  store i32 %val.1, i32* %c.dbg.spill, align 4, !dbg !4313
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill, metadata !4208, metadata !DIExpression()), !dbg !4314
; call core::char::methods::<impl char>::to_digit
  %111 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E"(i32 %val.1, i32 %radix), !dbg !4315
  store { i32, i32 } %111, { i32, i32 }* %_64, align 4, !dbg !4315
  br label %bb45, !dbg !4315

bb45:                                             ; preds = %bb44
  %112 = bitcast { i32, i32 }* %_64 to i32*, !dbg !4315
  %113 = load i32, i32* %112, align 4, !dbg !4315, !range !1207
  %_67 = zext i32 %113 to i64, !dbg !4315
  switch i64 %_67, label %bb47 [
    i64 0, label %bb46
    i64 1, label %bb48
  ], !dbg !4316

bb47:                                             ; preds = %bb45
  unreachable, !dbg !4315

bb46:                                             ; preds = %bb45
  switch i32 %val.1, label %bb73 [
    i32 101, label %bb74
    i32 69, label %bb74
    i32 112, label %bb74
    i32 80, label %bb74
    i32 46, label %bb76
  ], !dbg !4317

bb48:                                             ; preds = %bb45
  %114 = bitcast { i32, i32 }* %_64 to %"core::option::Option<u32>::Some"*, !dbg !4318
  %115 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %114, i32 0, i32 1, !dbg !4318
  %digit = load i32, i32* %115, align 4, !dbg !4318
  store i32 %digit, i32* %digit.dbg.spill, align 4, !dbg !4318
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill, metadata !4209, metadata !DIExpression()), !dbg !4319
  %_69 = load double, double* %sig, align 8, !dbg !4320
  %_70 = uitofp i32 %radix to double, !dbg !4321
  %116 = fmul double %_69, %_70, !dbg !4322
  store double %116, double* %sig, align 8, !dbg !4322
  br i1 %is_positive, label %bb49, label %bb50, !dbg !4323

bb50:                                             ; preds = %bb48
  %_77 = load double, double* %sig, align 8, !dbg !4324
  %_79 = zext i32 %digit to i64, !dbg !4325
  %_78 = sitofp i64 %_79 to double, !dbg !4326
  %117 = fsub double %_77, %_78, !dbg !4327
  store double %117, double* %sig, align 8, !dbg !4327
  br label %bb51, !dbg !4328

bb49:                                             ; preds = %bb48
  %_73 = load double, double* %sig, align 8, !dbg !4329
  %_75 = zext i32 %digit to i64, !dbg !4330
  %_74 = sitofp i64 %_75 to double, !dbg !4331
  %118 = fadd double %_73, %_74, !dbg !4332
  store double %118, double* %sig, align 8, !dbg !4332
  br label %bb51, !dbg !4328

bb51:                                             ; preds = %bb50, %bb49
  %_82 = load double, double* %prev_sig, align 8, !dbg !4333
  %_81 = fcmp une double %_82, 0.000000e+00, !dbg !4333
  br i1 %_81, label %bb52, label %bb72, !dbg !4333

bb72:                                             ; preds = %bb70, %bb51
  %_117 = load double, double* %sig, align 8, !dbg !4334
  store double %_117, double* %prev_sig, align 8, !dbg !4335
  br label %bb41, !dbg !4306

bb52:                                             ; preds = %bb51
  br i1 %is_positive, label %bb54, label %bb53, !dbg !4336

bb53:                                             ; preds = %bb52
  store i8 0, i8* %_83, align 1, !dbg !4336
  br label %bb55, !dbg !4336

bb54:                                             ; preds = %bb52
  %_86 = load double, double* %sig, align 8, !dbg !4337
  %_87 = load double, double* %prev_sig, align 8, !dbg !4338
  %_85 = fcmp ole double %_86, %_87, !dbg !4337
  %119 = zext i1 %_85 to i8, !dbg !4336
  store i8 %119, i8* %_83, align 1, !dbg !4336
  br label %bb55, !dbg !4336

bb55:                                             ; preds = %bb53, %bb54
  %120 = load i8, i8* %_83, align 1, !dbg !4336, !range !238
  %121 = trunc i8 %120 to i1, !dbg !4336
  br i1 %121, label %bb56, label %bb57, !dbg !4336

bb57:                                             ; preds = %bb55
  %_89 = xor i1 %is_positive, true, !dbg !4339
  br i1 %_89, label %bb59, label %bb58, !dbg !4339

bb56:                                             ; preds = %bb55
  %122 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4340
  %123 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %122, i32 0, i32 1, !dbg !4340
  store double 0x7FF0000000000000, double* %123, align 8, !dbg !4340
  %124 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4340
  store i8 0, i8* %124, align 8, !dbg !4340
  br label %bb138, !dbg !4341

bb58:                                             ; preds = %bb57
  store i8 0, i8* %_88, align 1, !dbg !4339
  br label %bb60, !dbg !4339

bb59:                                             ; preds = %bb57
  %_92 = load double, double* %sig, align 8, !dbg !4342
  %_93 = load double, double* %prev_sig, align 8, !dbg !4343
  %_91 = fcmp oge double %_92, %_93, !dbg !4342
  %125 = zext i1 %_91 to i8, !dbg !4339
  store i8 %125, i8* %_88, align 1, !dbg !4339
  br label %bb60, !dbg !4339

bb60:                                             ; preds = %bb58, %bb59
  %126 = load i8, i8* %_88, align 1, !dbg !4339, !range !238
  %127 = trunc i8 %126 to i1, !dbg !4339
  br i1 %127, label %bb61, label %bb62, !dbg !4339

bb62:                                             ; preds = %bb60
  br i1 %is_positive, label %bb64, label %bb63, !dbg !4344

bb61:                                             ; preds = %bb60
  %128 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4345
  %129 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %128, i32 0, i32 1, !dbg !4345
  store double 0xFFF0000000000000, double* %129, align 8, !dbg !4345
  %130 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4345
  store i8 0, i8* %130, align 8, !dbg !4345
  br label %bb138, !dbg !4341

bb63:                                             ; preds = %bb62
  store i8 0, i8* %_94, align 1, !dbg !4344
  br label %bb65, !dbg !4344

bb64:                                             ; preds = %bb62
  %_97 = load double, double* %prev_sig, align 8, !dbg !4346
  %_100 = load double, double* %sig, align 8, !dbg !4347
  %_101 = uitofp i32 %digit to double, !dbg !4348
  %_99 = fsub double %_100, %_101, !dbg !4349
  %_103 = uitofp i32 %radix to double, !dbg !4350
  %_98 = fdiv double %_99, %_103, !dbg !4349
  %_96 = fcmp une double %_97, %_98, !dbg !4351
  %131 = zext i1 %_96 to i8, !dbg !4344
  store i8 %131, i8* %_94, align 1, !dbg !4344
  br label %bb65, !dbg !4344

bb65:                                             ; preds = %bb63, %bb64
  %132 = load i8, i8* %_94, align 1, !dbg !4344, !range !238
  %133 = trunc i8 %132 to i1, !dbg !4344
  br i1 %133, label %bb66, label %bb67, !dbg !4344

bb67:                                             ; preds = %bb65
  %_106 = xor i1 %is_positive, true, !dbg !4352
  br i1 %_106, label %bb69, label %bb68, !dbg !4352

bb66:                                             ; preds = %bb65
  %134 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4353
  %135 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %134, i32 0, i32 1, !dbg !4353
  store double 0x7FF0000000000000, double* %135, align 8, !dbg !4353
  %136 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4353
  store i8 0, i8* %136, align 8, !dbg !4353
  br label %bb138, !dbg !4341

bb68:                                             ; preds = %bb67
  store i8 0, i8* %_105, align 1, !dbg !4352
  br label %bb70, !dbg !4352

bb69:                                             ; preds = %bb67
  %_109 = load double, double* %prev_sig, align 8, !dbg !4354
  %_112 = load double, double* %sig, align 8, !dbg !4355
  %_113 = uitofp i32 %digit to double, !dbg !4356
  %_111 = fadd double %_112, %_113, !dbg !4357
  %_115 = uitofp i32 %radix to double, !dbg !4358
  %_110 = fdiv double %_111, %_115, !dbg !4357
  %_108 = fcmp une double %_109, %_110, !dbg !4359
  %137 = zext i1 %_108 to i8, !dbg !4352
  store i8 %137, i8* %_105, align 1, !dbg !4352
  br label %bb70, !dbg !4352

bb70:                                             ; preds = %bb68, %bb69
  %138 = load i8, i8* %_105, align 1, !dbg !4352, !range !238
  %139 = trunc i8 %138 to i1, !dbg !4352
  br i1 %139, label %bb71, label %bb72, !dbg !4352

bb71:                                             ; preds = %bb70
  %140 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4360
  %141 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %140, i32 0, i32 1, !dbg !4360
  store double 0xFFF0000000000000, double* %141, align 8, !dbg !4360
  %142 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4360
  store i8 0, i8* %142, align 8, !dbg !4360
  br label %bb138, !dbg !4341

bb73:                                             ; preds = %bb46
  %143 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4361
  %144 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %143, i32 0, i32 1, !dbg !4361
  store i8 1, i8* %144, align 1, !dbg !4361
  %145 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4361
  store i8 1, i8* %145, align 8, !dbg !4361
  br label %bb138, !dbg !4362

bb74:                                             ; preds = %bb46, %bb46, %bb46, %bb46
  %146 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val.0, i64 1), !dbg !4363
  %_123.0 = extractvalue { i64, i1 } %146, 0, !dbg !4363
  %_123.1 = extractvalue { i64, i1 } %146, 1, !dbg !4363
  %147 = call i1 @llvm.expect.i1(i1 %_123.1, i1 false), !dbg !4363
  br i1 %147, label %panic, label %bb75, !dbg !4363

bb75:                                             ; preds = %bb74
  %148 = bitcast { i32, i64 }* %_119 to i32*, !dbg !4364
  store i32 %val.1, i32* %148, align 8, !dbg !4364
  %149 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 1, !dbg !4364
  store i64 %_123.0, i64* %149, align 8, !dbg !4364
  %150 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 0, !dbg !4365
  %151 = load i32, i32* %150, align 8, !dbg !4365, !range !345
  %152 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_119, i32 0, i32 1, !dbg !4365
  %153 = load i64, i64* %152, align 8, !dbg !4365
  %154 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 0, !dbg !4365
  store i32 %151, i32* %154, align 8, !dbg !4365
  %155 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 1, !dbg !4365
  store i64 %153, i64* %155, align 8, !dbg !4365
  %156 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 0, !dbg !4366
  %157 = load i32, i32* %156, align 8, !dbg !4366, !range !344
  %158 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_118, i32 0, i32 1, !dbg !4366
  %159 = load i64, i64* %158, align 8, !dbg !4366
  %160 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4366
  store i32 %157, i32* %160, align 8, !dbg !4366
  %161 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4366
  store i64 %159, i64* %161, align 8, !dbg !4366
  br label %bb76, !dbg !4367

panic:                                            ; preds = %bb74
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4363
  unreachable, !dbg !4363

bb77:                                             ; preds = %bb76
  br i1 %_124, label %bb78, label %bb105, !dbg !4308

bb105:                                            ; preds = %bb104, %bb82, %bb77
  %162 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4368
  %163 = load i32, i32* %162, align 8, !dbg !4368, !range !344
  %164 = sub i32 %163, 1114112, !dbg !4368
  %165 = icmp eq i32 %164, 0, !dbg !4368
  %_179 = select i1 %165, i64 0, i64 1, !dbg !4368
  switch i64 %_179, label %bb107 [
    i64 0, label %bb106
    i64 1, label %bb108
  ], !dbg !4369

bb78:                                             ; preds = %bb77
  store double 1.000000e+00, double* %power, align 8, !dbg !4370
; call core::iter::traits::iterator::Iterator::by_ref
  %_128 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %cs), !dbg !4371
  br label %bb79, !dbg !4371

bb79:                                             ; preds = %bb78
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %_127 = call align 8 dereferenceable(24) %"core::iter::Enumerate<core::str::Chars>"* @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE"(%"core::iter::Enumerate<core::str::Chars>"* align 8 dereferenceable(24) %_128), !dbg !4371
  br label %bb80, !dbg !4371

bb80:                                             ; preds = %bb79
  store %"core::iter::Enumerate<core::str::Chars>"* %_127, %"core::iter::Enumerate<core::str::Chars>"** %iter1, align 8, !dbg !4371
  br label %bb81, !dbg !4372

bb81:                                             ; preds = %bb101, %bb80
; call <&mut I as core::iter::traits::iterator::Iterator>::next
  %166 = call { i64, i32 } @"_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E"(%"core::iter::Enumerate<core::str::Chars>"** align 8 dereferenceable(8) %iter1), !dbg !4373
  store { i64, i32 } %166, { i64, i32 }* %_132, align 8, !dbg !4373
  br label %bb82, !dbg !4373

bb82:                                             ; preds = %bb81
  %167 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 1, !dbg !4373
  %168 = load i32, i32* %167, align 8, !dbg !4373, !range !344
  %169 = sub i32 %168, 1114112, !dbg !4373
  %170 = icmp eq i32 %169, 0, !dbg !4373
  %_135 = select i1 %170, i64 0, i64 1, !dbg !4373
  switch i64 %_135, label %bb83 [
    i64 0, label %bb105
    i64 1, label %bb84
  ], !dbg !4373

bb83:                                             ; preds = %bb82
  unreachable, !dbg !4373

bb84:                                             ; preds = %bb82
  %171 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 0, !dbg !4374
  %val.06 = load i64, i64* %171, align 8, !dbg !4374
  %172 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %_132, i32 0, i32 1, !dbg !4374
  %val.17 = load i32, i32* %172, align 8, !dbg !4374, !range !345
  %173 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill8, i32 0, i32 0, !dbg !4374
  store i64 %val.06, i64* %173, align 8, !dbg !4374
  %174 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %val.dbg.spill8, i32 0, i32 1, !dbg !4374
  store i32 %val.17, i32* %174, align 8, !dbg !4374
  call void @llvm.dbg.declare(metadata { i64, i32 }* %val.dbg.spill8, metadata !4217, metadata !DIExpression()), !dbg !4375
  %175 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill9, i32 0, i32 0, !dbg !4375
  store i64 %val.06, i64* %175, align 8, !dbg !4375
  %176 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %__next.dbg.spill9, i32 0, i32 1, !dbg !4375
  store i32 %val.17, i32* %176, align 8, !dbg !4375
  call void @llvm.dbg.declare(metadata { i64, i32 }* %__next.dbg.spill9, metadata !4215, metadata !DIExpression()), !dbg !4373
  store i64 %val.06, i64* %i.dbg.spill10, align 8, !dbg !4376
  call void @llvm.dbg.declare(metadata i64* %i.dbg.spill10, metadata !4219, metadata !DIExpression()), !dbg !4377
  store i32 %val.17, i32* %c.dbg.spill11, align 4, !dbg !4378
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill11, metadata !4221, metadata !DIExpression()), !dbg !4379
; call core::char::methods::<impl char>::to_digit
  %177 = call { i32, i32 } @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E"(i32 %val.17, i32 %radix), !dbg !4380
  store { i32, i32 } %177, { i32, i32 }* %_140, align 4, !dbg !4380
  br label %bb85, !dbg !4380

bb85:                                             ; preds = %bb84
  %178 = bitcast { i32, i32 }* %_140 to i32*, !dbg !4380
  %179 = load i32, i32* %178, align 4, !dbg !4380, !range !1207
  %_143 = zext i32 %179 to i64, !dbg !4380
  switch i64 %_143, label %bb87 [
    i64 0, label %bb86
    i64 1, label %bb88
  ], !dbg !4381

bb87:                                             ; preds = %bb85
  unreachable, !dbg !4380

bb86:                                             ; preds = %bb85
  switch i32 %val.17, label %bb102 [
    i32 101, label %bb103
    i32 69, label %bb103
    i32 112, label %bb103
    i32 80, label %bb103
  ], !dbg !4382

bb88:                                             ; preds = %bb85
  %180 = bitcast { i32, i32 }* %_140 to %"core::option::Option<u32>::Some"*, !dbg !4383
  %181 = getelementptr inbounds %"core::option::Option<u32>::Some", %"core::option::Option<u32>::Some"* %180, i32 0, i32 1, !dbg !4383
  %digit12 = load i32, i32* %181, align 4, !dbg !4383
  store i32 %digit12, i32* %digit.dbg.spill13, align 4, !dbg !4383
  call void @llvm.dbg.declare(metadata i32* %digit.dbg.spill13, metadata !4222, metadata !DIExpression()), !dbg !4384
  %_145 = load double, double* %power, align 8, !dbg !4385
  %_146 = uitofp i32 %radix to double, !dbg !4386
  %182 = fdiv double %_145, %_146, !dbg !4387
  store double %182, double* %power, align 8, !dbg !4387
  br i1 %is_positive, label %bb89, label %bb90, !dbg !4388

bb90:                                             ; preds = %bb88
  %_155 = load double, double* %sig, align 8, !dbg !4389
  %_157 = uitofp i32 %digit12 to double, !dbg !4390
  %_159 = load double, double* %power, align 8, !dbg !4391
  %_156 = fmul double %_157, %_159, !dbg !4390
  %183 = fsub double %_155, %_156, !dbg !4389
  store double %183, double* %_148, align 8, !dbg !4389
  br label %bb91, !dbg !4392

bb89:                                             ; preds = %bb88
  %_150 = load double, double* %sig, align 8, !dbg !4393
  %_152 = uitofp i32 %digit12 to double, !dbg !4394
  %_154 = load double, double* %power, align 8, !dbg !4395
  %_151 = fmul double %_152, %_154, !dbg !4394
  %184 = fadd double %_150, %_151, !dbg !4393
  store double %184, double* %_148, align 8, !dbg !4393
  br label %bb91, !dbg !4392

bb91:                                             ; preds = %bb90, %bb89
  %185 = load double, double* %_148, align 8, !dbg !4396
  store double %185, double* %sig, align 8, !dbg !4396
  br i1 %is_positive, label %bb93, label %bb92, !dbg !4397

bb92:                                             ; preds = %bb91
  store i8 0, i8* %_160, align 1, !dbg !4397
  br label %bb94, !dbg !4397

bb93:                                             ; preds = %bb91
  %_163 = load double, double* %sig, align 8, !dbg !4398
  %_164 = load double, double* %prev_sig, align 8, !dbg !4399
  %_162 = fcmp olt double %_163, %_164, !dbg !4398
  %186 = zext i1 %_162 to i8, !dbg !4397
  store i8 %186, i8* %_160, align 1, !dbg !4397
  br label %bb94, !dbg !4397

bb94:                                             ; preds = %bb92, %bb93
  %187 = load i8, i8* %_160, align 1, !dbg !4397, !range !238
  %188 = trunc i8 %187 to i1, !dbg !4397
  br i1 %188, label %bb95, label %bb96, !dbg !4397

bb96:                                             ; preds = %bb94
  %_166 = xor i1 %is_positive, true, !dbg !4400
  br i1 %_166, label %bb98, label %bb97, !dbg !4400

bb95:                                             ; preds = %bb94
  %189 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4401
  %190 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %189, i32 0, i32 1, !dbg !4401
  store double 0x7FF0000000000000, double* %190, align 8, !dbg !4401
  %191 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4401
  store i8 0, i8* %191, align 8, !dbg !4401
  br label %bb138, !dbg !4402

bb97:                                             ; preds = %bb96
  store i8 0, i8* %_165, align 1, !dbg !4400
  br label %bb99, !dbg !4400

bb98:                                             ; preds = %bb96
  %_169 = load double, double* %sig, align 8, !dbg !4403
  %_170 = load double, double* %prev_sig, align 8, !dbg !4404
  %_168 = fcmp ogt double %_169, %_170, !dbg !4403
  %192 = zext i1 %_168 to i8, !dbg !4400
  store i8 %192, i8* %_165, align 1, !dbg !4400
  br label %bb99, !dbg !4400

bb99:                                             ; preds = %bb97, %bb98
  %193 = load i8, i8* %_165, align 1, !dbg !4400, !range !238
  %194 = trunc i8 %193 to i1, !dbg !4400
  br i1 %194, label %bb100, label %bb101, !dbg !4400

bb101:                                            ; preds = %bb99
  %_171 = load double, double* %sig, align 8, !dbg !4405
  store double %_171, double* %prev_sig, align 8, !dbg !4406
  br label %bb81, !dbg !4372

bb100:                                            ; preds = %bb99
  %195 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4407
  %196 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %195, i32 0, i32 1, !dbg !4407
  store double 0xFFF0000000000000, double* %196, align 8, !dbg !4407
  %197 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4407
  store i8 0, i8* %197, align 8, !dbg !4407
  br label %bb138, !dbg !4402

bb102:                                            ; preds = %bb86
  %198 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4408
  %199 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %198, i32 0, i32 1, !dbg !4408
  store i8 1, i8* %199, align 1, !dbg !4408
  %200 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4408
  store i8 1, i8* %200, align 8, !dbg !4408
  br label %bb138, !dbg !4409

bb103:                                            ; preds = %bb86, %bb86, %bb86, %bb86
  %201 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val.06, i64 1), !dbg !4410
  %_177.0 = extractvalue { i64, i1 } %201, 0, !dbg !4410
  %_177.1 = extractvalue { i64, i1 } %201, 1, !dbg !4410
  %202 = call i1 @llvm.expect.i1(i1 %_177.1, i1 false), !dbg !4410
  br i1 %202, label %panic14, label %bb104, !dbg !4410

bb104:                                            ; preds = %bb103
  %203 = bitcast { i32, i64 }* %_173 to i32*, !dbg !4411
  store i32 %val.17, i32* %203, align 8, !dbg !4411
  %204 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 1, !dbg !4411
  store i64 %_177.0, i64* %204, align 8, !dbg !4411
  %205 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 0, !dbg !4412
  %206 = load i32, i32* %205, align 8, !dbg !4412, !range !345
  %207 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_173, i32 0, i32 1, !dbg !4412
  %208 = load i64, i64* %207, align 8, !dbg !4412
  %209 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 0, !dbg !4412
  store i32 %206, i32* %209, align 8, !dbg !4412
  %210 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 1, !dbg !4412
  store i64 %208, i64* %210, align 8, !dbg !4412
  %211 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 0, !dbg !4413
  %212 = load i32, i32* %211, align 8, !dbg !4413, !range !344
  %213 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %_172, i32 0, i32 1, !dbg !4413
  %214 = load i64, i64* %213, align 8, !dbg !4413
  %215 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 0, !dbg !4413
  store i32 %212, i32* %215, align 8, !dbg !4413
  %216 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4413
  store i64 %214, i64* %216, align 8, !dbg !4413
  br label %bb105, !dbg !4414

panic14:                                          ; preds = %bb103
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1 bitcast ([28 x i8]* @str.0 to [0 x i8]*), i64 28, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4410
  unreachable, !dbg !4410

bb107:                                            ; preds = %bb105
  unreachable, !dbg !4368

bb106:                                            ; preds = %bb105
  store double 1.000000e+00, double* %exp, align 8, !dbg !4415
  br label %bb137, !dbg !4415

bb108:                                            ; preds = %bb105
  %217 = bitcast { i32, i64 }* %exp_info to i32*, !dbg !4416
  %c = load i32, i32* %217, align 8, !dbg !4416, !range !345
  store i32 %c, i32* %c.dbg.spill15, align 4, !dbg !4416
  call void @llvm.dbg.declare(metadata i32* %c.dbg.spill15, metadata !4226, metadata !DIExpression()), !dbg !4417
  %218 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %exp_info, i32 0, i32 1, !dbg !4418
  %offset = load i64, i64* %218, align 8, !dbg !4418
  store i64 %offset, i64* %offset.dbg.spill, align 8, !dbg !4418
  call void @llvm.dbg.declare(metadata i64* %offset.dbg.spill, metadata !4228, metadata !DIExpression()), !dbg !4419
  switch i32 %c, label %bb109 [
    i32 69, label %bb111
    i32 101, label %bb112
    i32 80, label %bb114
    i32 112, label %bb115
  ], !dbg !4420

bb109:                                            ; preds = %bb111, %bb112, %bb114, %bb115, %bb108
  %219 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4421
  %220 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %219, i32 0, i32 1, !dbg !4421
  store i8 1, i8* %220, align 1, !dbg !4421
  %221 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4421
  store i8 1, i8* %221, align 8, !dbg !4421
  br label %bb138, !dbg !4422

bb111:                                            ; preds = %bb108
  %222 = icmp eq i32 %radix, 10, !dbg !4423
  br i1 %222, label %bb110, label %bb109, !dbg !4423

bb112:                                            ; preds = %bb108
  %223 = icmp eq i32 %radix, 10, !dbg !4423
  br i1 %223, label %bb110, label %bb109, !dbg !4423

bb114:                                            ; preds = %bb108
  %224 = icmp eq i32 %radix, 16, !dbg !4424
  br i1 %224, label %bb113, label %bb109, !dbg !4424

bb115:                                            ; preds = %bb108
  %225 = icmp eq i32 %radix, 16, !dbg !4424
  br i1 %225, label %bb113, label %bb109, !dbg !4424

bb113:                                            ; preds = %bb114, %bb115
  store double 2.000000e+00, double* %base, align 8, !dbg !4425
  br label %bb116, !dbg !4425

bb116:                                            ; preds = %bb110, %bb113
  store i64 %offset, i64* %_190, align 8, !dbg !4426
  %226 = load i64, i64* %_190, align 8, !dbg !4427
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %227 = call { [0 x i8]*, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb957295e3d336df5E"([0 x i8]* nonnull align 1 %src.03, i64 %src.14, i64 %226, %"core::panic::Location"* align 8 dereferenceable(24) bitcast (<{ i8*, [16 x i8] }>* @alloc2975 to %"core::panic::Location"*)), !dbg !4427
  %_188.0 = extractvalue { [0 x i8]*, i64 } %227, 0, !dbg !4427
  %_188.1 = extractvalue { [0 x i8]*, i64 } %227, 1, !dbg !4427
  br label %bb117, !dbg !4427

bb110:                                            ; preds = %bb111, %bb112
  store double 1.000000e+01, double* %base, align 8, !dbg !4428
  br label %bb116, !dbg !4428

bb117:                                            ; preds = %bb116
  %228 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill16, i32 0, i32 0, !dbg !4429
  store [0 x i8]* %_188.0, [0 x i8]** %228, align 8, !dbg !4429
  %229 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill16, i32 0, i32 1, !dbg !4429
  store i64 %_188.1, i64* %229, align 8, !dbg !4429
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill16, metadata !4231, metadata !DIExpression()), !dbg !4430
; call <f64 as num_traits::Num>::from_str_radix::slice_shift_char
  call void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h5f449bc64c8d58c9E"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %_195, [0 x i8]* nonnull align 1 %_188.0, i64 %_188.1), !dbg !4431
  br label %bb118, !dbg !4431

bb118:                                            ; preds = %bb117
  %230 = bitcast %"core::option::Option<(char, &str)>"* %_195 to i32*, !dbg !4431
  %231 = load i32, i32* %230, align 8, !dbg !4431, !range !344
  %232 = sub i32 %231, 1114112, !dbg !4431
  %233 = icmp eq i32 %232, 0, !dbg !4431
  %_197 = select i1 %233, i64 0, i64 1, !dbg !4431
  switch i64 %_197, label %bb121 [
    i64 0, label %bb119
    i64 1, label %bb120
  ], !dbg !4432

bb121:                                            ; preds = %bb118
  unreachable, !dbg !4431

bb119:                                            ; preds = %bb118
  %234 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4433
  %235 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %234, i32 0, i32 1, !dbg !4433
  store i8 1, i8* %235, align 1, !dbg !4433
  %236 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4433
  store i8 1, i8* %236, align 8, !dbg !4433
  br label %bb138, !dbg !4434

bb120:                                            ; preds = %bb118
  %237 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4432
  %238 = bitcast %"core::option::Option<(char, &str)>::Some"* %237 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4432
  %239 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %238 to i32*, !dbg !4432
  %240 = load i32, i32* %239, align 8, !dbg !4432, !range !345
  switch i32 %240, label %bb126 [
    i32 45, label %bb122
    i32 43, label %bb124
  ], !dbg !4432

bb126:                                            ; preds = %bb120
; call core::str::<impl str>::parse
  %241 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %_188.0, i64 %_188.1), !dbg !4435
  store i128 %241, i128* %6, align 8, !dbg !4435
  %242 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_204 to i8*, !dbg !4435
  %243 = bitcast i128* %6 to i8*, !dbg !4435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* align 8 %243, i64 16, i1 false), !dbg !4435
  br label %bb127, !dbg !4435

bb122:                                            ; preds = %bb120
  %244 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4436
  %245 = bitcast %"core::option::Option<(char, &str)>::Some"* %244 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4436
  %246 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %245, i32 0, i32 2, !dbg !4436
  %247 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %246, i32 0, i32 0, !dbg !4436
  %src.020 = load [0 x i8]*, [0 x i8]** %247, align 8, !dbg !4436, !nonnull !4
  %248 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %246, i32 0, i32 1, !dbg !4436
  %src.121 = load i64, i64* %248, align 8, !dbg !4436
  %249 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill22, i32 0, i32 0, !dbg !4436
  store [0 x i8]* %src.020, [0 x i8]** %249, align 8, !dbg !4436
  %250 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill22, i32 0, i32 1, !dbg !4436
  store i64 %src.121, i64* %250, align 8, !dbg !4436
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill22, metadata !4236, metadata !DIExpression()), !dbg !4437
; call core::str::<impl str>::parse
  %251 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %src.020, i64 %src.121), !dbg !4438
  store i128 %251, i128* %4, align 8, !dbg !4438
  %252 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_199 to i8*, !dbg !4438
  %253 = bitcast i128* %4 to i8*, !dbg !4438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false), !dbg !4438
  br label %bb123, !dbg !4438

bb124:                                            ; preds = %bb120
  %254 = bitcast %"core::option::Option<(char, &str)>"* %_195 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4439
  %255 = bitcast %"core::option::Option<(char, &str)>::Some"* %254 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4439
  %256 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %255, i32 0, i32 2, !dbg !4439
  %257 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %256, i32 0, i32 0, !dbg !4439
  %src.017 = load [0 x i8]*, [0 x i8]** %257, align 8, !dbg !4439, !nonnull !4
  %258 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %256, i32 0, i32 1, !dbg !4439
  %src.118 = load i64, i64* %258, align 8, !dbg !4439
  %259 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill19, i32 0, i32 0, !dbg !4439
  store [0 x i8]* %src.017, [0 x i8]** %259, align 8, !dbg !4439
  %260 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill19, i32 0, i32 1, !dbg !4439
  store i64 %src.118, i64* %260, align 8, !dbg !4439
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill19, metadata !4238, metadata !DIExpression()), !dbg !4440
; call core::str::<impl str>::parse
  %261 = call i128 @"_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE"([0 x i8]* nonnull align 1 %src.017, i64 %src.118), !dbg !4441
  store i128 %261, i128* %5, align 8, !dbg !4441
  %262 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_202 to i8*, !dbg !4441
  %263 = bitcast i128* %5 to i8*, !dbg !4441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 16, i1 false), !dbg !4441
  br label %bb125, !dbg !4441

bb127:                                            ; preds = %bb126
  %264 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4442
  store i8 1, i8* %264, align 8, !dbg !4442
  %265 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4442
  %266 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %265 to i8*, !dbg !4442
  %267 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_204 to i8*, !dbg !4442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %267, i64 16, i1 false), !dbg !4442
  br label %bb128, !dbg !4443

bb128:                                            ; preds = %bb123, %bb125, %bb127
  %268 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4444
  %269 = load i8, i8* %268, align 8, !dbg !4444, !range !238
  %is_positive23 = trunc i8 %269 to i1, !dbg !4444
  %270 = zext i1 %is_positive23 to i8, !dbg !4444
  store i8 %270, i8* %is_positive.dbg.spill24, align 1, !dbg !4444
  call void @llvm.dbg.declare(metadata i8* %is_positive.dbg.spill24, metadata !4233, metadata !DIExpression()), !dbg !4445
  %271 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4446
  %272 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %exp2 to i8*, !dbg !4446
  %273 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %271 to i8*, !dbg !4446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 16, i1 false), !dbg !4446
  %274 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_208 to i8*, !dbg !4447
  %275 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %exp2 to i8*, !dbg !4447
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 16, i1 false), !dbg !4447
  %276 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206 to i8*, !dbg !4448
  %277 = zext i1 %is_positive23 to i8, !dbg !4448
  store i8 %277, i8* %276, align 8, !dbg !4448
  %278 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4448
  %279 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %278 to i8*, !dbg !4448
  %280 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_208 to i8*, !dbg !4448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 16, i1 false), !dbg !4448
  %281 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206 to i8*, !dbg !4449
  %282 = load i8, i8* %281, align 8, !dbg !4449, !range !238
  %283 = trunc i8 %282 to i1, !dbg !4449
  br i1 %283, label %bb129, label %bb131, !dbg !4449

bb125:                                            ; preds = %bb124
  %284 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4450
  store i8 1, i8* %284, align 8, !dbg !4450
  %285 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4450
  %286 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %285 to i8*, !dbg !4450
  %287 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_202 to i8*, !dbg !4450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %287, i64 16, i1 false), !dbg !4450
  br label %bb128, !dbg !4451

bb123:                                            ; preds = %bb122
  %288 = bitcast { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194 to i8*, !dbg !4452
  store i8 0, i8* %288, align 8, !dbg !4452
  %289 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_194, i32 0, i32 2, !dbg !4452
  %290 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %289 to i8*, !dbg !4452
  %291 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %_199 to i8*, !dbg !4452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64 16, i1 false), !dbg !4452
  br label %bb128, !dbg !4453

bb131:                                            ; preds = %bb128
  %292 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4448
  %293 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %292 to i8*, !dbg !4448
  %294 = load i8, i8* %293, align 8, !dbg !4448, !range !238
  %295 = trunc i8 %294 to i1, !dbg !4448
  %_210 = zext i1 %295 to i64, !dbg !4448
  %296 = icmp eq i64 %_210, 0, !dbg !4449
  br i1 %296, label %bb135, label %bb130, !dbg !4449

bb129:                                            ; preds = %bb128
  %297 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4448
  %298 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %297 to i8*, !dbg !4448
  %299 = load i8, i8* %298, align 8, !dbg !4448, !range !238
  %300 = trunc i8 %299 to i1, !dbg !4448
  %_209 = zext i1 %300 to i64, !dbg !4448
  %301 = icmp eq i64 %_209, 0, !dbg !4449
  br i1 %301, label %bb134, label %bb130, !dbg !4449

bb134:                                            ; preds = %bb129
  %302 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4454
  %303 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %302 to %"core::result::Result<usize, core::num::ParseIntError>::Ok"*, !dbg !4454
  %304 = getelementptr inbounds %"core::result::Result<usize, core::num::ParseIntError>::Ok", %"core::result::Result<usize, core::num::ParseIntError>::Ok"* %303, i32 0, i32 1, !dbg !4454
  %exp25 = load i64, i64* %304, align 8, !dbg !4454
  store i64 %exp25, i64* %exp.dbg.spill, align 8, !dbg !4454
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4240, metadata !DIExpression()), !dbg !4455
  %_213 = load double, double* %base, align 8, !dbg !4456
; call <f64 as num_traits::Num>::from_str_radix::pow
  %305 = call double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdb862993927a2550E"(double %_213, i64 %exp25), !dbg !4457
  store double %305, double* %exp, align 8, !dbg !4457
  br label %bb137, !dbg !4457

bb130:                                            ; preds = %bb131, %bb129
  %306 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4448
  %307 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %306 to i8*, !dbg !4448
  %308 = load i8, i8* %307, align 8, !dbg !4448, !range !238
  %309 = trunc i8 %308 to i1, !dbg !4448
  %_211 = zext i1 %309 to i64, !dbg !4448
  %310 = icmp eq i64 %_211, 1, !dbg !4449
  br i1 %310, label %bb133, label %bb132, !dbg !4449

bb137:                                            ; preds = %bb106, %bb136, %bb134
  %_220 = load double, double* %sig, align 8, !dbg !4458
  %_221 = load double, double* %exp, align 8, !dbg !4459
  %_219 = fmul double %_220, %_221, !dbg !4458
  %311 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Ok"*, !dbg !4460
  %312 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Ok", %"core::result::Result<f64, ParseFloatError>::Ok"* %311, i32 0, i32 1, !dbg !4460
  store double %_219, double* %312, align 8, !dbg !4460
  %313 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4460
  store i8 0, i8* %313, align 8, !dbg !4460
  br label %bb138, !dbg !4266

bb135:                                            ; preds = %bb131
  %314 = getelementptr inbounds { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }, { i8, [7 x i8], %"core::result::Result<usize, core::num::ParseIntError>" }* %_206, i32 0, i32 2, !dbg !4461
  %315 = bitcast %"core::result::Result<usize, core::num::ParseIntError>"* %314 to %"core::result::Result<usize, core::num::ParseIntError>::Ok"*, !dbg !4461
  %316 = getelementptr inbounds %"core::result::Result<usize, core::num::ParseIntError>::Ok", %"core::result::Result<usize, core::num::ParseIntError>::Ok"* %315, i32 0, i32 1, !dbg !4461
  %exp26 = load i64, i64* %316, align 8, !dbg !4461
  store i64 %exp26, i64* %exp.dbg.spill27, align 8, !dbg !4461
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill27, metadata !4242, metadata !DIExpression()), !dbg !4462
  %_217 = load double, double* %base, align 8, !dbg !4463
; call <f64 as num_traits::Num>::from_str_radix::pow
  %_216 = call double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdb862993927a2550E"(double %_217, i64 %exp26), !dbg !4464
  br label %bb136, !dbg !4464

bb133:                                            ; preds = %bb130
  %317 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to %"core::result::Result<f64, ParseFloatError>::Err"*, !dbg !4465
  %318 = getelementptr inbounds %"core::result::Result<f64, ParseFloatError>::Err", %"core::result::Result<f64, ParseFloatError>::Err"* %317, i32 0, i32 1, !dbg !4465
  store i8 1, i8* %318, align 1, !dbg !4465
  %319 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4465
  store i8 1, i8* %319, align 8, !dbg !4465
  br label %bb138, !dbg !4466

bb132:                                            ; preds = %bb130
  unreachable, !dbg !4448

bb136:                                            ; preds = %bb135
  %320 = fdiv double 1.000000e+00, %_216, !dbg !4467
  store double %320, double* %exp, align 8, !dbg !4467
  br label %bb137, !dbg !4468

bb2:                                              ; preds = %bb1
  %321 = bitcast i64** %_6 to { [0 x i8]*, i64 }**, !dbg !4469
  store { [0 x i8]*, i64 }* %src, { [0 x i8]*, i64 }** %321, align 8, !dbg !4469
  %322 = bitcast %"core::result::Result<f64, core::num::ParseFloatError>"* %_4 to i128*, !dbg !4257
  %323 = load i128, i128* %322, align 8, !dbg !4257
  %324 = load i64*, i64** %_6, align 8, !dbg !4257, !nonnull !4
; call core::result::Result<T,E>::map_err
  %325 = call i128 @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha43927676a2de699E"(i128 %323, i64* align 8 dereferenceable(16) %324), !dbg !4257
  store i128 %325, i128* %2, align 8, !dbg !4257
  %326 = bitcast %"core::result::Result<f64, ParseFloatError>"* %7 to i8*, !dbg !4257
  %327 = bitcast i128* %2 to i8*, !dbg !4257
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %327, i64 16, i1 false), !dbg !4257
  br label %bb138, !dbg !4257
}

; <f64 as num_traits::Num>::from_str_radix::{{closure}}
; Function Attrs: inlinehint nounwind
define internal zeroext i1 @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h549e94cd41e03766E"(i64* align 8 dereferenceable(16) %_1, i1 zeroext %_2) unnamed_addr #0 !dbg !4470 {
start:
  %_2.dbg.spill = alloca i8, align 1
  %_1.dbg.spill = alloca i64*, align 8
  %_3 = alloca i8, align 1
  %0 = alloca i8, align 1
  store i64* %_1, i64** %_1.dbg.spill, align 8
  %1 = bitcast i64** %_1.dbg.spill to { [0 x i8]*, i64 }**
  %2 = load { [0 x i8]*, i64 }*, { [0 x i8]*, i64 }** %1, align 8, !nonnull !4
  call void @llvm.dbg.declare(metadata i64** %_1.dbg.spill, metadata !4474, metadata !DIExpression(DW_OP_deref)), !dbg !4476
  %3 = zext i1 %_2 to i8
  store i8 %3, i8* %_2.dbg.spill, align 1
  call void @llvm.dbg.declare(metadata i8* %_2.dbg.spill, metadata !4475, metadata !DIExpression()), !dbg !4477
  %4 = bitcast i64* %_1 to { [0 x i8]*, i64 }*, !dbg !4478
  %5 = bitcast i64* %_1 to { [0 x i8]*, i64 }*, !dbg !4478
  %6 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 0, !dbg !4478
  %_5.0 = load [0 x i8]*, [0 x i8]** %6, align 8, !dbg !4478, !nonnull !4
  %7 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %5, i32 0, i32 1, !dbg !4478
  %_5.1 = load i64, i64* %7, align 8, !dbg !4478
; call core::str::<impl str>::is_empty
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hcd0145b4087fba4fE"([0 x i8]* nonnull align 1 %_5.0, i64 %_5.1), !dbg !4478
  br label %bb1, !dbg !4478

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3, !dbg !4478

bb3:                                              ; preds = %bb1
  store i8 1, i8* %_3, align 1, !dbg !4479
  br label %bb4, !dbg !4480

bb2:                                              ; preds = %bb1
  store i8 0, i8* %_3, align 1, !dbg !4481
  br label %bb4, !dbg !4480

bb4:                                              ; preds = %bb3, %bb2
  %8 = load i8, i8* %_3, align 1, !dbg !4482, !range !238
  %9 = trunc i8 %8 to i1, !dbg !4482
  %10 = zext i1 %9 to i8, !dbg !4482
  store i8 %10, i8* %0, align 1, !dbg !4482
  %11 = load i8, i8* %0, align 1, !dbg !4483, !range !238
  %12 = trunc i8 %11 to i1, !dbg !4483
  ret i1 %12, !dbg !4483
}

; <f64 as num_traits::Num>::from_str_radix::slice_shift_char
; Function Attrs: nounwind
define internal void @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h5f449bc64c8d58c9E"(%"core::option::Option<(char, &str)>"* noalias nocapture sret(%"core::option::Option<(char, &str)>") dereferenceable(24) %0, [0 x i8]* nonnull align 1 %src.0, i64 %src.1) unnamed_addr #1 !dbg !4484 {
start:
  %ch.dbg.spill = alloca i32, align 4
  %src.dbg.spill = alloca { [0 x i8]*, i64 }, align 8
  %_8 = alloca { i32, [1 x i32], { [0 x i8]*, i64 } }, align 8
  %_4 = alloca i32, align 4
  %chars = alloca { i8*, i8* }, align 8
  %1 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 0
  store [0 x i8]* %src.0, [0 x i8]** %1, align 8
  %2 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %src.dbg.spill, i32 0, i32 1
  store i64 %src.1, i64* %2, align 8
  call void @llvm.dbg.declare(metadata { [0 x i8]*, i64 }* %src.dbg.spill, metadata !4486, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.declare(metadata { i8*, i8* }* %chars, metadata !4487, metadata !DIExpression()), !dbg !4492
; call core::str::<impl str>::chars
  %3 = call { i8*, i8* } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE"([0 x i8]* nonnull align 1 %src.0, i64 %src.1), !dbg !4493
  store { i8*, i8* } %3, { i8*, i8* }* %chars, align 8, !dbg !4493
  br label %bb1, !dbg !4493

bb1:                                              ; preds = %start
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %4 = call i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb51acee8bd391655E"({ i8*, i8* }* align 8 dereferenceable(16) %chars), !dbg !4494, !range !344
  store i32 %4, i32* %_4, align 4, !dbg !4494
  br label %bb2, !dbg !4494

bb2:                                              ; preds = %bb1
  %5 = load i32, i32* %_4, align 4, !dbg !4495, !range !344
  %6 = sub i32 %5, 1114112, !dbg !4495
  %7 = icmp eq i32 %6, 0, !dbg !4495
  %_6 = select i1 %7, i64 0, i64 1, !dbg !4495
  %8 = icmp eq i64 %_6, 1, !dbg !4495
  br i1 %8, label %bb3, label %bb5, !dbg !4495

bb3:                                              ; preds = %bb2
  %ch = load i32, i32* %_4, align 4, !dbg !4496, !range !345
  store i32 %ch, i32* %ch.dbg.spill, align 4, !dbg !4496
  call void @llvm.dbg.declare(metadata i32* %ch.dbg.spill, metadata !4489, metadata !DIExpression()), !dbg !4497
; call core::str::iter::Chars::as_str
  %9 = call { [0 x i8]*, i64 } @_ZN4core3str4iter5Chars6as_str17h676e0f9eaa5200d8E({ i8*, i8* }* align 8 dereferenceable(16) %chars), !dbg !4498
  %_11.0 = extractvalue { [0 x i8]*, i64 } %9, 0, !dbg !4498
  %_11.1 = extractvalue { [0 x i8]*, i64 } %9, 1, !dbg !4498
  br label %bb4, !dbg !4498

bb5:                                              ; preds = %bb2
  %10 = bitcast %"core::option::Option<(char, &str)>"* %0 to i32*, !dbg !4499
  store i32 1114112, i32* %10, align 8, !dbg !4499
  br label %bb6, !dbg !4500

bb6:                                              ; preds = %bb4, %bb5
  ret void, !dbg !4501

bb4:                                              ; preds = %bb3
  %11 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8 to i32*, !dbg !4502
  store i32 %ch, i32* %11, align 8, !dbg !4502
  %12 = getelementptr inbounds { i32, [1 x i32], { [0 x i8]*, i64 } }, { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8, i32 0, i32 2, !dbg !4502
  %13 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 0, !dbg !4502
  store [0 x i8]* %_11.0, [0 x i8]** %13, align 8, !dbg !4502
  %14 = getelementptr inbounds { [0 x i8]*, i64 }, { [0 x i8]*, i64 }* %12, i32 0, i32 1, !dbg !4502
  store i64 %_11.1, i64* %14, align 8, !dbg !4502
  %15 = bitcast %"core::option::Option<(char, &str)>"* %0 to %"core::option::Option<(char, &str)>::Some"*, !dbg !4503
  %16 = bitcast %"core::option::Option<(char, &str)>::Some"* %15 to { i32, [1 x i32], { [0 x i8]*, i64 } }*, !dbg !4503
  %17 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %16 to i8*, !dbg !4503
  %18 = bitcast { i32, [1 x i32], { [0 x i8]*, i64 } }* %_8 to i8*, !dbg !4503
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false), !dbg !4503
  br label %bb6, !dbg !4500
}

; <f64 as num_traits::Num>::from_str_radix::pow
; Function Attrs: nounwind
define internal double @"_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdb862993927a2550E"(double %base, i64 %exp) unnamed_addr #1 !dbg !4504 {
start:
  %exp.dbg.spill = alloca i64, align 8
  %base.dbg.spill = alloca double, align 8
  store double %base, double* %base.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata double* %base.dbg.spill, metadata !4508, metadata !DIExpression()), !dbg !4510
  store i64 %exp, i64* %exp.dbg.spill, align 8
  call void @llvm.dbg.declare(metadata i64* %exp.dbg.spill, metadata !4509, metadata !DIExpression()), !dbg !4511
  %_4 = trunc i64 %exp to i32, !dbg !4512
; call <f64 as num_traits::float::Float>::powi
  %0 = call double @"_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17h0817970147c1b9b7E"(double %base, i32 %_4), !dbg !4513
  br label %bb1, !dbg !4513

bb1:                                              ; preds = %start
  ret double %0, !dbg !4514
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #2

; Function Attrs: nofree nosync nounwind readnone willreturn
declare i1 @llvm.expect.i1(i1, i1) #4

; core::panicking::panic
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking5panic17h560e3e4b7752857aE([0 x i8]* nonnull align 1, i64, %"core::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core5slice5index26slice_start_index_len_fail17h09af85f858e7356bE(i64, i64, %"core::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; <f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits
; Function Attrs: nounwind
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h97cfb0a3db1092d0E"(i64) unnamed_addr #1

; <f64 as core::num::dec2flt::float::RawFloat>::from_u64_bits
; Function Attrs: nounwind
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17hbeb87971dba26564E"(i64) unnamed_addr #1

; core::num::dec2flt::common::BiasedFp::zero_pow2
; Function Attrs: nounwind
declare { i64, i32 } @_ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h27f36e273a7655ddE(i32) unnamed_addr #1

; core::num::dec2flt::decimal::parse_decimal
; Function Attrs: nounwind
declare void @_ZN4core3num7dec2flt7decimal13parse_decimal17h6f1c7f033d9ec072E(%"core::num::dec2flt::decimal::Decimal"* noalias nocapture sret(%"core::num::dec2flt::decimal::Decimal") dereferenceable(784), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::right_shift
; Function Attrs: nounwind
declare void @_ZN4core3num7dec2flt7decimal7Decimal11right_shift17h186ba9707dffccb9E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784), i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::left_shift
; Function Attrs: nounwind
declare void @_ZN4core3num7dec2flt7decimal7Decimal10left_shift17h1fb9a5e7afe46baaE(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784), i64) unnamed_addr #1

; core::num::dec2flt::decimal::Decimal::round
; Function Attrs: nounwind
declare i64 @_ZN4core3num7dec2flt7decimal7Decimal5round17h43feb4dd3873aaa7E(%"core::num::dec2flt::decimal::Decimal"* align 8 dereferenceable(784)) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core9panicking18panic_bounds_check17h865b4c1c7f870517E(i64, i64, %"core::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest
; Function Attrs: nounwind
declare i64 @_ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17ha83298bc484b1119E([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::num::dec2flt::lemire::compute_product_approx
; Function Attrs: nounwind
declare { i64, i64 } @_ZN4core3num7dec2flt6lemire22compute_product_approx17hab3e1a80d6151252E(i64, i64, i64) unnamed_addr #1

; core::num::dec2flt::lemire::power
; Function Attrs: nounwind
declare i32 @_ZN4core3num7dec2flt6lemire5power17he088a00dd9fef92cE(i32) unnamed_addr #1

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #6

; <f64 as core::num::dec2flt::float::RawFloat>::from_u64
; Function Attrs: nounwind
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4be8590774404ca3E"(i64) unnamed_addr #1

; <f64 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
; Function Attrs: nounwind
declare double @"_ZN59_$LT$f64$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h02354e6c97ec916bE"(i64) unnamed_addr #1

; <f32 as core::num::dec2flt::float::RawFloat>::from_u64
; Function Attrs: nounwind
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417ha4a496047ebe5f0bE"(i64) unnamed_addr #1

; <f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path
; Function Attrs: nounwind
declare float @"_ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h645b46d823563074E"(i64) unnamed_addr #1

; core::num::dec2flt::pfe_empty
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3num7dec2flt9pfe_empty17h7f4ad285f5ad2ae4E() unnamed_addr #1

; core::num::dec2flt::pfe_invalid
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3num7dec2flt11pfe_invalid17h82b98a82ae1c4825E() unnamed_addr #1

; core::num::dec2flt::parse::parse_number
; Function Attrs: nounwind
declare void @_ZN4core3num7dec2flt5parse12parse_number17h12280348b0d629d1E(%"core::option::Option<core::num::dec2flt::number::Number>"* noalias nocapture sret(%"core::option::Option<core::num::dec2flt::number::Number>") dereferenceable(24), [0 x i8]* nonnull align 1, i64, i1 zeroext) unnamed_addr #1

; core::num::<impl core::str::traits::FromStr for usize>::from_str
; Function Attrs: nounwind
declare i128 @"_ZN4core3num62_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$usize$GT$8from_str17hc82c9a7f4630bbbdE"([0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nounwind
declare void @_ZN4core3str16slice_error_fail17h4dd208e08c39fbe7E([0 x i8]* nonnull align 1, i64, i64, i64, %"core::panic::Location"* align 8 dereferenceable(24)) unnamed_addr #5

; Function Attrs: nounwind
declare signext i32 @memcmp(i8*, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i16, i1 } @llvm.ssub.with.overflow.i16(i16, i16) #2

; <str as core::fmt::Display>::fmt
; Function Attrs: nounwind
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h22e9b1a86f36eac1E"([0 x i8]* nonnull align 1, i64, %"core::fmt::Formatter"* align 8 dereferenceable(64)) unnamed_addr #1

; core::fmt::Formatter::debug_tuple
; Function Attrs: nounwind
declare void @_ZN4core3fmt9Formatter11debug_tuple17h8b0c4b037c736595E(%"core::fmt::DebugTuple"* noalias nocapture sret(%"core::fmt::DebugTuple") dereferenceable(24), %"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugTuple::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders10DebugTuple6finish17h819d2cbd4adc1891E(%"core::fmt::DebugTuple"* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::Formatter::debug_struct
; Function Attrs: nounwind
declare i128 @_ZN4core3fmt9Formatter12debug_struct17h750ccbc2327a1bf8E(%"core::fmt::Formatter"* align 8 dereferenceable(64), [0 x i8]* nonnull align 1, i64) unnamed_addr #1

; core::fmt::builders::DebugStruct::field
; Function Attrs: nounwind
declare align 8 dereferenceable(16) %"core::fmt::DebugStruct"* @_ZN4core3fmt8builders11DebugStruct5field17h05961323261879b6E(%"core::fmt::DebugStruct"* align 8 dereferenceable(16), [0 x i8]* nonnull align 1, i64, {}* nonnull align 1, [3 x i64]* align 8 dereferenceable(24)) unnamed_addr #1

; core::fmt::builders::DebugStruct::finish
; Function Attrs: nounwind
declare zeroext i1 @_ZN4core3fmt8builders11DebugStruct6finish17hcf4b93cba46a86c7E(%"core::fmt::DebugStruct"* align 8 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.powi.f32.i32(float, i32) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.powi.f64.i32(double, i32) #2

attributes #0 = { inlinehint nounwind "target-cpu"="generic" }
attributes #1 = { nounwind "target-cpu"="generic" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn }
attributes #4 = { nofree nosync nounwind readnone willreturn }
attributes #5 = { cold noinline noreturn nounwind "target-cpu"="generic" }
attributes #6 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #7 = { nounwind }

!llvm.module.flags = !{!12, !13}
!llvm.dbg.cu = !{!14}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "vtable", scope: null, file: !2, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "<unknown>", directory: "")
!3 = !DICompositeType(tag: DW_TAG_structure_type, name: "vtable", file: !2, align: 64, flags: DIFlagArtificial, elements: !4, vtableHolder: !5, identifier: "vtable")
!4 = !{}
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&FloatErrorKind", baseType: !6, size: 64, align: 64, dwarfAddressSpace: 0)
!6 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FloatErrorKind", scope: !7, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !9)
!7 = !DINamespace(name: "num_traits", scope: null)
!8 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!9 = !{!10, !11}
!10 = !DIEnumerator(name: "Empty", value: 0)
!11 = !DIEnumerator(name: "Invalid", value: 1)
!12 = !{i32 7, !"PIC Level", i32 2}
!13 = !{i32 2, !"Debug Info Version", i32 3}
!14 = distinct !DICompileUnit(language: DW_LANG_Rust, file: !15, producer: "clang LLVM (rustc version 1.56.0-dev)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !16, globals: !55)
!15 = !DIFile(filename: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs", directory: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15")
!16 = !{!17, !24, !6, !29, !38, !45, !48}
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ControlFlow", scope: !18, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !21)
!18 = !DINamespace(name: "control_flow", scope: !19)
!19 = !DINamespace(name: "ops", scope: !20)
!20 = !DINamespace(name: "core", scope: null)
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "Continue", value: 0)
!23 = !DIEnumerator(name: "Break", value: 1)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Result", scope: !25, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !26)
!25 = !DINamespace(name: "result", scope: !20)
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "Ok", value: 0)
!28 = !DIEnumerator(name: "Err", value: 1)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Alignment", scope: !30, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !33)
!30 = !DINamespace(name: "v1", scope: !31)
!31 = !DINamespace(name: "rt", scope: !32)
!32 = !DINamespace(name: "fmt", scope: !20)
!33 = !{!34, !35, !36, !37}
!34 = !DIEnumerator(name: "Left", value: 0)
!35 = !DIEnumerator(name: "Right", value: 1)
!36 = !DIEnumerator(name: "Center", value: 2)
!37 = !DIEnumerator(name: "Unknown", value: 3)
!38 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ordering", scope: !39, file: !2, baseType: !40, size: 8, align: 8, flags: DIFlagEnumClass, elements: !41)
!39 = !DINamespace(name: "cmp", scope: !20)
!40 = !DIBasicType(name: "i8", size: 8, encoding: DW_ATE_signed)
!41 = !{!42, !43, !44}
!42 = !DIEnumerator(name: "Less", value: -1)
!43 = !DIEnumerator(name: "Equal", value: 0)
!44 = !DIEnumerator(name: "Greater", value: 1)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FloatErrorKind", scope: !46, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !9)
!46 = !DINamespace(name: "dec2flt", scope: !47)
!47 = !DINamespace(name: "num", scope: !20)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IntErrorKind", scope: !49, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagEnumClass, elements: !50)
!49 = !DINamespace(name: "error", scope: !47)
!50 = !{!10, !51, !52, !53, !54}
!51 = !DIEnumerator(name: "InvalidDigit", value: 1)
!52 = !DIEnumerator(name: "PosOverflow", value: 2)
!53 = !DIEnumerator(name: "NegOverflow", value: 3)
!54 = !DIEnumerator(name: "Zero", value: 4)
!55 = !{!0}
!56 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17habbf0680fb239970E", scope: !58, file: !57, line: 76, type: !62, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !112, retainedNodes: !115)
!57 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/zip.rs", directory: "", checksumkind: CSK_MD5, checksum: "f4879531fb05d5b8b226fa4bf4c2f512")
!58 = !DINamespace(name: "{impl#1}", scope: !59)
!59 = !DINamespace(name: "zip", scope: !60)
!60 = !DINamespace(name: "adapters", scope: !61)
!61 = !DINamespace(name: "iter", scope: !20)
!62 = !DISubroutineType(types: !63)
!63 = !{!64, !84}
!64 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(&u8, &u8)>", scope: !65, file: !2, size: 128, align: 64, elements: !66, identifier: "40afa95c67f8287451a197fb32363c1c")
!65 = !DINamespace(name: "option", scope: !20)
!66 = !{!67}
!67 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !68, templateParams: !71, identifier: "40afa95c67f8287451a197fb32363c1c_variant_part", discriminator: !82)
!68 = !{!69, !78}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !67, file: !2, baseType: !70, size: 128, align: 64, extraData: i64 0)
!70 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !64, file: !2, size: 128, align: 64, elements: !4, templateParams: !71, identifier: "40afa95c67f8287451a197fb32363c1c::None")
!71 = !{!72}
!72 = !DITemplateTypeParameter(name: "T", type: !73)
!73 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&u8, &u8)", file: !2, size: 128, align: 64, elements: !74, templateParams: !4, identifier: "78b6ebfb0b526ae198e5e7b5d0f0a751")
!74 = !{!75, !77}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !73, file: !2, baseType: !76, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u8", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !73, file: !2, baseType: !76, size: 64, align: 64, offset: 64)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !67, file: !2, baseType: !79, size: 128, align: 64)
!79 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !64, file: !2, size: 128, align: 64, elements: !80, templateParams: !71, identifier: "40afa95c67f8287451a197fb32363c1c::Some")
!80 = !{!81}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !79, file: !2, baseType: !73, size: 128, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, scope: !65, file: !2, baseType: !83, size: 64, align: 64, flags: DIFlagArtificial)
!83 = !DIBasicType(name: "u64", size: 64, encoding: DW_ATE_unsigned)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", baseType: !85, size: 64, align: 64, dwarfAddressSpace: 0)
!85 = !DICompositeType(tag: DW_TAG_structure_type, name: "Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", scope: !59, file: !2, size: 448, align: 64, elements: !86, templateParams: !112, identifier: "4444f76413d1ccc56e7ff97254a6517")
!86 = !{!87, !107, !108, !110, !111}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !85, file: !2, baseType: !88, size: 128, align: 64)
!88 = !DICompositeType(tag: DW_TAG_structure_type, name: "Iter<u8>", scope: !89, file: !2, size: 128, align: 64, elements: !91, templateParams: !99, identifier: "d497f50a2820f37aaf72dc233672c27f")
!89 = !DINamespace(name: "iter", scope: !90)
!90 = !DINamespace(name: "slice", scope: !20)
!91 = !{!92, !101, !102}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !88, file: !2, baseType: !93, size: 64, align: 64)
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "NonNull<u8>", scope: !94, file: !2, size: 64, align: 64, elements: !96, templateParams: !99, identifier: "406fec2678b8bb45d8db3433ccc0ff79")
!94 = !DINamespace(name: "non_null", scope: !95)
!95 = !DINamespace(name: "ptr", scope: !20)
!96 = !{!97}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !93, file: !2, baseType: !98, size: 64, align: 64)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const u8", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!99 = !{!100}
!100 = !DITemplateTypeParameter(name: "T", type: !8)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !88, file: !2, baseType: !98, size: 64, align: 64, offset: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_marker", scope: !88, file: !2, baseType: !103, align: 8)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "PhantomData<&u8>", scope: !104, file: !2, align: 8, elements: !4, templateParams: !105, identifier: "5ce1d76292b615ef89d76584ca834d06")
!104 = !DINamespace(name: "marker", scope: !20)
!105 = !{!106}
!106 = !DITemplateTypeParameter(name: "T", type: !76)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !85, file: !2, baseType: !88, size: 128, align: 64, offset: 128)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !85, file: !2, baseType: !109, size: 64, align: 64, offset: 256)
!109 = !DIBasicType(name: "usize", size: 64, encoding: DW_ATE_unsigned)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !85, file: !2, baseType: !109, size: 64, align: 64, offset: 320)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "a_len", scope: !85, file: !2, baseType: !109, size: 64, align: 64, offset: 384)
!112 = !{!113, !114}
!113 = !DITemplateTypeParameter(name: "A", type: !88)
!114 = !DITemplateTypeParameter(name: "B", type: !88)
!115 = !{!116}
!116 = !DILocalVariable(name: "self", arg: 1, scope: !56, file: !57, line: 76, type: !84)
!117 = !DILocation(line: 76, column: 13, scope: !56)
!118 = !DILocation(line: 77, column: 9, scope: !56)
!119 = !DILocation(line: 78, column: 6, scope: !56)
!120 = distinct !DISubprogram(name: "next<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN102_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17he53a662ae4d6ffb2E", scope: !58, file: !57, line: 76, type: !121, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !159, retainedNodes: !162)
!121 = !DISubroutineType(types: !122)
!122 = !{!123, !140}
!123 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(u8, u8)>", scope: !65, file: !2, size: 24, align: 8, elements: !124, identifier: "b917e4a761d211e76fae77d750cce049")
!124 = !{!125}
!125 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 24, align: 8, elements: !126, templateParams: !129, identifier: "b917e4a761d211e76fae77d750cce049_variant_part", discriminator: !139)
!126 = !{!127, !135}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !125, file: !2, baseType: !128, size: 24, align: 8, extraData: i64 0)
!128 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !123, file: !2, size: 24, align: 8, elements: !4, templateParams: !129, identifier: "b917e4a761d211e76fae77d750cce049::None")
!129 = !{!130}
!130 = !DITemplateTypeParameter(name: "T", type: !131)
!131 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u8, u8)", file: !2, size: 16, align: 8, elements: !132, templateParams: !4, identifier: "d10412ab6df02db968c934bced4ecc19")
!132 = !{!133, !134}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !131, file: !2, baseType: !8, size: 8, align: 8)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !131, file: !2, baseType: !8, size: 8, align: 8, offset: 8)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !125, file: !2, baseType: !136, size: 24, align: 8, extraData: i64 1)
!136 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !123, file: !2, size: 24, align: 8, elements: !137, templateParams: !129, identifier: "b917e4a761d211e76fae77d750cce049::Some")
!137 = !{!138}
!138 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !136, file: !2, baseType: !131, size: 16, align: 8, offset: 8)
!139 = !DIDerivedType(tag: DW_TAG_member, scope: !65, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagArtificial)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Zip<core::str::iter::Bytes, core::str::iter::Bytes>", baseType: !141, size: 64, align: 64, dwarfAddressSpace: 0)
!141 = !DICompositeType(tag: DW_TAG_structure_type, name: "Zip<core::str::iter::Bytes, core::str::iter::Bytes>", scope: !59, file: !2, size: 448, align: 64, elements: !142, templateParams: !159, identifier: "927ebaf07c94c0c9252ec2afcf2e512d")
!142 = !{!143, !155, !156, !157, !158}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !141, file: !2, baseType: !144, size: 128, align: 64)
!144 = !DICompositeType(tag: DW_TAG_structure_type, name: "Bytes", scope: !145, file: !2, size: 128, align: 64, elements: !147, templateParams: !4, identifier: "9b0ff1808b625642c082a920eb92ab09")
!145 = !DINamespace(name: "iter", scope: !146)
!146 = !DINamespace(name: "str", scope: !20)
!147 = !{!148}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !144, file: !2, baseType: !149, size: 128, align: 64)
!149 = !DICompositeType(tag: DW_TAG_structure_type, name: "Copied<core::slice::iter::Iter<u8>>", scope: !150, file: !2, size: 128, align: 64, elements: !151, templateParams: !153, identifier: "98e701f398c449d78fbfee072abeaf93")
!150 = !DINamespace(name: "copied", scope: !60)
!151 = !{!152}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !149, file: !2, baseType: !88, size: 128, align: 64)
!153 = !{!154}
!154 = !DITemplateTypeParameter(name: "I", type: !88)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !141, file: !2, baseType: !144, size: 128, align: 64, offset: 128)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !141, file: !2, baseType: !109, size: 64, align: 64, offset: 256)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !141, file: !2, baseType: !109, size: 64, align: 64, offset: 320)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "a_len", scope: !141, file: !2, baseType: !109, size: 64, align: 64, offset: 384)
!159 = !{!160, !161}
!160 = !DITemplateTypeParameter(name: "A", type: !144)
!161 = !DITemplateTypeParameter(name: "B", type: !144)
!162 = !{!163}
!163 = !DILocalVariable(name: "self", arg: 1, scope: !120, file: !57, line: 76, type: !140)
!164 = !DILocation(line: 76, column: 13, scope: !120)
!165 = !DILocation(line: 77, column: 9, scope: !120)
!166 = !DILocation(line: 78, column: 6, scope: !120)
!167 = distinct !DISubprogram(name: "__iterator_get_unchecked<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17habce9b3f3ab3f3ffE", scope: !169, file: !168, line: 80, type: !170, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !176, retainedNodes: !173)
!168 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/copied.rs", directory: "", checksumkind: CSK_MD5, checksum: "d50df72cd6ee864af69143184b53507f")
!169 = !DINamespace(name: "{impl#1}", scope: !150)
!170 = !DISubroutineType(types: !171)
!171 = !{!8, !172, !109}
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Copied<core::slice::iter::Iter<u8>>", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!173 = !{!174, !175}
!174 = !DILocalVariable(name: "self", arg: 1, scope: !167, file: !168, line: 80, type: !172)
!175 = !DILocalVariable(name: "idx", arg: 2, scope: !167, file: !168, line: 80, type: !109)
!176 = !{!154, !100}
!177 = !DILocation(line: 80, column: 40, scope: !167)
!178 = !DILocation(line: 80, column: 51, scope: !167)
!179 = !DILocation(line: 86, column: 19, scope: !167)
!180 = !DILocation(line: 86, column: 9, scope: !167)
!181 = !DILocation(line: 87, column: 6, scope: !167)
!182 = distinct !DISubprogram(name: "size_hint<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN104_$LT$core..iter..adapters..copied..Copied$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h873532b9b576354dE", scope: !169, file: !168, line: 47, type: !183, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !176, retainedNodes: !202)
!183 = !DISubroutineType(types: !184)
!184 = !{!185, !201}
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, core::option::Option<usize>)", file: !2, size: 192, align: 64, elements: !186, templateParams: !4, identifier: "2c591a652793c3427965aa09ecad855d")
!186 = !{!187, !188}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !185, file: !2, baseType: !109, size: 64, align: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !185, file: !2, baseType: !189, size: 128, align: 64, offset: 64)
!189 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<usize>", scope: !65, file: !2, size: 128, align: 64, elements: !190, identifier: "4849786e80860f5416c4c6b259f5a683")
!190 = !{!191}
!191 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !192, templateParams: !195, identifier: "4849786e80860f5416c4c6b259f5a683_variant_part", discriminator: !82)
!192 = !{!193, !197}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !191, file: !2, baseType: !194, size: 128, align: 64, extraData: i64 0)
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !189, file: !2, size: 128, align: 64, elements: !4, templateParams: !195, identifier: "4849786e80860f5416c4c6b259f5a683::None")
!195 = !{!196}
!196 = !DITemplateTypeParameter(name: "T", type: !109)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !191, file: !2, baseType: !198, size: 128, align: 64, extraData: i64 1)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !189, file: !2, size: 128, align: 64, elements: !199, templateParams: !195, identifier: "4849786e80860f5416c4c6b259f5a683::Some")
!199 = !{!200}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !198, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Copied<core::slice::iter::Iter<u8>>", baseType: !149, size: 64, align: 64, dwarfAddressSpace: 0)
!202 = !{!203}
!203 = !DILocalVariable(name: "self", arg: 1, scope: !182, file: !168, line: 47, type: !201)
!204 = !DILocation(line: 47, column: 18, scope: !182)
!205 = !DILocation(line: 48, column: 9, scope: !182)
!206 = !DILocation(line: 49, column: 6, scope: !182)
!207 = distinct !DISubprogram(name: "from_residual<(), ()>", linkageName: "_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17haf95ea245bbc93a5E", scope: !209, file: !208, line: 87, type: !210, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !232, retainedNodes: !228)
!208 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/control_flow.rs", directory: "", checksumkind: CSK_MD5, checksum: "dae96c2de2853f1bf78a32ab59b6143b")
!209 = !DINamespace(name: "{impl#1}", scope: !18)
!210 = !DISubroutineType(types: !211)
!211 = !{!17, !212}
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<(), core::convert::Infallible>", scope: !18, file: !2, align: 8, elements: !213, identifier: "cee5e83dac3821c85f357afd5ed55f5b")
!213 = !{!214}
!214 = !DICompositeType(tag: DW_TAG_variant_part, scope: !18, file: !2, align: 8, elements: !215, templateParams: !221, identifier: "cee5e83dac3821c85f357afd5ed55f5b_variant_part")
!215 = !{!216}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !214, file: !2, baseType: !217, align: 8)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !212, file: !2, align: 8, elements: !218, templateParams: !221, identifier: "cee5e83dac3821c85f357afd5ed55f5b::Break")
!218 = !{!219}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !217, file: !2, baseType: !220, align: 8)
!220 = !DIBasicType(name: "()", encoding: DW_ATE_unsigned)
!221 = !{!222, !223}
!222 = !DITemplateTypeParameter(name: "B", type: !220)
!223 = !DITemplateTypeParameter(name: "C", type: !224)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "Infallible", scope: !225, file: !2, align: 8, elements: !226, identifier: "866eee8446b1bfa4f6d9cf9584e40412")
!225 = !DINamespace(name: "convert", scope: !20)
!226 = !{!227}
!227 = !DICompositeType(tag: DW_TAG_variant_part, scope: !225, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "866eee8446b1bfa4f6d9cf9584e40412_variant_part")
!228 = !{!229, !230}
!229 = !DILocalVariable(name: "residual", arg: 1, scope: !207, file: !208, line: 87, type: !212)
!230 = !DILocalVariable(name: "b", scope: !231, file: !208, line: 89, type: !220, align: 1)
!231 = distinct !DILexicalBlock(scope: !207, file: !208, line: 89, column: 13)
!232 = !{!222, !233}
!233 = !DITemplateTypeParameter(name: "C", type: !220)
!234 = !DILocation(line: 87, column: 22, scope: !207)
!235 = !DILocation(line: 89, column: 32, scope: !231)
!236 = !DILocation(line: 89, column: 38, scope: !231)
!237 = !DILocation(line: 91, column: 6, scope: !207)
!238 = !{i8 0, i8 2}
!239 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17h15708020735db847E", scope: !241, file: !240, line: 219, type: !243, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !256)
!240 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/index.rs", directory: "", checksumkind: CSK_MD5, checksum: "a82bc19197b1c05f8386d5b2ec2441bd")
!241 = !DINamespace(name: "{impl#3}", scope: !242)
!242 = !DINamespace(name: "index", scope: !90)
!243 = !DISubroutineType(types: !244)
!244 = !{!245, !249, !245}
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const [u8]", file: !2, size: 128, align: 64, elements: !246, templateParams: !4, identifier: "f5bc56280f62752aca6114f169d6965e")
!246 = !{!247, !248}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !245, file: !2, baseType: !98, size: 64, align: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !245, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!249 = !DICompositeType(tag: DW_TAG_structure_type, name: "Range<usize>", scope: !250, file: !2, size: 128, align: 64, elements: !251, templateParams: !254, identifier: "519e5ef7586dbc9eb7e108f1b1bab509")
!250 = !DINamespace(name: "range", scope: !19)
!251 = !{!252, !253}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !249, file: !2, baseType: !109, size: 64, align: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !249, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!254 = !{!255}
!255 = !DITemplateTypeParameter(name: "Idx", type: !109)
!256 = !{!257, !258}
!257 = !DILocalVariable(name: "self", arg: 1, scope: !239, file: !240, line: 219, type: !249)
!258 = !DILocalVariable(name: "slice", arg: 2, scope: !239, file: !240, line: 219, type: !245)
!259 = !DILocation(line: 219, column: 29, scope: !239)
!260 = !DILocation(line: 219, column: 35, scope: !239)
!261 = !DILocation(line: 224, column: 44, scope: !239)
!262 = !DILocalVariable(name: "self", arg: 1, scope: !263, file: !264, line: 511, type: !98)
!263 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$3add17h5aef3e183b6b6bcaE", scope: !265, file: !264, line: 511, type: !267, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !269)
!264 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/const_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "d3efc72e5c37c5202bb58c77289e8c38")
!265 = !DINamespace(name: "{impl#0}", scope: !266)
!266 = !DINamespace(name: "const_ptr", scope: !95)
!267 = !DISubroutineType(types: !268)
!268 = !{!98, !98, !109}
!269 = !{!262, !270}
!270 = !DILocalVariable(name: "count", arg: 2, scope: !263, file: !264, line: 511, type: !109)
!271 = !DILocation(line: 511, column: 29, scope: !263, inlinedAt: !272)
!272 = distinct !DILocation(line: 224, column: 44, scope: !239)
!273 = !DILocation(line: 511, column: 35, scope: !263, inlinedAt: !272)
!274 = !DILocalVariable(name: "self", arg: 1, scope: !275, file: !264, line: 230, type: !98)
!275 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$6offset17h6d5254eb242ec30eE", scope: !265, file: !264, line: 230, type: !276, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !279)
!276 = !DISubroutineType(types: !277)
!277 = !{!98, !98, !278}
!278 = !DIBasicType(name: "isize", size: 64, encoding: DW_ATE_signed)
!279 = !{!274, !280}
!280 = !DILocalVariable(name: "count", arg: 2, scope: !275, file: !264, line: 230, type: !278)
!281 = !DILocation(line: 230, column: 32, scope: !275, inlinedAt: !282)
!282 = distinct !DILocation(line: 516, column: 18, scope: !263, inlinedAt: !272)
!283 = !DILocation(line: 230, column: 38, scope: !275, inlinedAt: !282)
!284 = !DILocation(line: 235, column: 18, scope: !275, inlinedAt: !282)
!285 = !DILocation(line: 224, column: 76, scope: !239)
!286 = !DILocation(line: 224, column: 18, scope: !239)
!287 = !DILocation(line: 225, column: 6, scope: !239)
!288 = distinct !DISubprogram(name: "next<core::str::iter::Chars>", linkageName: "_ZN110_$LT$core..iter..adapters..enumerate..Enumerate$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h25a9e1fc1ba2b9adE", scope: !290, file: !289, line: 45, type: !292, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !321, retainedNodes: !323)
!289 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/adapters/enumerate.rs", directory: "", checksumkind: CSK_MD5, checksum: "9c34b678724f0d255a70ef8e29773480")
!290 = !DINamespace(name: "{impl#1}", scope: !291)
!291 = !DINamespace(name: "enumerate", scope: !60)
!292 = !DISubroutineType(types: !293)
!293 = !{!294, !313}
!294 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(usize, char)>", scope: !65, file: !2, size: 128, align: 64, elements: !295, identifier: "31d4e8368d6edb6eb866d0c699ce3b34")
!295 = !{!296}
!296 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !297, templateParams: !300, identifier: "31d4e8368d6edb6eb866d0c699ce3b34_variant_part", discriminator: !311)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !296, file: !2, baseType: !299, size: 128, align: 64, extraData: i64 1114112)
!299 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !294, file: !2, size: 128, align: 64, elements: !4, templateParams: !300, identifier: "31d4e8368d6edb6eb866d0c699ce3b34::None")
!300 = !{!301}
!301 = !DITemplateTypeParameter(name: "T", type: !302)
!302 = !DICompositeType(tag: DW_TAG_structure_type, name: "(usize, char)", file: !2, size: 128, align: 64, elements: !303, templateParams: !4, identifier: "6e1ae05d5199b141d676567142ce0f12")
!303 = !{!304, !305}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !302, file: !2, baseType: !109, size: 64, align: 64)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !302, file: !2, baseType: !306, size: 32, align: 32, offset: 64)
!306 = !DIBasicType(name: "char", size: 32, encoding: DW_ATE_unsigned_char)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !296, file: !2, baseType: !308, size: 128, align: 64)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !294, file: !2, size: 128, align: 64, elements: !309, templateParams: !300, identifier: "31d4e8368d6edb6eb866d0c699ce3b34::Some")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !308, file: !2, baseType: !302, size: 128, align: 64)
!311 = !DIDerivedType(tag: DW_TAG_member, scope: !65, file: !2, baseType: !312, size: 32, align: 32, offset: 64, flags: DIFlagArtificial)
!312 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Enumerate<core::str::iter::Chars>", baseType: !314, size: 64, align: 64, dwarfAddressSpace: 0)
!314 = !DICompositeType(tag: DW_TAG_structure_type, name: "Enumerate<core::str::iter::Chars>", scope: !291, file: !2, size: 192, align: 64, elements: !315, templateParams: !321, identifier: "b45ffdbfb8f11e14c91ab68f3a421fb4")
!315 = !{!316, !320}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !314, file: !2, baseType: !317, size: 128, align: 64)
!317 = !DICompositeType(tag: DW_TAG_structure_type, name: "Chars", scope: !145, file: !2, size: 128, align: 64, elements: !318, templateParams: !4, identifier: "730b184303cd94baa6286550fbfb3ab6")
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !317, file: !2, baseType: !88, size: 128, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !314, file: !2, baseType: !109, size: 64, align: 64, offset: 128)
!321 = !{!322}
!322 = !DITemplateTypeParameter(name: "I", type: !317)
!323 = !{!324, !325, !327, !337, !339}
!324 = !DILocalVariable(name: "self", arg: 1, scope: !288, file: !289, line: 45, type: !313)
!325 = !DILocalVariable(name: "a", scope: !326, file: !289, line: 46, type: !306, align: 4)
!326 = distinct !DILexicalBlock(scope: !288, file: !289, line: 46, column: 9)
!327 = !DILocalVariable(name: "residual", scope: !328, file: !289, line: 46, type: !329, align: 1)
!328 = distinct !DILexicalBlock(scope: !288, file: !289, line: 46, column: 33)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<core::convert::Infallible>", scope: !65, file: !2, align: 8, elements: !330, identifier: "69e681f2568c3113446c36892492605a")
!330 = !{!331}
!331 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, align: 8, elements: !332, templateParams: !335, identifier: "69e681f2568c3113446c36892492605a_variant_part")
!332 = !{!333}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !331, file: !2, baseType: !334, align: 8)
!334 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !329, file: !2, align: 8, elements: !4, templateParams: !335, identifier: "69e681f2568c3113446c36892492605a::None")
!335 = !{!336}
!336 = !DITemplateTypeParameter(name: "T", type: !224)
!337 = !DILocalVariable(name: "val", scope: !338, file: !289, line: 46, type: !306, align: 4)
!338 = distinct !DILexicalBlock(scope: !288, file: !289, line: 46, column: 17)
!339 = !DILocalVariable(name: "i", scope: !340, file: !289, line: 47, type: !109, align: 8)
!340 = distinct !DILexicalBlock(scope: !326, file: !289, line: 47, column: 9)
!341 = !DILocation(line: 45, column: 13, scope: !288)
!342 = !DILocation(line: 46, column: 33, scope: !328)
!343 = !DILocation(line: 46, column: 17, scope: !288)
!344 = !{i32 0, i32 1114113}
!345 = !{i32 0, i32 1114112}
!346 = !DILocation(line: 46, column: 17, scope: !338)
!347 = !DILocation(line: 46, column: 13, scope: !326)
!348 = !DILocation(line: 47, column: 17, scope: !326)
!349 = !DILocation(line: 47, column: 13, scope: !340)
!350 = !DILocation(line: 48, column: 9, scope: !340)
!351 = !DILocation(line: 46, column: 17, scope: !328)
!352 = !DILocation(line: 50, column: 6, scope: !288)
!353 = !DILocation(line: 49, column: 14, scope: !340)
!354 = !DILocation(line: 49, column: 9, scope: !340)
!355 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17hb65db3c83737715cE", scope: !356, file: !240, line: 310, type: !357, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !362)
!356 = !DINamespace(name: "{impl#5}", scope: !242)
!357 = !DISubroutineType(types: !358)
!358 = !{!245, !359, !245}
!359 = !DICompositeType(tag: DW_TAG_structure_type, name: "RangeFrom<usize>", scope: !250, file: !2, size: 64, align: 64, elements: !360, templateParams: !254, identifier: "e075dc6e7a89d0be4297c8fc5af78aa")
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !359, file: !2, baseType: !109, size: 64, align: 64)
!362 = !{!363, !364}
!363 = !DILocalVariable(name: "self", arg: 1, scope: !355, file: !240, line: 310, type: !359)
!364 = !DILocalVariable(name: "slice", arg: 2, scope: !355, file: !240, line: 310, type: !245)
!365 = !DILocation(line: 310, column: 29, scope: !355)
!366 = !DILocation(line: 310, column: 35, scope: !355)
!367 = !DILocation(line: 312, column: 31, scope: !355)
!368 = !DILocation(line: 312, column: 18, scope: !355)
!369 = !DILocation(line: 313, column: 6, scope: !355)
!370 = distinct !DISubprogram(name: "index<u8>", linkageName: "_ZN110_$LT$core..ops..range..RangeFrom$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h9c2d9b358cf72ee1E", scope: !356, file: !240, line: 322, type: !371, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !389)
!371 = !DISubroutineType(types: !372)
!372 = !{!373, !359, !373, !377}
!373 = !DICompositeType(tag: DW_TAG_structure_type, name: "&[u8]", file: !2, size: 128, align: 64, elements: !374, templateParams: !4, identifier: "585202bcfc7dfd1dd72e8befe2491ee4")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !373, file: !2, baseType: !98, size: 64, align: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !373, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Location", baseType: !378, size: 64, align: 64, dwarfAddressSpace: 0)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "Location", scope: !379, file: !2, size: 192, align: 64, elements: !381, templateParams: !4, identifier: "9f9749776572719cc82f4bbe4f5eb8d")
!379 = !DINamespace(name: "location", scope: !380)
!380 = !DINamespace(name: "panic", scope: !20)
!381 = !{!382, !387, !388}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !378, file: !2, baseType: !383, size: 128, align: 64)
!383 = !DICompositeType(tag: DW_TAG_structure_type, name: "&str", file: !2, size: 128, align: 64, elements: !384, templateParams: !4, identifier: "7ef2a91eecc7bcf4b4aaea2dbce79437")
!384 = !{!385, !386}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !383, file: !2, baseType: !98, size: 64, align: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !383, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !378, file: !2, baseType: !312, size: 32, align: 32, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !378, file: !2, baseType: !312, size: 32, align: 32, offset: 160)
!389 = !{!390, !391}
!390 = !DILocalVariable(name: "self", arg: 1, scope: !370, file: !240, line: 322, type: !359)
!391 = !DILocalVariable(name: "slice", arg: 2, scope: !370, file: !240, line: 322, type: !373)
!392 = !DILocation(line: 322, column: 14, scope: !370)
!393 = !DILocation(line: 322, column: 20, scope: !370)
!394 = !DILocation(line: 323, column: 12, scope: !370)
!395 = !DILocation(line: 327, column: 20, scope: !370)
!396 = !DILocation(line: 324, column: 13, scope: !370)
!397 = !DILocation(line: 328, column: 6, scope: !370)
!398 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h7d9e762bf9c54f99E", scope: !399, file: !57, line: 256, type: !400, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !112, retainedNodes: !402)
!399 = !DINamespace(name: "{impl#5}", scope: !59)
!400 = !DISubroutineType(types: !401)
!401 = !{!85, !88, !88}
!402 = !{!403, !404, !405, !407}
!403 = !DILocalVariable(name: "a", arg: 1, scope: !398, file: !57, line: 256, type: !88)
!404 = !DILocalVariable(name: "b", arg: 2, scope: !398, file: !57, line: 256, type: !88)
!405 = !DILocalVariable(name: "a_len", scope: !406, file: !57, line: 257, type: !109, align: 8)
!406 = distinct !DILexicalBlock(scope: !398, file: !57, line: 257, column: 9)
!407 = !DILocalVariable(name: "len", scope: !408, file: !57, line: 258, type: !109, align: 8)
!408 = distinct !DILexicalBlock(scope: !406, file: !57, line: 258, column: 9)
!409 = !DILocation(line: 256, column: 12, scope: !398)
!410 = !DILocation(line: 256, column: 18, scope: !398)
!411 = !DILocation(line: 257, column: 21, scope: !398)
!412 = !DILocation(line: 257, column: 13, scope: !406)
!413 = !DILocation(line: 258, column: 35, scope: !406)
!414 = !DILocation(line: 258, column: 19, scope: !406)
!415 = !DILocation(line: 258, column: 13, scope: !408)
!416 = !DILocation(line: 259, column: 15, scope: !408)
!417 = !DILocation(line: 259, column: 18, scope: !408)
!418 = !DILocation(line: 259, column: 9, scope: !408)
!419 = !DILocation(line: 260, column: 6, scope: !398)
!420 = distinct !DISubprogram(name: "new<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17hb72b2badc854bf7fE", scope: !399, file: !57, line: 256, type: !421, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !159, retainedNodes: !423)
!421 = !DISubroutineType(types: !422)
!422 = !{!141, !144, !144}
!423 = !{!424, !425, !426, !428}
!424 = !DILocalVariable(name: "a", arg: 1, scope: !420, file: !57, line: 256, type: !144)
!425 = !DILocalVariable(name: "b", arg: 2, scope: !420, file: !57, line: 256, type: !144)
!426 = !DILocalVariable(name: "a_len", scope: !427, file: !57, line: 257, type: !109, align: 8)
!427 = distinct !DILexicalBlock(scope: !420, file: !57, line: 257, column: 9)
!428 = !DILocalVariable(name: "len", scope: !429, file: !57, line: 258, type: !109, align: 8)
!429 = distinct !DILexicalBlock(scope: !427, file: !57, line: 258, column: 9)
!430 = !DILocation(line: 256, column: 12, scope: !420)
!431 = !DILocation(line: 256, column: 18, scope: !420)
!432 = !DILocation(line: 257, column: 21, scope: !420)
!433 = !DILocation(line: 257, column: 13, scope: !427)
!434 = !DILocation(line: 258, column: 35, scope: !427)
!435 = !DILocation(line: 258, column: 19, scope: !427)
!436 = !DILocation(line: 258, column: 13, scope: !429)
!437 = !DILocation(line: 259, column: 15, scope: !429)
!438 = !DILocation(line: 259, column: 18, scope: !429)
!439 = !DILocation(line: 259, column: 9, scope: !429)
!440 = !DILocation(line: 260, column: 6, scope: !420)
!441 = distinct !DISubprogram(name: "next<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h3d63ccb7f72d129fE", scope: !399, file: !57, line: 263, type: !62, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !112, retainedNodes: !442)
!442 = !{!443, !444, !446}
!443 = !DILocalVariable(name: "self", arg: 1, scope: !441, file: !57, line: 263, type: !84)
!444 = !DILocalVariable(name: "i", scope: !445, file: !57, line: 265, type: !109, align: 8)
!445 = distinct !DILexicalBlock(scope: !441, file: !57, line: 265, column: 13)
!446 = !DILocalVariable(name: "i", scope: !447, file: !57, line: 274, type: !109, align: 8)
!447 = distinct !DILexicalBlock(scope: !441, file: !57, line: 274, column: 13)
!448 = !DILocation(line: 263, column: 13, scope: !441)
!449 = !DILocation(line: 264, column: 12, scope: !441)
!450 = !DILocation(line: 264, column: 25, scope: !441)
!451 = !DILocation(line: 273, column: 19, scope: !441)
!452 = !DILocation(line: 265, column: 21, scope: !441)
!453 = !DILocation(line: 265, column: 17, scope: !445)
!454 = !DILocation(line: 268, column: 13, scope: !445)
!455 = !DILocation(line: 271, column: 23, scope: !445)
!456 = !DILocation(line: 271, column: 59, scope: !445)
!457 = !DILocation(line: 271, column: 22, scope: !445)
!458 = !DILocation(line: 271, column: 17, scope: !445)
!459 = !DILocation(line: 264, column: 9, scope: !441)
!460 = !DILocation(line: 287, column: 6, scope: !441)
!461 = !DILocation(line: 273, column: 46, scope: !441)
!462 = !DILocation(line: 273, column: 59, scope: !441)
!463 = !DILocation(line: 285, column: 13, scope: !441)
!464 = !DILocation(line: 273, column: 16, scope: !441)
!465 = !DILocation(line: 274, column: 21, scope: !441)
!466 = !DILocation(line: 274, column: 17, scope: !447)
!467 = !DILocation(line: 276, column: 13, scope: !447)
!468 = !DILocation(line: 277, column: 13, scope: !447)
!469 = !DILocation(line: 281, column: 17, scope: !447)
!470 = !DILocation(line: 281, column: 51, scope: !447)
!471 = !DILocation(line: 283, column: 13, scope: !447)
!472 = distinct !DISubprogram(name: "next<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h5d88cd68a95ed554E", scope: !399, file: !57, line: 263, type: !121, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !159, retainedNodes: !473)
!473 = !{!474, !475, !477}
!474 = !DILocalVariable(name: "self", arg: 1, scope: !472, file: !57, line: 263, type: !140)
!475 = !DILocalVariable(name: "i", scope: !476, file: !57, line: 265, type: !109, align: 8)
!476 = distinct !DILexicalBlock(scope: !472, file: !57, line: 265, column: 13)
!477 = !DILocalVariable(name: "i", scope: !478, file: !57, line: 274, type: !109, align: 8)
!478 = distinct !DILexicalBlock(scope: !472, file: !57, line: 274, column: 13)
!479 = !DILocation(line: 263, column: 13, scope: !472)
!480 = !DILocation(line: 264, column: 12, scope: !472)
!481 = !DILocation(line: 264, column: 25, scope: !472)
!482 = !DILocation(line: 273, column: 19, scope: !472)
!483 = !DILocation(line: 265, column: 21, scope: !472)
!484 = !DILocation(line: 265, column: 17, scope: !476)
!485 = !DILocation(line: 268, column: 13, scope: !476)
!486 = !DILocation(line: 271, column: 23, scope: !476)
!487 = !DILocation(line: 271, column: 59, scope: !476)
!488 = !DILocation(line: 271, column: 22, scope: !476)
!489 = !DILocation(line: 271, column: 17, scope: !476)
!490 = !DILocation(line: 264, column: 9, scope: !472)
!491 = !DILocation(line: 287, column: 6, scope: !472)
!492 = !DILocation(line: 273, column: 46, scope: !472)
!493 = !DILocation(line: 273, column: 59, scope: !472)
!494 = !DILocation(line: 285, column: 13, scope: !472)
!495 = !DILocation(line: 273, column: 16, scope: !472)
!496 = !DILocation(line: 274, column: 21, scope: !472)
!497 = !DILocation(line: 274, column: 17, scope: !478)
!498 = !DILocation(line: 276, column: 13, scope: !478)
!499 = !DILocation(line: 277, column: 13, scope: !478)
!500 = !DILocation(line: 281, column: 17, scope: !478)
!501 = !DILocation(line: 281, column: 51, scope: !478)
!502 = !DILocation(line: 283, column: 13, scope: !478)
!503 = distinct !DISubprogram(name: "powi", linkageName: "_ZN3std3f3221_$LT$impl$u20$f32$GT$4powi17h346b69919f8c3eb6E", scope: !505, file: !504, line: 304, type: !508, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !512)
!504 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/std/src/f32.rs", directory: "", checksumkind: CSK_MD5, checksum: "54d880780feede5797a3ae500d967079")
!505 = !DINamespace(name: "{impl#0}", scope: !506)
!506 = !DINamespace(name: "f32", scope: !507)
!507 = !DINamespace(name: "std", scope: null)
!508 = !DISubroutineType(types: !509)
!509 = !{!510, !510, !511}
!510 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!511 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!512 = !{!513, !514}
!513 = !DILocalVariable(name: "self", arg: 1, scope: !503, file: !504, line: 304, type: !510)
!514 = !DILocalVariable(name: "n", arg: 2, scope: !503, file: !504, line: 304, type: !511)
!515 = !DILocation(line: 304, column: 17, scope: !503)
!516 = !DILocation(line: 304, column: 23, scope: !503)
!517 = !DILocation(line: 305, column: 18, scope: !503)
!518 = !DILocation(line: 306, column: 6, scope: !503)
!519 = distinct !DISubprogram(name: "powi", linkageName: "_ZN3std3f6421_$LT$impl$u20$f64$GT$4powi17hc5b39c35377ec9d5E", scope: !521, file: !520, line: 304, type: !523, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !526)
!520 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/std/src/f64.rs", directory: "", checksumkind: CSK_MD5, checksum: "1954aadc38ace0cd8affe3ab7ae2870d")
!521 = !DINamespace(name: "{impl#0}", scope: !522)
!522 = !DINamespace(name: "f64", scope: !507)
!523 = !DISubroutineType(types: !524)
!524 = !{!525, !525, !511}
!525 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!526 = !{!527, !528}
!527 = !DILocalVariable(name: "self", arg: 1, scope: !519, file: !520, line: 304, type: !525)
!528 = !DILocalVariable(name: "n", arg: 2, scope: !519, file: !520, line: 304, type: !511)
!529 = !DILocation(line: 304, column: 17, scope: !519)
!530 = !DILocation(line: 304, column: 23, scope: !519)
!531 = !DILocation(line: 305, column: 18, scope: !519)
!532 = !DILocation(line: 306, column: 6, scope: !519)
!533 = distinct !DISubprogram(name: "fmt<num_traits::FloatErrorKind>", linkageName: "_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hff085c70b3d512c9E", scope: !535, file: !534, line: 2088, type: !536, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !560, retainedNodes: !557)
!534 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/fmt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "fc8dfb4543b7986b6225b25d4f76a5ce")
!535 = !DINamespace(name: "{impl#51}", scope: !32)
!536 = !DISubroutineType(types: !537)
!537 = !{!24, !538, !539}
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&FloatErrorKind", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Formatter", baseType: !540, size: 64, align: 64, dwarfAddressSpace: 0)
!540 = !DICompositeType(tag: DW_TAG_structure_type, name: "Formatter", scope: !32, file: !2, size: 512, align: 64, elements: !541, templateParams: !4, identifier: "37f4daa474efe0abec93026f6af11d04")
!541 = !{!542, !543, !544, !545, !546, !547}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !540, file: !2, baseType: !312, size: 32, align: 32, offset: 384)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !540, file: !2, baseType: !306, size: 32, align: 32, offset: 416)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !540, file: !2, baseType: !29, size: 8, align: 8, offset: 448)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !540, file: !2, baseType: !189, size: 128, align: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !540, file: !2, baseType: !189, size: 128, align: 64, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !540, file: !2, baseType: !548, size: 128, align: 64, offset: 256)
!548 = !DICompositeType(tag: DW_TAG_structure_type, name: "&mut dyn core::fmt::Write", file: !2, size: 128, align: 64, elements: !549, templateParams: !4, identifier: "ab0a0458a7bfc4114bcaaa179b3e8910")
!549 = !{!550, !552}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !548, file: !2, baseType: !551, size: 64, align: 64, flags: DIFlagArtificial)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut u8", baseType: !8, size: 64, align: 64, dwarfAddressSpace: 0)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !548, file: !2, baseType: !553, size: 64, align: 64, offset: 64, flags: DIFlagArtificial)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&[usize; 3]", baseType: !554, size: 64, align: 64, dwarfAddressSpace: 0)
!554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 192, align: 64, elements: !555)
!555 = !{!556}
!556 = !DISubrange(count: 3, lowerBound: 0)
!557 = !{!558, !559}
!558 = !DILocalVariable(name: "self", arg: 1, scope: !533, file: !534, line: 2088, type: !538)
!559 = !DILocalVariable(name: "f", arg: 2, scope: !533, file: !534, line: 2088, type: !539)
!560 = !{!561}
!561 = !DITemplateTypeParameter(name: "T", type: !6)
!562 = !DILocation(line: 2088, column: 20, scope: !533)
!563 = !DILocation(line: 2088, column: 27, scope: !533)
!564 = !DILocation(line: 2088, column: 71, scope: !533)
!565 = !DILocation(line: 2088, column: 62, scope: !533)
!566 = !DILocation(line: 2088, column: 84, scope: !533)
!567 = distinct !DISubprogram(name: "div", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Div$GT$3div17he6073f501bfa0ee7E", scope: !569, file: !568, line: 490, type: !571, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !573)
!568 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/arith.rs", directory: "", checksumkind: CSK_MD5, checksum: "f55bb0c019bdba77885aceb9c931d57b")
!569 = !DINamespace(name: "{impl#216}", scope: !570)
!570 = !DINamespace(name: "arith", scope: !19)
!571 = !DISubroutineType(types: !572)
!572 = !{!510, !510, !510}
!573 = !{!574, !575}
!574 = !DILocalVariable(name: "self", arg: 1, scope: !567, file: !568, line: 490, type: !510)
!575 = !DILocalVariable(name: "other", arg: 2, scope: !567, file: !568, line: 490, type: !510)
!576 = !DILocation(line: 490, column: 20, scope: !567)
!577 = !DILocation(line: 490, column: 26, scope: !567)
!578 = !DILocation(line: 490, column: 45, scope: !567)
!579 = !DILocation(line: 490, column: 59, scope: !567)
!580 = distinct !DISubprogram(name: "mul", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Mul$GT$3mul17hcf55b7e176d8b17bE", scope: !581, file: !568, line: 334, type: !571, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !582)
!581 = !DINamespace(name: "{impl#124}", scope: !570)
!582 = !{!583, !584}
!583 = !DILocalVariable(name: "self", arg: 1, scope: !580, file: !568, line: 334, type: !510)
!584 = !DILocalVariable(name: "other", arg: 2, scope: !580, file: !568, line: 334, type: !510)
!585 = !DILocation(line: 334, column: 20, scope: !580)
!586 = !DILocation(line: 334, column: 26, scope: !580)
!587 = !DILocation(line: 334, column: 45, scope: !580)
!588 = !DILocation(line: 334, column: 59, scope: !580)
!589 = distinct !DISubprogram(name: "neg", linkageName: "_ZN45_$LT$f32$u20$as$u20$core..ops..arith..Neg$GT$3neg17h57e55d56d9e42651E", scope: !590, file: !568, line: 679, type: !591, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !593)
!590 = !DINamespace(name: "{impl#286}", scope: !570)
!591 = !DISubroutineType(types: !592)
!592 = !{!510, !510}
!593 = !{!594}
!594 = !DILocalVariable(name: "self", arg: 1, scope: !589, file: !568, line: 679, type: !510)
!595 = !DILocation(line: 679, column: 20, scope: !589)
!596 = !DILocation(line: 679, column: 34, scope: !589)
!597 = !DILocation(line: 679, column: 41, scope: !589)
!598 = distinct !DISubprogram(name: "div", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Div$GT$3div17h3f3cf0a934854f68E", scope: !599, file: !568, line: 490, type: !600, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !602)
!599 = !DINamespace(name: "{impl#217}", scope: !570)
!600 = !DISubroutineType(types: !601)
!601 = !{!525, !525, !525}
!602 = !{!603, !604}
!603 = !DILocalVariable(name: "self", arg: 1, scope: !598, file: !568, line: 490, type: !525)
!604 = !DILocalVariable(name: "other", arg: 2, scope: !598, file: !568, line: 490, type: !525)
!605 = !DILocation(line: 490, column: 20, scope: !598)
!606 = !DILocation(line: 490, column: 26, scope: !598)
!607 = !DILocation(line: 490, column: 45, scope: !598)
!608 = !DILocation(line: 490, column: 59, scope: !598)
!609 = distinct !DISubprogram(name: "mul", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Mul$GT$3mul17hbd1481c8bcbc57e1E", scope: !610, file: !568, line: 334, type: !600, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !611)
!610 = !DINamespace(name: "{impl#125}", scope: !570)
!611 = !{!612, !613}
!612 = !DILocalVariable(name: "self", arg: 1, scope: !609, file: !568, line: 334, type: !525)
!613 = !DILocalVariable(name: "other", arg: 2, scope: !609, file: !568, line: 334, type: !525)
!614 = !DILocation(line: 334, column: 20, scope: !609)
!615 = !DILocation(line: 334, column: 26, scope: !609)
!616 = !DILocation(line: 334, column: 45, scope: !609)
!617 = !DILocation(line: 334, column: 59, scope: !609)
!618 = distinct !DISubprogram(name: "neg", linkageName: "_ZN45_$LT$f64$u20$as$u20$core..ops..arith..Neg$GT$3neg17h725e8e59798aaf5fE", scope: !619, file: !568, line: 679, type: !620, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !622)
!619 = !DINamespace(name: "{impl#287}", scope: !570)
!620 = !DISubroutineType(types: !621)
!621 = !{!525, !525}
!622 = !{!623}
!623 = !DILocalVariable(name: "self", arg: 1, scope: !618, file: !568, line: 679, type: !525)
!624 = !DILocation(line: 679, column: 20, scope: !618)
!625 = !DILocation(line: 679, column: 34, scope: !618)
!626 = !DILocation(line: 679, column: 41, scope: !618)
!627 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3Ord3min17hf1c029e7f2107ff3E", scope: !629, file: !628, line: 783, type: !630, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !635, retainedNodes: !632)
!628 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "3fdac3f6fbed09f2cfeccffe125b9a60")
!629 = !DINamespace(name: "Ord", scope: !39)
!630 = !DISubroutineType(types: !631)
!631 = !{!109, !109, !109}
!632 = !{!633, !634}
!633 = !DILocalVariable(name: "self", arg: 1, scope: !627, file: !628, line: 783, type: !109)
!634 = !DILocalVariable(name: "other", arg: 2, scope: !627, file: !628, line: 783, type: !109)
!635 = !{!636}
!636 = !DITemplateTypeParameter(name: "Self", type: !109)
!637 = !DILocation(line: 783, column: 12, scope: !627)
!638 = !DILocation(line: 783, column: 18, scope: !627)
!639 = !DILocation(line: 787, column: 9, scope: !627)
!640 = !DILocation(line: 788, column: 6, scope: !627)
!641 = distinct !DISubprogram(name: "min<usize>", linkageName: "_ZN4core3cmp3min17hd0c19dbaf1480053E", scope: !39, file: !628, line: 1120, type: !630, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !195, retainedNodes: !642)
!642 = !{!643, !644}
!643 = !DILocalVariable(name: "v1", arg: 1, scope: !641, file: !628, line: 1120, type: !109)
!644 = !DILocalVariable(name: "v2", arg: 2, scope: !641, file: !628, line: 1120, type: !109)
!645 = !DILocation(line: 1120, column: 20, scope: !641)
!646 = !DILocation(line: 1120, column: 27, scope: !641)
!647 = !DILocation(line: 1121, column: 5, scope: !641)
!648 = !DILocation(line: 1122, column: 2, scope: !641)
!649 = distinct !DISubprogram(name: "cmp", linkageName: "_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hc38d608d3e030fabE", scope: !650, file: !628, line: 1334, type: !652, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !655)
!650 = !DINamespace(name: "{impl#55}", scope: !651)
!651 = !DINamespace(name: "impls", scope: !39)
!652 = !DISubroutineType(types: !653)
!653 = !{!38, !654, !654}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&usize", baseType: !109, size: 64, align: 64, dwarfAddressSpace: 0)
!655 = !{!656, !657}
!656 = !DILocalVariable(name: "self", arg: 1, scope: !649, file: !628, line: 1334, type: !654)
!657 = !DILocalVariable(name: "other", arg: 2, scope: !649, file: !628, line: 1334, type: !654)
!658 = !DILocation(line: 1334, column: 24, scope: !649)
!659 = !DILocation(line: 1334, column: 31, scope: !649)
!660 = !DILocation(line: 1337, column: 24, scope: !649)
!661 = !DILocation(line: 1337, column: 32, scope: !649)
!662 = !DILocation(line: 1338, column: 29, scope: !649)
!663 = !DILocation(line: 1338, column: 38, scope: !649)
!664 = !DILocation(line: 1337, column: 41, scope: !649)
!665 = !DILocation(line: 1337, column: 21, scope: !649)
!666 = !DILocation(line: 1340, column: 18, scope: !649)
!667 = !{i8 -1, i8 2}
!668 = !DILocation(line: 1339, column: 28, scope: !649)
!669 = !DILocation(line: 1338, column: 26, scope: !649)
!670 = !DILocation(line: 1338, column: 47, scope: !649)
!671 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17h264c06fe5bf4a2f5E", scope: !672, file: !628, line: 1248, type: !673, scopeLine: 1248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !677)
!672 = !DINamespace(name: "{impl#0}", scope: !651)
!673 = !DISubroutineType(types: !674)
!674 = !{!675, !676, !676}
!675 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&()", baseType: !220, size: 64, align: 64, dwarfAddressSpace: 0)
!677 = !{!678, !679}
!678 = !DILocalVariable(name: "self", arg: 1, scope: !671, file: !628, line: 1248, type: !676)
!679 = !DILocalVariable(name: "_other", arg: 2, scope: !671, file: !628, line: 1248, type: !676)
!680 = !DILocation(line: 1248, column: 15, scope: !671)
!681 = !DILocation(line: 1248, column: 22, scope: !671)
!682 = !DILocation(line: 1250, column: 10, scope: !671)
!683 = distinct !DISubprogram(name: "eq<[u8], [u8]>", linkageName: "_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h19ec8da187428af2E", scope: !684, file: !628, line: 1404, type: !685, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !691, retainedNodes: !688)
!684 = !DINamespace(name: "{impl#9}", scope: !651)
!685 = !DISubroutineType(types: !686)
!686 = !{!675, !687, !687}
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&[u8]", baseType: !373, size: 64, align: 64, dwarfAddressSpace: 0)
!688 = !{!689, !690}
!689 = !DILocalVariable(name: "self", arg: 1, scope: !683, file: !628, line: 1404, type: !687)
!690 = !DILocalVariable(name: "other", arg: 2, scope: !683, file: !628, line: 1404, type: !687)
!691 = !{!692, !696}
!692 = !DITemplateTypeParameter(name: "A", type: !693)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, align: 8, elements: !694)
!694 = !{!695}
!695 = !DISubrange(count: -1, lowerBound: 0)
!696 = !DITemplateTypeParameter(name: "B", type: !693)
!697 = !DILocation(line: 1404, column: 15, scope: !683)
!698 = !DILocation(line: 1404, column: 22, scope: !683)
!699 = !DILocation(line: 1405, column: 27, scope: !683)
!700 = !DILocation(line: 1405, column: 34, scope: !683)
!701 = !DILocation(line: 1405, column: 13, scope: !683)
!702 = !DILocation(line: 1406, column: 10, scope: !683)
!703 = distinct !DISubprogram(name: "min_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>", linkageName: "_ZN4core3cmp6min_by17h83b5bcb5037deac0E", scope: !39, file: !628, line: 1139, type: !704, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !711, retainedNodes: !707)
!704 = !DISubroutineType(types: !705)
!705 = !{!109, !109, !109, !706}
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "fn(&usize, &usize) -> core::cmp::Ordering", baseType: !652, align: 8, dwarfAddressSpace: 0)
!707 = !{!708, !709, !710}
!708 = !DILocalVariable(name: "v1", arg: 1, scope: !703, file: !628, line: 1139, type: !109)
!709 = !DILocalVariable(name: "v2", arg: 2, scope: !703, file: !628, line: 1139, type: !109)
!710 = !DILocalVariable(name: "compare", arg: 3, scope: !703, file: !628, line: 1139, type: !706)
!711 = !{!196, !712}
!712 = !DITemplateTypeParameter(name: "F", type: !706)
!713 = !DILocation(line: 1139, column: 49, scope: !703)
!714 = !DILocation(line: 1139, column: 56, scope: !703)
!715 = !DILocation(line: 1139, column: 63, scope: !703)
!716 = !DILocation(line: 1140, column: 11, scope: !703)
!717 = !DILocation(line: 1140, column: 5, scope: !703)
!718 = !DILocation(line: 1141, column: 45, scope: !703)
!719 = !DILocation(line: 1142, column: 30, scope: !703)
!720 = !DILocation(line: 1144, column: 1, scope: !703)
!721 = !DILocation(line: 1144, column: 2, scope: !703)
!722 = distinct !DISubprogram(name: "size_of_val<[u8]>", linkageName: "_ZN4core3mem11size_of_val17h8cf98265f313b93aE", scope: !724, file: !723, line: 330, type: !725, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !729, retainedNodes: !727)
!723 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/mem/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "00a9ca3300eee460d5c61559b280a726")
!724 = !DINamespace(name: "mem", scope: !20)
!725 = !DISubroutineType(types: !726)
!726 = !{!109, !373}
!727 = !{!728}
!728 = !DILocalVariable(name: "val", arg: 1, scope: !722, file: !723, line: 330, type: !373)
!729 = !{!730}
!730 = !DITemplateTypeParameter(name: "T", type: !693)
!731 = !DILocation(line: 330, column: 37, scope: !722)
!732 = !DILocation(line: 332, column: 14, scope: !722)
!733 = !DILocation(line: 333, column: 2, scope: !722)
!734 = distinct !DISubprogram(name: "checked_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$11checked_mul17h4cf3e0f6afebc40eE", scope: !736, file: !735, line: 507, type: !737, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !751)
!735 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/uint_macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "8bd5648afa999a95525abfd2832ef4ce")
!736 = !DINamespace(name: "{impl#9}", scope: !47)
!737 = !DISubroutineType(types: !738)
!738 = !{!739, !83, !83}
!739 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u64>", scope: !65, file: !2, size: 128, align: 64, elements: !740, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0")
!740 = !{!741}
!741 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !742, templateParams: !745, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0_variant_part", discriminator: !82)
!742 = !{!743, !747}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !741, file: !2, baseType: !744, size: 128, align: 64, extraData: i64 0)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !739, file: !2, size: 128, align: 64, elements: !4, templateParams: !745, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0::None")
!745 = !{!746}
!746 = !DITemplateTypeParameter(name: "T", type: !83)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !741, file: !2, baseType: !748, size: 128, align: 64, extraData: i64 1)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !739, file: !2, size: 128, align: 64, elements: !749, templateParams: !745, identifier: "fb0d8dd0311ca890792a3bd4e4bf95e0::Some")
!749 = !{!750}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !748, file: !2, baseType: !83, size: 64, align: 64, offset: 64)
!751 = !{!752, !753, !754, !756}
!752 = !DILocalVariable(name: "self", arg: 1, scope: !734, file: !735, line: 507, type: !83)
!753 = !DILocalVariable(name: "rhs", arg: 2, scope: !734, file: !735, line: 507, type: !83)
!754 = !DILocalVariable(name: "a", scope: !755, file: !735, line: 508, type: !83, align: 8)
!755 = distinct !DILexicalBlock(scope: !734, file: !735, line: 508, column: 13)
!756 = !DILocalVariable(name: "b", scope: !755, file: !735, line: 508, type: !675, align: 1)
!757 = !DILocation(line: 507, column: 34, scope: !734)
!758 = !DILocation(line: 507, column: 40, scope: !734)
!759 = !DILocalVariable(name: "self", arg: 1, scope: !760, file: !735, line: 1518, type: !83)
!760 = distinct !DISubprogram(name: "overflowing_mul", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$15overflowing_mul17hc4067750cd45d682E", scope: !736, file: !735, line: 1518, type: !761, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !767)
!761 = !DISubroutineType(types: !762)
!762 = !{!763, !83, !83}
!763 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, bool)", file: !2, size: 128, align: 64, elements: !764, templateParams: !4, identifier: "d1bf7b8fd54049865acc01cb00e03ca5")
!764 = !{!765, !766}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !763, file: !2, baseType: !83, size: 64, align: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !763, file: !2, baseType: !675, size: 8, align: 8, offset: 64)
!767 = !{!759, !768, !769, !771}
!768 = !DILocalVariable(name: "rhs", arg: 2, scope: !760, file: !735, line: 1518, type: !83)
!769 = !DILocalVariable(name: "a", scope: !770, file: !735, line: 1519, type: !83, align: 8)
!770 = distinct !DILexicalBlock(scope: !760, file: !735, line: 1519, column: 13)
!771 = !DILocalVariable(name: "b", scope: !770, file: !735, line: 1519, type: !675, align: 1)
!772 = !DILocation(line: 1518, column: 38, scope: !760, inlinedAt: !773)
!773 = distinct !DILocation(line: 508, column: 26, scope: !734)
!774 = !DILocation(line: 1518, column: 44, scope: !760, inlinedAt: !773)
!775 = !DILocation(line: 1519, column: 26, scope: !760, inlinedAt: !773)
!776 = !DILocation(line: 1519, column: 18, scope: !760, inlinedAt: !773)
!777 = !DILocation(line: 1519, column: 18, scope: !770, inlinedAt: !773)
!778 = !DILocation(line: 1519, column: 21, scope: !760, inlinedAt: !773)
!779 = !DILocation(line: 1519, column: 21, scope: !770, inlinedAt: !773)
!780 = !DILocation(line: 1520, column: 13, scope: !770, inlinedAt: !773)
!781 = !DILocation(line: 1521, column: 10, scope: !760, inlinedAt: !773)
!782 = !DILocation(line: 508, column: 26, scope: !734)
!783 = !DILocation(line: 508, column: 18, scope: !734)
!784 = !DILocation(line: 508, column: 18, scope: !755)
!785 = !DILocation(line: 508, column: 21, scope: !734)
!786 = !DILocation(line: 508, column: 21, scope: !755)
!787 = !DILocation(line: 509, column: 16, scope: !755)
!788 = !DILocation(line: 509, column: 42, scope: !755)
!789 = !DILocation(line: 509, column: 13, scope: !755)
!790 = !DILocation(line: 509, column: 30, scope: !755)
!791 = !DILocation(line: 510, column: 10, scope: !734)
!792 = !{i64 0, i64 2}
!793 = distinct !DISubprogram(name: "biased_fp_to_float<f32>", linkageName: "_ZN4core3num7dec2flt18biased_fp_to_float17h35fd2ba36433138cE", scope: !46, file: !794, line: 215, type: !795, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !806, retainedNodes: !802)
!794 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "266e9bcc8b4a143c3d3e5b4825a63385")
!795 = !DISubroutineType(types: !796)
!796 = !{!510, !797}
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "BiasedFp", scope: !798, file: !2, size: 128, align: 64, elements: !799, templateParams: !4, identifier: "51e159e06d736c14901e984aaf77084b")
!798 = !DINamespace(name: "common", scope: !46)
!799 = !{!800, !801}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !797, file: !2, baseType: !83, size: 64, align: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !797, file: !2, baseType: !511, size: 32, align: 32, offset: 64)
!802 = !{!803, !804}
!803 = !DILocalVariable(name: "x", arg: 1, scope: !793, file: !794, line: 215, type: !797)
!804 = !DILocalVariable(name: "word", scope: !805, file: !794, line: 216, type: !83, align: 8)
!805 = distinct !DILexicalBlock(scope: !793, file: !794, line: 216, column: 5)
!806 = !{!807}
!807 = !DITemplateTypeParameter(name: "T", type: !510)
!808 = !DILocation(line: 215, column: 36, scope: !793)
!809 = !DILocation(line: 216, column: 9, scope: !805)
!810 = !DILocation(line: 216, column: 20, scope: !793)
!811 = !DILocation(line: 217, column: 13, scope: !805)
!812 = !DILocation(line: 217, column: 5, scope: !805)
!813 = !DILocation(line: 218, column: 22, scope: !805)
!814 = !DILocation(line: 218, column: 5, scope: !805)
!815 = !DILocation(line: 219, column: 2, scope: !793)
!816 = distinct !DISubprogram(name: "biased_fp_to_float<f64>", linkageName: "_ZN4core3num7dec2flt18biased_fp_to_float17h6a560688513527b2E", scope: !46, file: !794, line: 215, type: !817, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !823, retainedNodes: !819)
!817 = !DISubroutineType(types: !818)
!818 = !{!525, !797}
!819 = !{!820, !821}
!820 = !DILocalVariable(name: "x", arg: 1, scope: !816, file: !794, line: 215, type: !797)
!821 = !DILocalVariable(name: "word", scope: !822, file: !794, line: 216, type: !83, align: 8)
!822 = distinct !DILexicalBlock(scope: !816, file: !794, line: 216, column: 5)
!823 = !{!824}
!824 = !DITemplateTypeParameter(name: "T", type: !525)
!825 = !DILocation(line: 215, column: 36, scope: !816)
!826 = !DILocation(line: 216, column: 9, scope: !822)
!827 = !DILocation(line: 216, column: 20, scope: !816)
!828 = !DILocation(line: 217, column: 13, scope: !822)
!829 = !DILocation(line: 217, column: 5, scope: !822)
!830 = !DILocation(line: 218, column: 22, scope: !822)
!831 = !DILocation(line: 218, column: 5, scope: !822)
!832 = !DILocation(line: 219, column: 2, scope: !816)
!833 = distinct !DISubprogram(name: "set_precision<f32>", linkageName: "_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h574ca4041d6482d6E", scope: !835, file: !834, line: 88, type: !837, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !806, retainedNodes: !4)
!834 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/fpu.rs", directory: "", checksumkind: CSK_MD5, checksum: "e45f86bd0a688beb6c3a617f9e19fbdd")
!835 = !DINamespace(name: "fpu_precision", scope: !836)
!836 = !DINamespace(name: "fpu", scope: !46)
!837 = !DISubroutineType(types: !838)
!838 = !{null}
!839 = !DILocation(line: 88, column: 33, scope: !833)
!840 = distinct !DISubprogram(name: "set_precision<f64>", linkageName: "_ZN4core3num7dec2flt3fpu13fpu_precision13set_precision17h678315491519b81dE", scope: !835, file: !834, line: 88, type: !837, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !823, retainedNodes: !4)
!841 = !DILocation(line: 88, column: 33, scope: !840)
!842 = distinct !DISubprogram(name: "parse_long_mantissa<f64>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa17h2b64145d4e379df0E", scope: !844, file: !843, line: 26, type: !845, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !847)
!843 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/slow.rs", directory: "", checksumkind: CSK_MD5, checksum: "0467e0fa7351525f6187cb7910447288")
!844 = !DINamespace(name: "slow", scope: !46)
!845 = !DISubroutineType(types: !846)
!846 = !{!797, !373}
!847 = !{!848, !849, !853, !855, !857, !869, !871, !873, !875, !877, !879, !880, !882, !884}
!848 = !DILocalVariable(name: "s", arg: 1, scope: !842, file: !843, line: 26, type: !373)
!849 = !DILocalVariable(name: "get_shift", scope: !850, file: !843, line: 32, type: !851, align: 1)
!850 = distinct !DILexicalBlock(scope: !842, file: !843, line: 32, column: 5)
!851 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !852, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "63a3c1645945e7b99455f7b6e5121262")
!852 = !DINamespace(name: "parse_long_mantissa", scope: !844)
!853 = !DILocalVariable(name: "fp_zero", scope: !854, file: !843, line: 36, type: !797, align: 8)
!854 = distinct !DILexicalBlock(scope: !850, file: !843, line: 36, column: 5)
!855 = !DILocalVariable(name: "fp_inf", scope: !856, file: !843, line: 37, type: !797, align: 8)
!856 = distinct !DILexicalBlock(scope: !854, file: !843, line: 37, column: 5)
!857 = !DILocalVariable(name: "d", scope: !858, file: !843, line: 39, type: !859, align: 8)
!858 = distinct !DILexicalBlock(scope: !856, file: !843, line: 39, column: 5)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Decimal", scope: !860, file: !2, size: 6272, align: 64, elements: !861, templateParams: !4, identifier: "2394f0aff2642b101dafa9e6df36edb6")
!860 = !DINamespace(name: "decimal", scope: !46)
!861 = !{!862, !863, !864, !865}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "num_digits", scope: !859, file: !2, baseType: !109, size: 64, align: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "decimal_point", scope: !859, file: !2, baseType: !511, size: 32, align: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "truncated", scope: !859, file: !2, baseType: !675, size: 8, align: 8, offset: 96)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "digits", scope: !859, file: !2, baseType: !866, size: 6144, align: 8, offset: 104)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 6144, align: 8, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 768, lowerBound: 0)
!869 = !DILocalVariable(name: "exp2", scope: !870, file: !843, line: 47, type: !511, align: 4)
!870 = distinct !DILexicalBlock(scope: !858, file: !843, line: 47, column: 5)
!871 = !DILocalVariable(name: "n", scope: !872, file: !843, line: 50, type: !109, align: 8)
!872 = distinct !DILexicalBlock(scope: !870, file: !843, line: 50, column: 9)
!873 = !DILocalVariable(name: "shift", scope: !874, file: !843, line: 51, type: !109, align: 8)
!874 = distinct !DILexicalBlock(scope: !872, file: !843, line: 51, column: 9)
!875 = !DILocalVariable(name: "shift", scope: !876, file: !843, line: 60, type: !109, align: 8)
!876 = distinct !DILexicalBlock(scope: !870, file: !843, line: 60, column: 9)
!877 = !DILocalVariable(name: "digit", scope: !878, file: !843, line: 62, type: !8, align: 1)
!878 = distinct !DILexicalBlock(scope: !870, file: !843, line: 62, column: 17)
!879 = !DILocalVariable(name: "digit", scope: !878, file: !843, line: 62, type: !76, align: 8)
!880 = !DILocalVariable(name: "n", scope: !881, file: !843, line: 78, type: !109, align: 8)
!881 = distinct !DILexicalBlock(scope: !870, file: !843, line: 78, column: 9)
!882 = !DILocalVariable(name: "mantissa", scope: !883, file: !843, line: 91, type: !83, align: 8)
!883 = distinct !DILexicalBlock(scope: !870, file: !843, line: 91, column: 5)
!884 = !DILocalVariable(name: "power2", scope: !885, file: !843, line: 102, type: !511, align: 4)
!885 = distinct !DILexicalBlock(scope: !883, file: !843, line: 102, column: 5)
!886 = !{!887}
!887 = !DITemplateTypeParameter(name: "F", type: !525)
!888 = !DILocation(line: 26, column: 48, scope: !842)
!889 = !DILocation(line: 32, column: 9, scope: !850)
!890 = !DILocation(line: 39, column: 9, scope: !858)
!891 = !DILocation(line: 47, column: 9, scope: !870)
!892 = !DILocation(line: 60, column: 13, scope: !876)
!893 = !DILocation(line: 78, column: 13, scope: !881)
!894 = !DILocation(line: 91, column: 9, scope: !883)
!895 = !DILocation(line: 102, column: 9, scope: !885)
!896 = !DILocation(line: 36, column: 19, scope: !850)
!897 = !DILocation(line: 36, column: 9, scope: !854)
!898 = !DILocation(line: 37, column: 18, scope: !854)
!899 = !DILocation(line: 37, column: 9, scope: !856)
!900 = !DILocation(line: 39, column: 17, scope: !856)
!901 = !DILocation(line: 42, column: 8, scope: !858)
!902 = !DILocation(line: 42, column: 29, scope: !858)
!903 = !DILocation(line: 44, column: 15, scope: !858)
!904 = !DILocation(line: 43, column: 16, scope: !858)
!905 = !DILocation(line: 43, column: 9, scope: !858)
!906 = !DILocation(line: 1, column: 1, scope: !907)
!907 = !DILexicalBlockFile(scope: !858, file: !908, discriminator: 0)
!908 = !DIFile(filename: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/lib.rs", directory: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15", checksumkind: CSK_MD5, checksum: "0c8374df16abfd1e75fb5955761aa3a0")
!909 = !DILocation(line: 47, column: 20, scope: !858)
!910 = !DILocation(line: 49, column: 5, scope: !870)
!911 = !DILocation(line: 45, column: 16, scope: !858)
!912 = !DILocation(line: 109, column: 2, scope: !842)
!913 = !DILocation(line: 49, column: 11, scope: !870)
!914 = !DILocation(line: 59, column: 5, scope: !870)
!915 = !DILocation(line: 50, column: 17, scope: !870)
!916 = !DILocation(line: 50, column: 13, scope: !872)
!917 = !DILocation(line: 51, column: 21, scope: !872)
!918 = !DILocation(line: 51, column: 13, scope: !874)
!919 = !DILocation(line: 52, column: 9, scope: !874)
!920 = !DILocation(line: 53, column: 12, scope: !874)
!921 = !DILocation(line: 56, column: 17, scope: !874)
!922 = !DILocation(line: 56, column: 9, scope: !874)
!923 = !DILocation(line: 54, column: 20, scope: !874)
!924 = !DILocation(line: 1, column: 1, scope: !925)
!925 = !DILexicalBlockFile(scope: !870, file: !908, discriminator: 0)
!926 = !DILocation(line: 59, column: 11, scope: !870)
!927 = !DILocation(line: 60, column: 24, scope: !870)
!928 = !DILocation(line: 62, column: 17, scope: !870)
!929 = !DILocation(line: 62, column: 17, scope: !878)
!930 = !DILocation(line: 62, column: 26, scope: !870)
!931 = !DILocation(line: 67, column: 25, scope: !870)
!932 = !DILocation(line: 67, column: 23, scope: !870)
!933 = !DILocation(line: 67, column: 13, scope: !870)
!934 = !DILocation(line: 60, column: 21, scope: !870)
!935 = !DILocation(line: 69, column: 22, scope: !876)
!936 = !DILocation(line: 69, column: 9, scope: !876)
!937 = !DILocation(line: 61, column: 13, scope: !870)
!938 = !DILocation(line: 76, column: 5, scope: !870)
!939 = !DILocation(line: 77, column: 5, scope: !870)
!940 = !DILocation(line: 64, column: 22, scope: !870)
!941 = !DILocation(line: 63, column: 26, scope: !870)
!942 = !DILocation(line: 70, column: 12, scope: !876)
!943 = !DILocation(line: 73, column: 17, scope: !876)
!944 = !DILocation(line: 73, column: 9, scope: !876)
!945 = !DILocation(line: 71, column: 20, scope: !876)
!946 = !DILocation(line: 77, column: 39, scope: !870)
!947 = !DILocation(line: 77, column: 11, scope: !870)
!948 = !DILocation(line: 85, column: 9, scope: !870)
!949 = !DILocation(line: 85, column: 8, scope: !870)
!950 = !DILocation(line: 78, column: 50, scope: !870)
!951 = !DILocation(line: 78, column: 21, scope: !870)
!952 = !DILocation(line: 79, column: 12, scope: !881)
!953 = !DILocation(line: 82, column: 23, scope: !881)
!954 = !DILocation(line: 82, column: 9, scope: !881)
!955 = !DILocation(line: 80, column: 13, scope: !881)
!956 = !DILocation(line: 79, column: 9, scope: !881)
!957 = !DILocation(line: 83, column: 17, scope: !881)
!958 = !DILocation(line: 83, column: 9, scope: !881)
!959 = !DILocation(line: 90, column: 5, scope: !870)
!960 = !DILocation(line: 86, column: 16, scope: !870)
!961 = !DILocation(line: 91, column: 24, scope: !870)
!962 = !DILocation(line: 92, column: 8, scope: !883)
!963 = !DILocation(line: 102, column: 22, scope: !883)
!964 = !DILocation(line: 103, column: 8, scope: !885)
!965 = !DILocation(line: 95, column: 9, scope: !883)
!966 = !DILocation(line: 96, column: 9, scope: !883)
!967 = !DILocation(line: 97, column: 20, scope: !883)
!968 = !DILocation(line: 97, column: 9, scope: !883)
!969 = !DILocation(line: 98, column: 13, scope: !883)
!970 = !DILocation(line: 98, column: 12, scope: !883)
!971 = !DILocation(line: 92, column: 5, scope: !883)
!972 = !DILocation(line: 99, column: 20, scope: !883)
!973 = !DILocation(line: 107, column: 5, scope: !885)
!974 = !DILocation(line: 108, column: 19, scope: !885)
!975 = !DILocation(line: 108, column: 32, scope: !885)
!976 = !DILocation(line: 108, column: 5, scope: !885)
!977 = !DILocation(line: 104, column: 9, scope: !885)
!978 = !DILocation(line: 103, column: 5, scope: !885)
!979 = distinct !DISubprogram(name: "parse_long_mantissa<f32>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa17h62bb7aad644caa2fE", scope: !844, file: !843, line: 26, type: !845, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !980)
!980 = !{!981, !982, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1002, !1004, !1006}
!981 = !DILocalVariable(name: "s", arg: 1, scope: !979, file: !843, line: 26, type: !373)
!982 = !DILocalVariable(name: "get_shift", scope: !983, file: !843, line: 32, type: !984, align: 1)
!983 = distinct !DILexicalBlock(scope: !979, file: !843, line: 32, column: 5)
!984 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !852, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "ad12f03861f80f375d86d8fb3483c48f")
!985 = !DILocalVariable(name: "fp_zero", scope: !986, file: !843, line: 36, type: !797, align: 8)
!986 = distinct !DILexicalBlock(scope: !983, file: !843, line: 36, column: 5)
!987 = !DILocalVariable(name: "fp_inf", scope: !988, file: !843, line: 37, type: !797, align: 8)
!988 = distinct !DILexicalBlock(scope: !986, file: !843, line: 37, column: 5)
!989 = !DILocalVariable(name: "d", scope: !990, file: !843, line: 39, type: !859, align: 8)
!990 = distinct !DILexicalBlock(scope: !988, file: !843, line: 39, column: 5)
!991 = !DILocalVariable(name: "exp2", scope: !992, file: !843, line: 47, type: !511, align: 4)
!992 = distinct !DILexicalBlock(scope: !990, file: !843, line: 47, column: 5)
!993 = !DILocalVariable(name: "n", scope: !994, file: !843, line: 50, type: !109, align: 8)
!994 = distinct !DILexicalBlock(scope: !992, file: !843, line: 50, column: 9)
!995 = !DILocalVariable(name: "shift", scope: !996, file: !843, line: 51, type: !109, align: 8)
!996 = distinct !DILexicalBlock(scope: !994, file: !843, line: 51, column: 9)
!997 = !DILocalVariable(name: "shift", scope: !998, file: !843, line: 60, type: !109, align: 8)
!998 = distinct !DILexicalBlock(scope: !992, file: !843, line: 60, column: 9)
!999 = !DILocalVariable(name: "digit", scope: !1000, file: !843, line: 62, type: !8, align: 1)
!1000 = distinct !DILexicalBlock(scope: !992, file: !843, line: 62, column: 17)
!1001 = !DILocalVariable(name: "digit", scope: !1000, file: !843, line: 62, type: !76, align: 8)
!1002 = !DILocalVariable(name: "n", scope: !1003, file: !843, line: 78, type: !109, align: 8)
!1003 = distinct !DILexicalBlock(scope: !992, file: !843, line: 78, column: 9)
!1004 = !DILocalVariable(name: "mantissa", scope: !1005, file: !843, line: 91, type: !83, align: 8)
!1005 = distinct !DILexicalBlock(scope: !992, file: !843, line: 91, column: 5)
!1006 = !DILocalVariable(name: "power2", scope: !1007, file: !843, line: 102, type: !511, align: 4)
!1007 = distinct !DILexicalBlock(scope: !1005, file: !843, line: 102, column: 5)
!1008 = !{!1009}
!1009 = !DITemplateTypeParameter(name: "F", type: !510)
!1010 = !DILocation(line: 26, column: 48, scope: !979)
!1011 = !DILocation(line: 32, column: 9, scope: !983)
!1012 = !DILocation(line: 39, column: 9, scope: !990)
!1013 = !DILocation(line: 47, column: 9, scope: !992)
!1014 = !DILocation(line: 60, column: 13, scope: !998)
!1015 = !DILocation(line: 78, column: 13, scope: !1003)
!1016 = !DILocation(line: 91, column: 9, scope: !1005)
!1017 = !DILocation(line: 102, column: 9, scope: !1007)
!1018 = !DILocation(line: 36, column: 19, scope: !983)
!1019 = !DILocation(line: 36, column: 9, scope: !986)
!1020 = !DILocation(line: 37, column: 18, scope: !986)
!1021 = !DILocation(line: 37, column: 9, scope: !988)
!1022 = !DILocation(line: 39, column: 17, scope: !988)
!1023 = !DILocation(line: 42, column: 8, scope: !990)
!1024 = !DILocation(line: 42, column: 29, scope: !990)
!1025 = !DILocation(line: 44, column: 15, scope: !990)
!1026 = !DILocation(line: 43, column: 16, scope: !990)
!1027 = !DILocation(line: 43, column: 9, scope: !990)
!1028 = !DILocation(line: 1, column: 1, scope: !1029)
!1029 = !DILexicalBlockFile(scope: !990, file: !908, discriminator: 0)
!1030 = !DILocation(line: 47, column: 20, scope: !990)
!1031 = !DILocation(line: 49, column: 5, scope: !992)
!1032 = !DILocation(line: 45, column: 16, scope: !990)
!1033 = !DILocation(line: 109, column: 2, scope: !979)
!1034 = !DILocation(line: 49, column: 11, scope: !992)
!1035 = !DILocation(line: 59, column: 5, scope: !992)
!1036 = !DILocation(line: 50, column: 17, scope: !992)
!1037 = !DILocation(line: 50, column: 13, scope: !994)
!1038 = !DILocation(line: 51, column: 21, scope: !994)
!1039 = !DILocation(line: 51, column: 13, scope: !996)
!1040 = !DILocation(line: 52, column: 9, scope: !996)
!1041 = !DILocation(line: 53, column: 12, scope: !996)
!1042 = !DILocation(line: 56, column: 17, scope: !996)
!1043 = !DILocation(line: 56, column: 9, scope: !996)
!1044 = !DILocation(line: 54, column: 20, scope: !996)
!1045 = !DILocation(line: 1, column: 1, scope: !1046)
!1046 = !DILexicalBlockFile(scope: !992, file: !908, discriminator: 0)
!1047 = !DILocation(line: 59, column: 11, scope: !992)
!1048 = !DILocation(line: 60, column: 24, scope: !992)
!1049 = !DILocation(line: 62, column: 17, scope: !992)
!1050 = !DILocation(line: 62, column: 17, scope: !1000)
!1051 = !DILocation(line: 62, column: 26, scope: !992)
!1052 = !DILocation(line: 67, column: 25, scope: !992)
!1053 = !DILocation(line: 67, column: 23, scope: !992)
!1054 = !DILocation(line: 67, column: 13, scope: !992)
!1055 = !DILocation(line: 60, column: 21, scope: !992)
!1056 = !DILocation(line: 69, column: 22, scope: !998)
!1057 = !DILocation(line: 69, column: 9, scope: !998)
!1058 = !DILocation(line: 61, column: 13, scope: !992)
!1059 = !DILocation(line: 76, column: 5, scope: !992)
!1060 = !DILocation(line: 77, column: 5, scope: !992)
!1061 = !DILocation(line: 64, column: 22, scope: !992)
!1062 = !DILocation(line: 63, column: 26, scope: !992)
!1063 = !DILocation(line: 70, column: 12, scope: !998)
!1064 = !DILocation(line: 73, column: 17, scope: !998)
!1065 = !DILocation(line: 73, column: 9, scope: !998)
!1066 = !DILocation(line: 71, column: 20, scope: !998)
!1067 = !DILocation(line: 77, column: 39, scope: !992)
!1068 = !DILocation(line: 77, column: 11, scope: !992)
!1069 = !DILocation(line: 85, column: 9, scope: !992)
!1070 = !DILocation(line: 85, column: 8, scope: !992)
!1071 = !DILocation(line: 78, column: 50, scope: !992)
!1072 = !DILocation(line: 78, column: 21, scope: !992)
!1073 = !DILocation(line: 79, column: 12, scope: !1003)
!1074 = !DILocation(line: 82, column: 23, scope: !1003)
!1075 = !DILocation(line: 82, column: 9, scope: !1003)
!1076 = !DILocation(line: 80, column: 13, scope: !1003)
!1077 = !DILocation(line: 79, column: 9, scope: !1003)
!1078 = !DILocation(line: 83, column: 17, scope: !1003)
!1079 = !DILocation(line: 83, column: 9, scope: !1003)
!1080 = !DILocation(line: 90, column: 5, scope: !992)
!1081 = !DILocation(line: 86, column: 16, scope: !992)
!1082 = !DILocation(line: 91, column: 24, scope: !992)
!1083 = !DILocation(line: 92, column: 8, scope: !1005)
!1084 = !DILocation(line: 102, column: 22, scope: !1005)
!1085 = !DILocation(line: 103, column: 8, scope: !1007)
!1086 = !DILocation(line: 95, column: 9, scope: !1005)
!1087 = !DILocation(line: 96, column: 9, scope: !1005)
!1088 = !DILocation(line: 97, column: 20, scope: !1005)
!1089 = !DILocation(line: 97, column: 9, scope: !1005)
!1090 = !DILocation(line: 98, column: 13, scope: !1005)
!1091 = !DILocation(line: 98, column: 12, scope: !1005)
!1092 = !DILocation(line: 92, column: 5, scope: !1005)
!1093 = !DILocation(line: 99, column: 20, scope: !1005)
!1094 = !DILocation(line: 107, column: 5, scope: !1007)
!1095 = !DILocation(line: 108, column: 19, scope: !1007)
!1096 = !DILocation(line: 108, column: 32, scope: !1007)
!1097 = !DILocation(line: 108, column: 5, scope: !1007)
!1098 = !DILocation(line: 104, column: 9, scope: !1007)
!1099 = !DILocation(line: 103, column: 5, scope: !1007)
!1100 = distinct !DISubprogram(name: "{closure#0}<f32>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hacbee32165cf28c3E", scope: !852, file: !843, line: 32, type: !1101, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1104)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!109, !1103, !109}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&{closure#0}", baseType: !984, size: 64, align: 64, dwarfAddressSpace: 0)
!1104 = !{!1105, !1106}
!1105 = !DILocalVariable(name: "n", arg: 2, scope: !1100, file: !843, line: 32, type: !109)
!1106 = !DILocalVariable(arg: 1, scope: !1100, file: !843, line: 32, type: !1103)
!1107 = !DILocation(line: 32, column: 21, scope: !1100)
!1108 = !DILocation(line: 32, column: 22, scope: !1100)
!1109 = !DILocation(line: 33, column: 12, scope: !1100)
!1110 = !DILocation(line: 33, column: 57, scope: !1100)
!1111 = !DILocation(line: 33, column: 9, scope: !1100)
!1112 = !DILocation(line: 33, column: 29, scope: !1100)
!1113 = !DILocation(line: 34, column: 6, scope: !1100)
!1114 = distinct !DISubprogram(name: "{closure#0}<f64>", linkageName: "_ZN4core3num7dec2flt4slow19parse_long_mantissa28_$u7b$$u7b$closure$u7d$$u7d$17hbfed245ebaebca70E", scope: !852, file: !843, line: 32, type: !1115, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1118)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!109, !1117, !109}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&{closure#0}", baseType: !851, size: 64, align: 64, dwarfAddressSpace: 0)
!1118 = !{!1119, !1120}
!1119 = !DILocalVariable(name: "n", arg: 2, scope: !1114, file: !843, line: 32, type: !109)
!1120 = !DILocalVariable(arg: 1, scope: !1114, file: !843, line: 32, type: !1117)
!1121 = !DILocation(line: 32, column: 21, scope: !1114)
!1122 = !DILocation(line: 32, column: 22, scope: !1114)
!1123 = !DILocation(line: 33, column: 12, scope: !1114)
!1124 = !DILocation(line: 33, column: 57, scope: !1114)
!1125 = !DILocation(line: 33, column: 9, scope: !1114)
!1126 = !DILocation(line: 33, column: 29, scope: !1114)
!1127 = !DILocation(line: 34, column: 6, scope: !1114)
!1128 = distinct !DISubprogram(name: "parse_inf_nan<f64>", linkageName: "_ZN4core3num7dec2flt5parse13parse_inf_nan17h2ed54d37b5155d4fE", scope: !1130, file: !1129, line: 223, type: !1131, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1143)
!1129 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/parse.rs", directory: "", checksumkind: CSK_MD5, checksum: "108164ccb322681479afdef26e62198d")
!1130 = !DINamespace(name: "parse", scope: !46)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!1133, !373, !675}
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f64>", scope: !65, file: !2, size: 128, align: 64, elements: !1134, identifier: "89490ffb9cb58d03b2194456b58baf34")
!1134 = !{!1135}
!1135 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !1136, templateParams: !823, identifier: "89490ffb9cb58d03b2194456b58baf34_variant_part", discriminator: !82)
!1136 = !{!1137, !1139}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1135, file: !2, baseType: !1138, size: 128, align: 64, extraData: i64 0)
!1138 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1133, file: !2, size: 128, align: 64, elements: !4, templateParams: !823, identifier: "89490ffb9cb58d03b2194456b58baf34::None")
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1135, file: !2, baseType: !1140, size: 128, align: 64, extraData: i64 1)
!1140 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1133, file: !2, size: 128, align: 64, elements: !1141, templateParams: !823, identifier: "89490ffb9cb58d03b2194456b58baf34::Some")
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1140, file: !2, baseType: !525, size: 64, align: 64, offset: 64)
!1143 = !{!1144, !1145, !1146, !1148}
!1144 = !DILocalVariable(name: "s", arg: 1, scope: !1128, file: !1129, line: 223, type: !373)
!1145 = !DILocalVariable(name: "negative", arg: 2, scope: !1128, file: !1129, line: 223, type: !675)
!1146 = !DILocalVariable(name: "float", scope: !1147, file: !1129, line: 224, type: !525, align: 8)
!1147 = distinct !DILexicalBlock(scope: !1128, file: !1129, line: 224, column: 12)
!1148 = !DILocalVariable(name: "rest", scope: !1147, file: !1129, line: 224, type: !109, align: 8)
!1149 = !DILocation(line: 223, column: 35, scope: !1128)
!1150 = !DILocation(line: 223, column: 45, scope: !1128)
!1151 = !DILocation(line: 224, column: 18, scope: !1147)
!1152 = !DILocation(line: 224, column: 38, scope: !1128)
!1153 = !DILocation(line: 224, column: 12, scope: !1128)
!1154 = !DILocation(line: 224, column: 18, scope: !1128)
!1155 = !DILocation(line: 224, column: 29, scope: !1128)
!1156 = !DILocation(line: 224, column: 29, scope: !1147)
!1157 = !DILocation(line: 225, column: 12, scope: !1128)
!1158 = !DILocation(line: 232, column: 5, scope: !1128)
!1159 = !DILocation(line: 233, column: 2, scope: !1128)
!1160 = !DILocation(line: 224, column: 5, scope: !1128)
!1161 = !DILocation(line: 226, column: 16, scope: !1128)
!1162 = !DILocation(line: 229, column: 25, scope: !1128)
!1163 = !DILocation(line: 229, column: 20, scope: !1128)
!1164 = !DILocation(line: 227, column: 26, scope: !1128)
!1165 = !DILocation(line: 227, column: 25, scope: !1128)
!1166 = !DILocation(line: 227, column: 17, scope: !1128)
!1167 = !DILocation(line: 226, column: 13, scope: !1128)
!1168 = distinct !DISubprogram(name: "parse_inf_nan<f32>", linkageName: "_ZN4core3num7dec2flt5parse13parse_inf_nan17h96bd8654992402f6E", scope: !1130, file: !1129, line: 223, type: !1169, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1182)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!1171, !373, !675}
!1171 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<f32>", scope: !65, file: !2, size: 64, align: 32, elements: !1172, identifier: "e6103c9e7a665e83ed4c371e3058c868")
!1172 = !{!1173}
!1173 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 64, align: 32, elements: !1174, templateParams: !806, identifier: "e6103c9e7a665e83ed4c371e3058c868_variant_part", discriminator: !1181)
!1174 = !{!1175, !1177}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1173, file: !2, baseType: !1176, size: 64, align: 32, extraData: i64 0)
!1176 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1171, file: !2, size: 64, align: 32, elements: !4, templateParams: !806, identifier: "e6103c9e7a665e83ed4c371e3058c868::None")
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1173, file: !2, baseType: !1178, size: 64, align: 32, extraData: i64 1)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1171, file: !2, size: 64, align: 32, elements: !1179, templateParams: !806, identifier: "e6103c9e7a665e83ed4c371e3058c868::Some")
!1179 = !{!1180}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1178, file: !2, baseType: !510, size: 32, align: 32, offset: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, scope: !65, file: !2, baseType: !312, size: 32, align: 32, flags: DIFlagArtificial)
!1182 = !{!1183, !1184, !1185, !1187}
!1183 = !DILocalVariable(name: "s", arg: 1, scope: !1168, file: !1129, line: 223, type: !373)
!1184 = !DILocalVariable(name: "negative", arg: 2, scope: !1168, file: !1129, line: 223, type: !675)
!1185 = !DILocalVariable(name: "float", scope: !1186, file: !1129, line: 224, type: !510, align: 4)
!1186 = distinct !DILexicalBlock(scope: !1168, file: !1129, line: 224, column: 12)
!1187 = !DILocalVariable(name: "rest", scope: !1186, file: !1129, line: 224, type: !109, align: 8)
!1188 = !DILocation(line: 223, column: 35, scope: !1168)
!1189 = !DILocation(line: 223, column: 45, scope: !1168)
!1190 = !DILocation(line: 224, column: 18, scope: !1186)
!1191 = !DILocation(line: 224, column: 38, scope: !1168)
!1192 = !DILocation(line: 224, column: 12, scope: !1168)
!1193 = !DILocation(line: 224, column: 18, scope: !1168)
!1194 = !DILocation(line: 224, column: 29, scope: !1168)
!1195 = !DILocation(line: 224, column: 29, scope: !1186)
!1196 = !DILocation(line: 225, column: 12, scope: !1168)
!1197 = !DILocation(line: 232, column: 5, scope: !1168)
!1198 = !DILocation(line: 233, column: 2, scope: !1168)
!1199 = !DILocation(line: 224, column: 5, scope: !1168)
!1200 = !DILocation(line: 226, column: 16, scope: !1168)
!1201 = !DILocation(line: 229, column: 25, scope: !1168)
!1202 = !DILocation(line: 229, column: 20, scope: !1168)
!1203 = !DILocation(line: 227, column: 26, scope: !1168)
!1204 = !DILocation(line: 227, column: 25, scope: !1168)
!1205 = !DILocation(line: 227, column: 17, scope: !1168)
!1206 = !DILocation(line: 226, column: 13, scope: !1168)
!1207 = !{i32 0, i32 2}
!1208 = distinct !DISubprogram(name: "parse_partial_inf_nan<f32>", linkageName: "_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17ha92addea830f1984E", scope: !1130, file: !1129, line: 208, type: !1209, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1227)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!1211, !373}
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(f32, usize)>", scope: !65, file: !2, size: 192, align: 64, elements: !1212, identifier: "42934e2e1386cca2cd753f4ee2dcd77c")
!1212 = !{!1213}
!1213 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 192, align: 64, elements: !1214, templateParams: !1217, identifier: "42934e2e1386cca2cd753f4ee2dcd77c_variant_part", discriminator: !82)
!1214 = !{!1215, !1223}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1213, file: !2, baseType: !1216, size: 192, align: 64, extraData: i64 0)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1211, file: !2, size: 192, align: 64, elements: !4, templateParams: !1217, identifier: "42934e2e1386cca2cd753f4ee2dcd77c::None")
!1217 = !{!1218}
!1218 = !DITemplateTypeParameter(name: "T", type: !1219)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f32, usize)", file: !2, size: 128, align: 64, elements: !1220, templateParams: !4, identifier: "4acb5c9de4e1945a2fc27ecb678ff03d")
!1220 = !{!1221, !1222}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1219, file: !2, baseType: !510, size: 32, align: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1219, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1213, file: !2, baseType: !1224, size: 192, align: 64, extraData: i64 1)
!1224 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1211, file: !2, size: 192, align: 64, elements: !1225, templateParams: !1217, identifier: "42934e2e1386cca2cd753f4ee2dcd77c::Some")
!1225 = !{!1226}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1224, file: !2, baseType: !1219, size: 128, align: 64, offset: 64)
!1227 = !{!1228}
!1228 = !DILocalVariable(name: "s", arg: 1, scope: !1208, file: !1129, line: 208, type: !373)
!1229 = !DILocation(line: 208, column: 39, scope: !1208)
!1230 = !DILocation(line: 212, column: 8, scope: !1208)
!1231 = !DILocation(line: 219, column: 5, scope: !1208)
!1232 = !DILocation(line: 220, column: 2, scope: !1208)
!1233 = !DILocation(line: 213, column: 12, scope: !1208)
!1234 = !DILocation(line: 215, column: 19, scope: !1208)
!1235 = !DILocation(line: 214, column: 25, scope: !1208)
!1236 = !DILocation(line: 214, column: 20, scope: !1208)
!1237 = !DILocation(line: 214, column: 13, scope: !1208)
!1238 = !DILocation(line: 212, column: 5, scope: !1208)
!1239 = !DILocation(line: 216, column: 39, scope: !1208)
!1240 = !DILocation(line: 216, column: 25, scope: !1208)
!1241 = !DILocation(line: 216, column: 20, scope: !1208)
!1242 = !DILocation(line: 1, column: 1, scope: !1243)
!1243 = !DILexicalBlockFile(scope: !1208, file: !908, discriminator: 0)
!1244 = distinct !DISubprogram(name: "parse_partial_inf_nan<f64>", linkageName: "_ZN4core3num7dec2flt5parse21parse_partial_inf_nan17hb063fb5513d5f9f2E", scope: !1130, file: !1129, line: 208, type: !1245, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1263)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!1247, !373}
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(f64, usize)>", scope: !65, file: !2, size: 192, align: 64, elements: !1248, identifier: "ee6796deef02cefbd1971e1bab0bb4d1")
!1248 = !{!1249}
!1249 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 192, align: 64, elements: !1250, templateParams: !1253, identifier: "ee6796deef02cefbd1971e1bab0bb4d1_variant_part", discriminator: !82)
!1250 = !{!1251, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !1249, file: !2, baseType: !1252, size: 192, align: 64, extraData: i64 0)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !1247, file: !2, size: 192, align: 64, elements: !4, templateParams: !1253, identifier: "ee6796deef02cefbd1971e1bab0bb4d1::None")
!1253 = !{!1254}
!1254 = !DITemplateTypeParameter(name: "T", type: !1255)
!1255 = !DICompositeType(tag: DW_TAG_structure_type, name: "(f64, usize)", file: !2, size: 128, align: 64, elements: !1256, templateParams: !4, identifier: "b75145992ccfc9e41c1c6a0dab797bbb")
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1255, file: !2, baseType: !525, size: 64, align: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !1255, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !1249, file: !2, baseType: !1260, size: 192, align: 64, extraData: i64 1)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !1247, file: !2, size: 192, align: 64, elements: !1261, templateParams: !1253, identifier: "ee6796deef02cefbd1971e1bab0bb4d1::Some")
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1260, file: !2, baseType: !1255, size: 128, align: 64, offset: 64)
!1263 = !{!1264}
!1264 = !DILocalVariable(name: "s", arg: 1, scope: !1244, file: !1129, line: 208, type: !373)
!1265 = !DILocation(line: 208, column: 39, scope: !1244)
!1266 = !DILocation(line: 212, column: 8, scope: !1244)
!1267 = !DILocation(line: 219, column: 5, scope: !1244)
!1268 = !DILocation(line: 220, column: 2, scope: !1244)
!1269 = !DILocation(line: 213, column: 12, scope: !1244)
!1270 = !DILocation(line: 215, column: 19, scope: !1244)
!1271 = !DILocation(line: 214, column: 25, scope: !1244)
!1272 = !DILocation(line: 214, column: 20, scope: !1244)
!1273 = !DILocation(line: 214, column: 13, scope: !1244)
!1274 = !DILocation(line: 212, column: 5, scope: !1244)
!1275 = !DILocation(line: 216, column: 39, scope: !1244)
!1276 = !DILocation(line: 216, column: 25, scope: !1244)
!1277 = !DILocation(line: 216, column: 20, scope: !1244)
!1278 = !DILocation(line: 1, column: 1, scope: !1279)
!1279 = !DILexicalBlockFile(scope: !1244, file: !908, discriminator: 0)
!1280 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f32$GT$8from_str17hfddf7cf9edc5ca06E", scope: !1281, file: !794, line: 146, type: !1282, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !1302)
!1281 = !DINamespace(name: "{impl#2}", scope: !46)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!1284, !383}
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f32, core::num::dec2flt::ParseFloatError>", scope: !25, file: !2, size: 64, align: 32, elements: !1285, identifier: "a5ef78968d9c56d6d6a863c4375e7f8b")
!1285 = !{!1286}
!1286 = !DICompositeType(tag: DW_TAG_variant_part, scope: !25, file: !2, size: 64, align: 32, elements: !1287, templateParams: !1292, identifier: "a5ef78968d9c56d6d6a863c4375e7f8b_variant_part", discriminator: !1301)
!1287 = !{!1288, !1297}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1286, file: !2, baseType: !1289, size: 64, align: 32, extraData: i64 0)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1284, file: !2, size: 64, align: 32, elements: !1290, templateParams: !1292, identifier: "a5ef78968d9c56d6d6a863c4375e7f8b::Ok")
!1290 = !{!1291}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1289, file: !2, baseType: !510, size: 32, align: 32, offset: 32)
!1292 = !{!807, !1293}
!1293 = !DITemplateTypeParameter(name: "E", type: !1294)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseFloatError", scope: !46, file: !2, size: 8, align: 8, elements: !1295, templateParams: !4, identifier: "a2010f744b76ebe55c45b428e272186c")
!1295 = !{!1296}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1294, file: !2, baseType: !45, size: 8, align: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1286, file: !2, baseType: !1298, size: 64, align: 32, extraData: i64 1)
!1298 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1284, file: !2, size: 64, align: 32, elements: !1299, templateParams: !1292, identifier: "a5ef78968d9c56d6d6a863c4375e7f8b::Err")
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1298, file: !2, baseType: !1294, size: 8, align: 8, offset: 8)
!1301 = !DIDerivedType(tag: DW_TAG_member, scope: !25, file: !2, baseType: !8, size: 8, align: 8, flags: DIFlagArtificial)
!1302 = !{!1303}
!1303 = !DILocalVariable(name: "src", arg: 1, scope: !1280, file: !794, line: 146, type: !383)
!1304 = !DILocation(line: 146, column: 25, scope: !1280)
!1305 = !DILocation(line: 147, column: 17, scope: !1280)
!1306 = !DILocation(line: 148, column: 14, scope: !1280)
!1307 = distinct !DISubprogram(name: "from_str", linkageName: "_ZN4core3num7dec2flt60_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$f64$GT$8from_str17h91e473d99ed96614E", scope: !1308, file: !794, line: 146, type: !1309, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !1324)
!1308 = !DINamespace(name: "{impl#3}", scope: !46)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{!1311, !383}
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f64, core::num::dec2flt::ParseFloatError>", scope: !25, file: !2, size: 128, align: 64, elements: !1312, identifier: "a68dd3f807beb5f2cdefbca63b790e08")
!1312 = !{!1313}
!1313 = !DICompositeType(tag: DW_TAG_variant_part, scope: !25, file: !2, size: 128, align: 64, elements: !1314, templateParams: !1319, identifier: "a68dd3f807beb5f2cdefbca63b790e08_variant_part", discriminator: !1301)
!1314 = !{!1315, !1320}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !1313, file: !2, baseType: !1316, size: 128, align: 64, extraData: i64 0)
!1316 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !1311, file: !2, size: 128, align: 64, elements: !1317, templateParams: !1319, identifier: "a68dd3f807beb5f2cdefbca63b790e08::Ok")
!1317 = !{!1318}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1316, file: !2, baseType: !525, size: 64, align: 64, offset: 64)
!1319 = !{!824, !1293}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !1313, file: !2, baseType: !1321, size: 128, align: 64, extraData: i64 1)
!1321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !1311, file: !2, size: 128, align: 64, elements: !1322, templateParams: !1319, identifier: "a68dd3f807beb5f2cdefbca63b790e08::Err")
!1322 = !{!1323}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !1321, file: !2, baseType: !1294, size: 8, align: 8, offset: 8)
!1324 = !{!1325}
!1325 = !DILocalVariable(name: "src", arg: 1, scope: !1307, file: !794, line: 146, type: !383)
!1326 = !DILocation(line: 146, column: 25, scope: !1307)
!1327 = !DILocation(line: 147, column: 17, scope: !1307)
!1328 = !DILocation(line: 148, column: 14, scope: !1307)
!1329 = distinct !DISubprogram(name: "eq_ignore_case<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case17h95e7e3dde44852dbE", scope: !1331, file: !1330, line: 39, type: !1332, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1341, retainedNodes: !1334)
!1330 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/common.rs", directory: "", checksumkind: CSK_MD5, checksum: "1b7159404b0b19073796754e9e9217dc")
!1331 = !DINamespace(name: "ByteSlice", scope: !798)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!675, !373, !373}
!1334 = !{!1335, !1336, !1337, !1339}
!1335 = !DILocalVariable(name: "self", arg: 1, scope: !1329, file: !1330, line: 39, type: !373)
!1336 = !DILocalVariable(name: "u", arg: 2, scope: !1329, file: !1330, line: 39, type: !373)
!1337 = !DILocalVariable(name: "iter", scope: !1338, file: !1330, line: 41, type: !85, align: 8)
!1338 = distinct !DILexicalBlock(scope: !1329, file: !1330, line: 41, column: 9)
!1339 = !DILocalVariable(name: "d", scope: !1340, file: !1330, line: 42, type: !8, align: 1)
!1340 = distinct !DILexicalBlock(scope: !1338, file: !1330, line: 42, column: 9)
!1341 = !{!1342}
!1342 = !DITemplateTypeParameter(name: "Self", type: !693)
!1343 = !DILocation(line: 39, column: 23, scope: !1329)
!1344 = !DILocation(line: 39, column: 30, scope: !1329)
!1345 = !DILocation(line: 41, column: 13, scope: !1338)
!1346 = !DILocation(line: 41, column: 20, scope: !1329)
!1347 = !DILocation(line: 41, column: 45, scope: !1329)
!1348 = !DILocation(line: 42, column: 17, scope: !1338)
!1349 = !DILocation(line: 42, column: 13, scope: !1340)
!1350 = !DILocation(line: 43, column: 9, scope: !1340)
!1351 = !DILocation(line: 43, column: 19, scope: !1340)
!1352 = !DILocation(line: 44, column: 6, scope: !1329)
!1353 = distinct !DISubprogram(name: "{closure#0}<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice14eq_ignore_case28_$u7b$$u7b$closure$u7d$$u7d$17h284a14bbaae9f77bE", scope: !1354, file: !1330, line: 42, type: !1355, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1341, retainedNodes: !1359)
!1354 = !DINamespace(name: "eq_ignore_case", scope: !1331)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{!8, !1357, !8, !73}
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !1358, size: 64, align: 64, dwarfAddressSpace: 0)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !1354, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "e4a0a9ae229e3a0def2709ecd77d374")
!1359 = !{!1360, !1361, !1363, !1364, !1365}
!1360 = !DILocalVariable(name: "i", arg: 2, scope: !1353, file: !1330, line: 42, type: !8)
!1361 = !DILocalVariable(name: "x", scope: !1362, file: !1330, line: 42, type: !8, align: 1)
!1362 = distinct !DILexicalBlock(scope: !1353, file: !1330, line: 42, column: 44)
!1363 = !DILocalVariable(name: "y", scope: !1362, file: !1330, line: 42, type: !8, align: 1)
!1364 = !DILocalVariable(arg: 1, scope: !1353, file: !1330, line: 42, type: !1357)
!1365 = !DILocalVariable(arg: 3, scope: !1353, file: !1330, line: 42, type: !73)
!1366 = !DILocation(line: 42, column: 30, scope: !1353)
!1367 = !DILocation(line: 42, column: 31, scope: !1353)
!1368 = !DILocation(line: 42, column: 34, scope: !1353)
!1369 = !DILocation(line: 42, column: 36, scope: !1353)
!1370 = !DILocation(line: 42, column: 36, scope: !1362)
!1371 = !DILocation(line: 42, column: 40, scope: !1353)
!1372 = !DILocation(line: 42, column: 40, scope: !1362)
!1373 = !DILocation(line: 42, column: 48, scope: !1362)
!1374 = !DILocation(line: 42, column: 44, scope: !1362)
!1375 = !DILocation(line: 42, column: 55, scope: !1353)
!1376 = distinct !DISubprogram(name: "advance<[u8]>", linkageName: "_ZN4core3num7dec2flt6common9ByteSlice7advance17hec4a59ca6211db3bE", scope: !1331, file: !1330, line: 47, type: !1377, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1341, retainedNodes: !1379)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!373, !373, !109}
!1379 = !{!1380, !1381}
!1380 = !DILocalVariable(name: "self", arg: 1, scope: !1376, file: !1330, line: 47, type: !373)
!1381 = !DILocalVariable(name: "n", arg: 2, scope: !1376, file: !1330, line: 47, type: !109)
!1382 = !DILocation(line: 47, column: 16, scope: !1376)
!1383 = !DILocation(line: 47, column: 23, scope: !1376)
!1384 = !DILocation(line: 48, column: 10, scope: !1376)
!1385 = !DILocation(line: 48, column: 24, scope: !1376)
!1386 = !DILocation(line: 49, column: 6, scope: !1376)
!1387 = distinct !DISubprogram(name: "compute_float<f64>", linkageName: "_ZN4core3num7dec2flt6lemire13compute_float17hc8859f166756fda8E", scope: !1389, file: !1388, line: 27, type: !1390, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1393)
!1388 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/lemire.rs", directory: "", checksumkind: CSK_MD5, checksum: "2d4d6a51b9fdd5faa8317181eb388c28")
!1389 = !DINamespace(name: "lemire", scope: !46)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{!797, !1392, !83}
!1392 = !DIBasicType(name: "i64", size: 64, encoding: DW_ATE_signed)
!1393 = !{!1394, !1395, !1396, !1398, !1400, !1402, !1404, !1406, !1407, !1409, !1411, !1413}
!1394 = !DILocalVariable(name: "q", arg: 1, scope: !1387, file: !1388, line: 27, type: !1392)
!1395 = !DILocalVariable(name: "w", arg: 2, scope: !1387, file: !1388, line: 27, type: !83)
!1396 = !DILocalVariable(name: "fp_zero", scope: !1397, file: !1388, line: 28, type: !797, align: 8)
!1397 = distinct !DILexicalBlock(scope: !1387, file: !1388, line: 28, column: 5)
!1398 = !DILocalVariable(name: "fp_inf", scope: !1399, file: !1388, line: 29, type: !797, align: 8)
!1399 = distinct !DILexicalBlock(scope: !1397, file: !1388, line: 29, column: 5)
!1400 = !DILocalVariable(name: "fp_error", scope: !1401, file: !1388, line: 30, type: !797, align: 8)
!1401 = distinct !DILexicalBlock(scope: !1399, file: !1388, line: 30, column: 5)
!1402 = !DILocalVariable(name: "lz", scope: !1403, file: !1388, line: 39, type: !312, align: 4)
!1403 = distinct !DILexicalBlock(scope: !1401, file: !1388, line: 39, column: 5)
!1404 = !DILocalVariable(name: "lo", scope: !1405, file: !1388, line: 41, type: !83, align: 8)
!1405 = distinct !DILexicalBlock(scope: !1403, file: !1388, line: 41, column: 5)
!1406 = !DILocalVariable(name: "hi", scope: !1405, file: !1388, line: 41, type: !83, align: 8)
!1407 = !DILocalVariable(name: "inside_safe_exponent", scope: !1408, file: !1388, line: 58, type: !675, align: 1)
!1408 = distinct !DILexicalBlock(scope: !1405, file: !1388, line: 58, column: 9)
!1409 = !DILocalVariable(name: "upperbit", scope: !1410, file: !1388, line: 63, type: !511, align: 4)
!1410 = distinct !DILexicalBlock(scope: !1405, file: !1388, line: 63, column: 5)
!1411 = !DILocalVariable(name: "mantissa", scope: !1412, file: !1388, line: 64, type: !83, align: 8)
!1412 = distinct !DILexicalBlock(scope: !1410, file: !1388, line: 64, column: 5)
!1413 = !DILocalVariable(name: "power2", scope: !1414, file: !1388, line: 65, type: !511, align: 4)
!1414 = distinct !DILexicalBlock(scope: !1412, file: !1388, line: 65, column: 5)
!1415 = !DILocation(line: 27, column: 35, scope: !1387)
!1416 = !DILocation(line: 27, column: 43, scope: !1387)
!1417 = !DILocation(line: 58, column: 13, scope: !1408)
!1418 = !DILocation(line: 64, column: 9, scope: !1412)
!1419 = !DILocation(line: 65, column: 9, scope: !1414)
!1420 = !DILocation(line: 28, column: 19, scope: !1387)
!1421 = !DILocation(line: 28, column: 9, scope: !1397)
!1422 = !DILocation(line: 29, column: 18, scope: !1397)
!1423 = !DILocation(line: 29, column: 9, scope: !1399)
!1424 = !DILocation(line: 30, column: 20, scope: !1399)
!1425 = !DILocation(line: 30, column: 9, scope: !1401)
!1426 = !DILocation(line: 33, column: 8, scope: !1401)
!1427 = !DILocation(line: 33, column: 18, scope: !1401)
!1428 = !DILocation(line: 35, column: 15, scope: !1401)
!1429 = !DILocation(line: 34, column: 16, scope: !1401)
!1430 = !DILocation(line: 34, column: 9, scope: !1401)
!1431 = !DILocation(line: 1, column: 1, scope: !1432)
!1432 = !DILexicalBlockFile(scope: !1401, file: !908, discriminator: 0)
!1433 = !DILocation(line: 39, column: 14, scope: !1401)
!1434 = !DILocalVariable(name: "self", arg: 1, scope: !1435, file: !735, line: 118, type: !83)
!1435 = distinct !DISubprogram(name: "leading_zeros", linkageName: "_ZN4core3num21_$LT$impl$u20$u64$GT$13leading_zeros17h9927738ea3dcdd56E", scope: !736, file: !735, line: 118, type: !1436, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !1438)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!312, !83}
!1438 = !{!1434}
!1439 = !DILocation(line: 118, column: 36, scope: !1435, inlinedAt: !1440)
!1440 = distinct !DILocation(line: 39, column: 14, scope: !1401)
!1441 = !DILocation(line: 119, column: 13, scope: !1435, inlinedAt: !1440)
!1442 = !DILocation(line: 39, column: 9, scope: !1403)
!1443 = !DILocation(line: 36, column: 16, scope: !1401)
!1444 = !DILocation(line: 115, column: 2, scope: !1387)
!1445 = !DILocation(line: 40, column: 5, scope: !1403)
!1446 = !DILocation(line: 41, column: 46, scope: !1403)
!1447 = !DILocation(line: 41, column: 20, scope: !1403)
!1448 = !DILocation(line: 41, column: 10, scope: !1403)
!1449 = !DILocation(line: 41, column: 10, scope: !1405)
!1450 = !DILocation(line: 41, column: 14, scope: !1403)
!1451 = !DILocation(line: 41, column: 14, scope: !1405)
!1452 = !DILocation(line: 42, column: 8, scope: !1405)
!1453 = !DILocation(line: 58, column: 36, scope: !1405)
!1454 = !DILocation(line: 42, column: 5, scope: !1405)
!1455 = !DILocation(line: 63, column: 20, scope: !1405)
!1456 = !DILocation(line: 63, column: 9, scope: !1410)
!1457 = !DILocation(line: 64, column: 31, scope: !1410)
!1458 = !DILocation(line: 64, column: 30, scope: !1410)
!1459 = !DILocation(line: 64, column: 24, scope: !1410)
!1460 = !DILocation(line: 65, column: 28, scope: !1412)
!1461 = !DILocation(line: 65, column: 22, scope: !1412)
!1462 = !DILocation(line: 58, column: 50, scope: !1405)
!1463 = !DILocation(line: 59, column: 13, scope: !1408)
!1464 = !DILocation(line: 59, column: 12, scope: !1408)
!1465 = !DILocation(line: 60, column: 20, scope: !1408)
!1466 = !DILocation(line: 1, column: 1, scope: !1467)
!1467 = !DILexicalBlockFile(scope: !1405, file: !908, discriminator: 0)
!1468 = !DILocation(line: 66, column: 8, scope: !1414)
!1469 = !DILocation(line: 89, column: 8, scope: !1414)
!1470 = !DILocation(line: 67, column: 13, scope: !1414)
!1471 = !DILocation(line: 67, column: 12, scope: !1414)
!1472 = !DILocation(line: 72, column: 23, scope: !1414)
!1473 = !DILocation(line: 72, column: 22, scope: !1414)
!1474 = !DILocation(line: 72, column: 9, scope: !1414)
!1475 = !DILocation(line: 73, column: 21, scope: !1414)
!1476 = !DILocation(line: 73, column: 9, scope: !1414)
!1477 = !DILocation(line: 74, column: 9, scope: !1414)
!1478 = !DILocation(line: 75, column: 19, scope: !1414)
!1479 = !DILocation(line: 75, column: 18, scope: !1414)
!1480 = !DILocation(line: 75, column: 9, scope: !1414)
!1481 = !DILocation(line: 76, column: 30, scope: !1414)
!1482 = !DILocation(line: 76, column: 43, scope: !1414)
!1483 = !DILocation(line: 76, column: 16, scope: !1414)
!1484 = !DILocation(line: 76, column: 9, scope: !1414)
!1485 = !DILocation(line: 69, column: 20, scope: !1414)
!1486 = !DILocation(line: 1, column: 1, scope: !1487)
!1487 = !DILexicalBlockFile(scope: !1414, file: !908, discriminator: 0)
!1488 = !DILocation(line: 90, column: 12, scope: !1414)
!1489 = !DILocation(line: 91, column: 12, scope: !1414)
!1490 = !DILocation(line: 92, column: 12, scope: !1414)
!1491 = !DILocation(line: 93, column: 13, scope: !1414)
!1492 = !DILocation(line: 93, column: 26, scope: !1414)
!1493 = !DILocation(line: 93, column: 25, scope: !1414)
!1494 = !DILocation(line: 93, column: 12, scope: !1414)
!1495 = !DILocation(line: 99, column: 17, scope: !1414)
!1496 = !DILocation(line: 99, column: 5, scope: !1414)
!1497 = !DILocation(line: 100, column: 5, scope: !1414)
!1498 = !DILocation(line: 101, column: 8, scope: !1414)
!1499 = !DILocation(line: 96, column: 9, scope: !1414)
!1500 = !DILocation(line: 89, column: 5, scope: !1414)
!1501 = !DILocation(line: 109, column: 5, scope: !1414)
!1502 = !DILocation(line: 110, column: 8, scope: !1414)
!1503 = !DILocation(line: 105, column: 9, scope: !1414)
!1504 = !DILocation(line: 106, column: 9, scope: !1414)
!1505 = !DILocation(line: 101, column: 5, scope: !1414)
!1506 = !DILocation(line: 114, column: 19, scope: !1414)
!1507 = !DILocation(line: 114, column: 32, scope: !1414)
!1508 = !DILocation(line: 114, column: 5, scope: !1414)
!1509 = !DILocation(line: 112, column: 16, scope: !1414)
!1510 = distinct !DISubprogram(name: "compute_float<f32>", linkageName: "_ZN4core3num7dec2flt6lemire13compute_float17hd5e10d6c3cf83fd3E", scope: !1389, file: !1388, line: 27, type: !1390, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1511)
!1511 = !{!1512, !1513, !1514, !1516, !1518, !1520, !1522, !1524, !1525, !1527, !1529, !1531}
!1512 = !DILocalVariable(name: "q", arg: 1, scope: !1510, file: !1388, line: 27, type: !1392)
!1513 = !DILocalVariable(name: "w", arg: 2, scope: !1510, file: !1388, line: 27, type: !83)
!1514 = !DILocalVariable(name: "fp_zero", scope: !1515, file: !1388, line: 28, type: !797, align: 8)
!1515 = distinct !DILexicalBlock(scope: !1510, file: !1388, line: 28, column: 5)
!1516 = !DILocalVariable(name: "fp_inf", scope: !1517, file: !1388, line: 29, type: !797, align: 8)
!1517 = distinct !DILexicalBlock(scope: !1515, file: !1388, line: 29, column: 5)
!1518 = !DILocalVariable(name: "fp_error", scope: !1519, file: !1388, line: 30, type: !797, align: 8)
!1519 = distinct !DILexicalBlock(scope: !1517, file: !1388, line: 30, column: 5)
!1520 = !DILocalVariable(name: "lz", scope: !1521, file: !1388, line: 39, type: !312, align: 4)
!1521 = distinct !DILexicalBlock(scope: !1519, file: !1388, line: 39, column: 5)
!1522 = !DILocalVariable(name: "lo", scope: !1523, file: !1388, line: 41, type: !83, align: 8)
!1523 = distinct !DILexicalBlock(scope: !1521, file: !1388, line: 41, column: 5)
!1524 = !DILocalVariable(name: "hi", scope: !1523, file: !1388, line: 41, type: !83, align: 8)
!1525 = !DILocalVariable(name: "inside_safe_exponent", scope: !1526, file: !1388, line: 58, type: !675, align: 1)
!1526 = distinct !DILexicalBlock(scope: !1523, file: !1388, line: 58, column: 9)
!1527 = !DILocalVariable(name: "upperbit", scope: !1528, file: !1388, line: 63, type: !511, align: 4)
!1528 = distinct !DILexicalBlock(scope: !1523, file: !1388, line: 63, column: 5)
!1529 = !DILocalVariable(name: "mantissa", scope: !1530, file: !1388, line: 64, type: !83, align: 8)
!1530 = distinct !DILexicalBlock(scope: !1528, file: !1388, line: 64, column: 5)
!1531 = !DILocalVariable(name: "power2", scope: !1532, file: !1388, line: 65, type: !511, align: 4)
!1532 = distinct !DILexicalBlock(scope: !1530, file: !1388, line: 65, column: 5)
!1533 = !DILocation(line: 27, column: 35, scope: !1510)
!1534 = !DILocation(line: 27, column: 43, scope: !1510)
!1535 = !DILocation(line: 58, column: 13, scope: !1526)
!1536 = !DILocation(line: 64, column: 9, scope: !1530)
!1537 = !DILocation(line: 65, column: 9, scope: !1532)
!1538 = !DILocation(line: 28, column: 19, scope: !1510)
!1539 = !DILocation(line: 28, column: 9, scope: !1515)
!1540 = !DILocation(line: 29, column: 18, scope: !1515)
!1541 = !DILocation(line: 29, column: 9, scope: !1517)
!1542 = !DILocation(line: 30, column: 20, scope: !1517)
!1543 = !DILocation(line: 30, column: 9, scope: !1519)
!1544 = !DILocation(line: 33, column: 8, scope: !1519)
!1545 = !DILocation(line: 33, column: 18, scope: !1519)
!1546 = !DILocation(line: 35, column: 15, scope: !1519)
!1547 = !DILocation(line: 34, column: 16, scope: !1519)
!1548 = !DILocation(line: 34, column: 9, scope: !1519)
!1549 = !DILocation(line: 1, column: 1, scope: !1550)
!1550 = !DILexicalBlockFile(scope: !1519, file: !908, discriminator: 0)
!1551 = !DILocation(line: 39, column: 14, scope: !1519)
!1552 = !DILocation(line: 118, column: 36, scope: !1435, inlinedAt: !1553)
!1553 = distinct !DILocation(line: 39, column: 14, scope: !1519)
!1554 = !DILocation(line: 119, column: 13, scope: !1435, inlinedAt: !1553)
!1555 = !DILocation(line: 39, column: 9, scope: !1521)
!1556 = !DILocation(line: 36, column: 16, scope: !1519)
!1557 = !DILocation(line: 115, column: 2, scope: !1510)
!1558 = !DILocation(line: 40, column: 5, scope: !1521)
!1559 = !DILocation(line: 41, column: 46, scope: !1521)
!1560 = !DILocation(line: 41, column: 20, scope: !1521)
!1561 = !DILocation(line: 41, column: 10, scope: !1521)
!1562 = !DILocation(line: 41, column: 10, scope: !1523)
!1563 = !DILocation(line: 41, column: 14, scope: !1521)
!1564 = !DILocation(line: 41, column: 14, scope: !1523)
!1565 = !DILocation(line: 42, column: 8, scope: !1523)
!1566 = !DILocation(line: 58, column: 36, scope: !1523)
!1567 = !DILocation(line: 42, column: 5, scope: !1523)
!1568 = !DILocation(line: 63, column: 20, scope: !1523)
!1569 = !DILocation(line: 63, column: 9, scope: !1528)
!1570 = !DILocation(line: 64, column: 31, scope: !1528)
!1571 = !DILocation(line: 64, column: 30, scope: !1528)
!1572 = !DILocation(line: 64, column: 24, scope: !1528)
!1573 = !DILocation(line: 65, column: 28, scope: !1530)
!1574 = !DILocation(line: 65, column: 22, scope: !1530)
!1575 = !DILocation(line: 58, column: 50, scope: !1523)
!1576 = !DILocation(line: 59, column: 13, scope: !1526)
!1577 = !DILocation(line: 59, column: 12, scope: !1526)
!1578 = !DILocation(line: 60, column: 20, scope: !1526)
!1579 = !DILocation(line: 1, column: 1, scope: !1580)
!1580 = !DILexicalBlockFile(scope: !1523, file: !908, discriminator: 0)
!1581 = !DILocation(line: 66, column: 8, scope: !1532)
!1582 = !DILocation(line: 89, column: 8, scope: !1532)
!1583 = !DILocation(line: 67, column: 13, scope: !1532)
!1584 = !DILocation(line: 67, column: 12, scope: !1532)
!1585 = !DILocation(line: 72, column: 23, scope: !1532)
!1586 = !DILocation(line: 72, column: 22, scope: !1532)
!1587 = !DILocation(line: 72, column: 9, scope: !1532)
!1588 = !DILocation(line: 73, column: 21, scope: !1532)
!1589 = !DILocation(line: 73, column: 9, scope: !1532)
!1590 = !DILocation(line: 74, column: 9, scope: !1532)
!1591 = !DILocation(line: 75, column: 19, scope: !1532)
!1592 = !DILocation(line: 75, column: 18, scope: !1532)
!1593 = !DILocation(line: 75, column: 9, scope: !1532)
!1594 = !DILocation(line: 76, column: 30, scope: !1532)
!1595 = !DILocation(line: 76, column: 43, scope: !1532)
!1596 = !DILocation(line: 76, column: 16, scope: !1532)
!1597 = !DILocation(line: 76, column: 9, scope: !1532)
!1598 = !DILocation(line: 69, column: 20, scope: !1532)
!1599 = !DILocation(line: 1, column: 1, scope: !1600)
!1600 = !DILexicalBlockFile(scope: !1532, file: !908, discriminator: 0)
!1601 = !DILocation(line: 90, column: 12, scope: !1532)
!1602 = !DILocation(line: 91, column: 12, scope: !1532)
!1603 = !DILocation(line: 92, column: 12, scope: !1532)
!1604 = !DILocation(line: 93, column: 13, scope: !1532)
!1605 = !DILocation(line: 93, column: 26, scope: !1532)
!1606 = !DILocation(line: 93, column: 25, scope: !1532)
!1607 = !DILocation(line: 93, column: 12, scope: !1532)
!1608 = !DILocation(line: 99, column: 17, scope: !1532)
!1609 = !DILocation(line: 99, column: 5, scope: !1532)
!1610 = !DILocation(line: 100, column: 5, scope: !1532)
!1611 = !DILocation(line: 101, column: 8, scope: !1532)
!1612 = !DILocation(line: 96, column: 9, scope: !1532)
!1613 = !DILocation(line: 89, column: 5, scope: !1532)
!1614 = !DILocation(line: 109, column: 5, scope: !1532)
!1615 = !DILocation(line: 110, column: 8, scope: !1532)
!1616 = !DILocation(line: 105, column: 9, scope: !1532)
!1617 = !DILocation(line: 106, column: 9, scope: !1532)
!1618 = !DILocation(line: 101, column: 5, scope: !1532)
!1619 = !DILocation(line: 114, column: 19, scope: !1532)
!1620 = !DILocation(line: 114, column: 32, scope: !1532)
!1621 = !DILocation(line: 114, column: 5, scope: !1532)
!1622 = !DILocation(line: 112, column: 16, scope: !1532)
!1623 = distinct !DISubprogram(name: "is_fast_path<f32>", linkageName: "_ZN4core3num7dec2flt6number6Number12is_fast_path17h8016bb15f1584968E", scope: !1625, file: !1624, line: 36, type: !1632, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1635)
!1624 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/num/dec2flt/number.rs", directory: "", checksumkind: CSK_MD5, checksum: "722c3274acddffd30c60875f4e30a0d3")
!1625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Number", scope: !1626, file: !2, size: 192, align: 64, elements: !1627, templateParams: !4, identifier: "f7a2b4d9d02415f3c5cf3e9d538b1bc2")
!1626 = !DINamespace(name: "number", scope: !46)
!1627 = !{!1628, !1629, !1630, !1631}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "exponent", scope: !1625, file: !2, baseType: !1392, size: 64, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "mantissa", scope: !1625, file: !2, baseType: !83, size: 64, align: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "negative", scope: !1625, file: !2, baseType: !675, size: 8, align: 8, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "many_digits", scope: !1625, file: !2, baseType: !675, size: 8, align: 8, offset: 136)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!675, !1634}
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Number", baseType: !1625, size: 64, align: 64, dwarfAddressSpace: 0)
!1635 = !{!1636}
!1636 = !DILocalVariable(name: "self", arg: 1, scope: !1623, file: !1624, line: 36, type: !1634)
!1637 = !DILocation(line: 36, column: 34, scope: !1623)
!1638 = !DILocation(line: 37, column: 38, scope: !1623)
!1639 = !DILocation(line: 37, column: 9, scope: !1623)
!1640 = !DILocation(line: 38, column: 16, scope: !1623)
!1641 = !DILocation(line: 39, column: 16, scope: !1623)
!1642 = !DILocation(line: 40, column: 17, scope: !1623)
!1643 = !DILocation(line: 40, column: 16, scope: !1623)
!1644 = !DILocation(line: 41, column: 6, scope: !1623)
!1645 = distinct !DISubprogram(name: "is_fast_path<f64>", linkageName: "_ZN4core3num7dec2flt6number6Number12is_fast_path17hacbc41360462ff4eE", scope: !1625, file: !1624, line: 36, type: !1632, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1646)
!1646 = !{!1647}
!1647 = !DILocalVariable(name: "self", arg: 1, scope: !1645, file: !1624, line: 36, type: !1634)
!1648 = !DILocation(line: 36, column: 34, scope: !1645)
!1649 = !DILocation(line: 37, column: 38, scope: !1645)
!1650 = !DILocation(line: 37, column: 9, scope: !1645)
!1651 = !DILocation(line: 38, column: 16, scope: !1645)
!1652 = !DILocation(line: 39, column: 16, scope: !1645)
!1653 = !DILocation(line: 40, column: 17, scope: !1645)
!1654 = !DILocation(line: 40, column: 16, scope: !1645)
!1655 = !DILocation(line: 41, column: 6, scope: !1645)
!1656 = distinct !DISubprogram(name: "try_fast_path<f64>", linkageName: "_ZN4core3num7dec2flt6number6Number13try_fast_path17hbd6181af72375dd5E", scope: !1625, file: !1624, line: 52, type: !1657, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1659)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!1133, !1634}
!1659 = !{!1660, !1661, !1663, !1665, !1667, !1669, !1671, !1673}
!1660 = !DILocalVariable(name: "self", arg: 1, scope: !1656, file: !1624, line: 52, type: !1634)
!1661 = !DILocalVariable(name: "_cw", scope: !1662, file: !1624, line: 58, type: !220, align: 1)
!1662 = distinct !DILexicalBlock(scope: !1656, file: !1624, line: 58, column: 9)
!1663 = !DILocalVariable(name: "value", scope: !1664, file: !1624, line: 61, type: !525, align: 8)
!1664 = distinct !DILexicalBlock(scope: !1662, file: !1624, line: 61, column: 13)
!1665 = !DILocalVariable(name: "value", scope: !1666, file: !1624, line: 63, type: !525, align: 8)
!1666 = distinct !DILexicalBlock(scope: !1662, file: !1624, line: 63, column: 17)
!1667 = !DILocalVariable(name: "shift", scope: !1668, file: !1624, line: 71, type: !1392, align: 8)
!1668 = distinct !DILexicalBlock(scope: !1662, file: !1624, line: 71, column: 17)
!1669 = !DILocalVariable(name: "mantissa", scope: !1670, file: !1624, line: 72, type: !83, align: 8)
!1670 = distinct !DILexicalBlock(scope: !1668, file: !1624, line: 72, column: 17)
!1671 = !DILocalVariable(name: "residual", scope: !1672, file: !1624, line: 72, type: !329, align: 1)
!1672 = distinct !DILexicalBlock(scope: !1668, file: !1624, line: 72, column: 84)
!1673 = !DILocalVariable(name: "val", scope: !1674, file: !1624, line: 72, type: !83, align: 8)
!1674 = distinct !DILexicalBlock(scope: !1668, file: !1624, line: 72, column: 32)
!1675 = !DILocation(line: 52, column: 39, scope: !1656)
!1676 = !DILocation(line: 58, column: 13, scope: !1662)
!1677 = !DILocation(line: 61, column: 17, scope: !1664)
!1678 = !DILocation(line: 72, column: 84, scope: !1672)
!1679 = !DILocation(line: 58, column: 19, scope: !1656)
!1680 = !DILocation(line: 60, column: 12, scope: !1662)
!1681 = !DILocation(line: 83, column: 13, scope: !1662)
!1682 = !DILocation(line: 60, column: 9, scope: !1662)
!1683 = !DILocation(line: 61, column: 32, scope: !1662)
!1684 = !DILocation(line: 71, column: 29, scope: !1662)
!1685 = !DILocation(line: 71, column: 21, scope: !1668)
!1686 = !DILocation(line: 72, column: 32, scope: !1668)
!1687 = !DILocation(line: 72, column: 58, scope: !1668)
!1688 = !DILocation(line: 63, column: 41, scope: !1662)
!1689 = !DILocation(line: 63, column: 29, scope: !1662)
!1690 = !DILocation(line: 63, column: 21, scope: !1666)
!1691 = !DILocation(line: 64, column: 20, scope: !1666)
!1692 = !DILocation(line: 67, column: 48, scope: !1666)
!1693 = !DILocation(line: 67, column: 29, scope: !1666)
!1694 = !DILocation(line: 65, column: 50, scope: !1666)
!1695 = !DILocation(line: 65, column: 48, scope: !1666)
!1696 = !DILocation(line: 65, column: 29, scope: !1666)
!1697 = !DILocation(line: 65, column: 21, scope: !1666)
!1698 = !DILocation(line: 64, column: 17, scope: !1666)
!1699 = !DILocation(line: 61, column: 29, scope: !1662)
!1700 = !DILocation(line: 67, column: 21, scope: !1666)
!1701 = !DILocation(line: 78, column: 16, scope: !1664)
!1702 = !DILocation(line: 72, column: 32, scope: !1674)
!1703 = !DILocation(line: 72, column: 21, scope: !1670)
!1704 = !DILocation(line: 73, column: 20, scope: !1670)
!1705 = !DILocation(line: 72, column: 32, scope: !1672)
!1706 = !DILocation(line: 1, column: 1, scope: !1707)
!1707 = !DILexicalBlockFile(scope: !1668, file: !908, discriminator: 0)
!1708 = !DILocation(line: 85, column: 6, scope: !1656)
!1709 = !DILocation(line: 76, column: 17, scope: !1670)
!1710 = !DILocation(line: 74, column: 28, scope: !1670)
!1711 = !DILocation(line: 1, column: 1, scope: !1712)
!1712 = !DILexicalBlockFile(scope: !1670, file: !908, discriminator: 0)
!1713 = !DILocation(line: 76, column: 41, scope: !1670)
!1714 = !DILocation(line: 81, column: 18, scope: !1664)
!1715 = !DILocation(line: 81, column: 13, scope: !1664)
!1716 = !DILocation(line: 79, column: 26, scope: !1664)
!1717 = !DILocation(line: 79, column: 25, scope: !1664)
!1718 = !DILocation(line: 79, column: 17, scope: !1664)
!1719 = !DILocation(line: 78, column: 13, scope: !1664)
!1720 = distinct !DISubprogram(name: "try_fast_path<f32>", linkageName: "_ZN4core3num7dec2flt6number6Number13try_fast_path17hc8d65b680acba754E", scope: !1625, file: !1624, line: 52, type: !1721, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1723)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!1171, !1634}
!1723 = !{!1724, !1725, !1727, !1729, !1731, !1733, !1735, !1737}
!1724 = !DILocalVariable(name: "self", arg: 1, scope: !1720, file: !1624, line: 52, type: !1634)
!1725 = !DILocalVariable(name: "_cw", scope: !1726, file: !1624, line: 58, type: !220, align: 1)
!1726 = distinct !DILexicalBlock(scope: !1720, file: !1624, line: 58, column: 9)
!1727 = !DILocalVariable(name: "value", scope: !1728, file: !1624, line: 61, type: !510, align: 4)
!1728 = distinct !DILexicalBlock(scope: !1726, file: !1624, line: 61, column: 13)
!1729 = !DILocalVariable(name: "value", scope: !1730, file: !1624, line: 63, type: !510, align: 4)
!1730 = distinct !DILexicalBlock(scope: !1726, file: !1624, line: 63, column: 17)
!1731 = !DILocalVariable(name: "shift", scope: !1732, file: !1624, line: 71, type: !1392, align: 8)
!1732 = distinct !DILexicalBlock(scope: !1726, file: !1624, line: 71, column: 17)
!1733 = !DILocalVariable(name: "mantissa", scope: !1734, file: !1624, line: 72, type: !83, align: 8)
!1734 = distinct !DILexicalBlock(scope: !1732, file: !1624, line: 72, column: 17)
!1735 = !DILocalVariable(name: "residual", scope: !1736, file: !1624, line: 72, type: !329, align: 1)
!1736 = distinct !DILexicalBlock(scope: !1732, file: !1624, line: 72, column: 84)
!1737 = !DILocalVariable(name: "val", scope: !1738, file: !1624, line: 72, type: !83, align: 8)
!1738 = distinct !DILexicalBlock(scope: !1732, file: !1624, line: 72, column: 32)
!1739 = !DILocation(line: 52, column: 39, scope: !1720)
!1740 = !DILocation(line: 58, column: 13, scope: !1726)
!1741 = !DILocation(line: 61, column: 17, scope: !1728)
!1742 = !DILocation(line: 72, column: 84, scope: !1736)
!1743 = !DILocation(line: 58, column: 19, scope: !1720)
!1744 = !DILocation(line: 60, column: 12, scope: !1726)
!1745 = !DILocation(line: 83, column: 13, scope: !1726)
!1746 = !DILocation(line: 60, column: 9, scope: !1726)
!1747 = !DILocation(line: 61, column: 32, scope: !1726)
!1748 = !DILocation(line: 71, column: 29, scope: !1726)
!1749 = !DILocation(line: 71, column: 21, scope: !1732)
!1750 = !DILocation(line: 72, column: 32, scope: !1732)
!1751 = !DILocation(line: 72, column: 58, scope: !1732)
!1752 = !DILocation(line: 63, column: 41, scope: !1726)
!1753 = !DILocation(line: 63, column: 29, scope: !1726)
!1754 = !DILocation(line: 63, column: 21, scope: !1730)
!1755 = !DILocation(line: 64, column: 20, scope: !1730)
!1756 = !DILocation(line: 67, column: 48, scope: !1730)
!1757 = !DILocation(line: 67, column: 29, scope: !1730)
!1758 = !DILocation(line: 65, column: 50, scope: !1730)
!1759 = !DILocation(line: 65, column: 48, scope: !1730)
!1760 = !DILocation(line: 65, column: 29, scope: !1730)
!1761 = !DILocation(line: 65, column: 21, scope: !1730)
!1762 = !DILocation(line: 64, column: 17, scope: !1730)
!1763 = !DILocation(line: 61, column: 29, scope: !1726)
!1764 = !DILocation(line: 67, column: 21, scope: !1730)
!1765 = !DILocation(line: 78, column: 16, scope: !1728)
!1766 = !DILocation(line: 72, column: 32, scope: !1738)
!1767 = !DILocation(line: 72, column: 21, scope: !1734)
!1768 = !DILocation(line: 73, column: 20, scope: !1734)
!1769 = !DILocation(line: 72, column: 32, scope: !1736)
!1770 = !DILocation(line: 1, column: 1, scope: !1771)
!1771 = !DILexicalBlockFile(scope: !1732, file: !908, discriminator: 0)
!1772 = !DILocation(line: 85, column: 6, scope: !1720)
!1773 = !DILocation(line: 76, column: 17, scope: !1734)
!1774 = !DILocation(line: 74, column: 28, scope: !1734)
!1775 = !DILocation(line: 1, column: 1, scope: !1776)
!1776 = !DILexicalBlockFile(scope: !1734, file: !908, discriminator: 0)
!1777 = !DILocation(line: 76, column: 41, scope: !1734)
!1778 = !DILocation(line: 81, column: 18, scope: !1728)
!1779 = !DILocation(line: 81, column: 13, scope: !1728)
!1780 = !DILocation(line: 79, column: 26, scope: !1728)
!1781 = !DILocation(line: 79, column: 25, scope: !1728)
!1782 = !DILocation(line: 79, column: 17, scope: !1728)
!1783 = !DILocation(line: 78, column: 13, scope: !1728)
!1784 = distinct !DISubprogram(name: "dec2flt<f32>", linkageName: "_ZN4core3num7dec2flt7dec2flt17h193ae62556cd86b5E", scope: !46, file: !794, line: 222, type: !1282, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !1785)
!1785 = !{!1786, !1787, !1789, !1791, !1793, !1795, !1797, !1799, !1801, !1803, !1805}
!1786 = !DILocalVariable(name: "s", arg: 1, scope: !1784, file: !794, line: 222, type: !383)
!1787 = !DILocalVariable(name: "s", scope: !1788, file: !794, line: 223, type: !373, align: 8)
!1788 = distinct !DILexicalBlock(scope: !1784, file: !794, line: 223, column: 5)
!1789 = !DILocalVariable(name: "c", scope: !1790, file: !794, line: 224, type: !8, align: 1)
!1790 = distinct !DILexicalBlock(scope: !1788, file: !794, line: 224, column: 5)
!1791 = !DILocalVariable(name: "c", scope: !1792, file: !794, line: 224, type: !8, align: 1)
!1792 = distinct !DILexicalBlock(scope: !1788, file: !794, line: 224, column: 20)
!1793 = !DILocalVariable(name: "negative", scope: !1794, file: !794, line: 229, type: !675, align: 1)
!1794 = distinct !DILexicalBlock(scope: !1790, file: !794, line: 229, column: 5)
!1795 = !DILocalVariable(name: "num", scope: !1796, file: !794, line: 237, type: !1625, align: 8)
!1796 = distinct !DILexicalBlock(scope: !1794, file: !794, line: 237, column: 5)
!1797 = !DILocalVariable(name: "r", scope: !1798, file: !794, line: 238, type: !1625, align: 8)
!1798 = distinct !DILexicalBlock(scope: !1794, file: !794, line: 238, column: 9)
!1799 = !DILocalVariable(name: "value", scope: !1800, file: !794, line: 239, type: !510, align: 4)
!1800 = distinct !DILexicalBlock(scope: !1794, file: !794, line: 239, column: 9)
!1801 = !DILocalVariable(name: "value", scope: !1802, file: !794, line: 242, type: !510, align: 4)
!1802 = distinct !DILexicalBlock(scope: !1796, file: !794, line: 242, column: 12)
!1803 = !DILocalVariable(name: "fp", scope: !1804, file: !794, line: 250, type: !797, align: 8)
!1804 = distinct !DILexicalBlock(scope: !1796, file: !794, line: 250, column: 5)
!1805 = !DILocalVariable(name: "float", scope: !1806, file: !794, line: 260, type: !510, align: 4)
!1806 = distinct !DILexicalBlock(scope: !1804, file: !794, line: 260, column: 5)
!1807 = !DILocation(line: 222, column: 29, scope: !1784)
!1808 = !DILocation(line: 223, column: 9, scope: !1788)
!1809 = !DILocation(line: 237, column: 9, scope: !1796)
!1810 = !DILocation(line: 238, column: 14, scope: !1798)
!1811 = !DILocation(line: 250, column: 9, scope: !1804)
!1812 = !DILocation(line: 260, column: 9, scope: !1806)
!1813 = !DILocalVariable(name: "self", arg: 1, scope: !1814, file: !1815, line: 235, type: !383)
!1814 = distinct !DISubprogram(name: "as_bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8as_bytes17h965286b1f8aa9597E", scope: !1816, file: !1815, line: 235, type: !1817, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !1819)
!1815 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "b7b520611187314acaad1212020f8f10")
!1816 = !DINamespace(name: "{impl#0}", scope: !146)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!373, !383}
!1819 = !{!1813}
!1820 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !1821)
!1821 = distinct !DILocation(line: 223, column: 17, scope: !1784)
!1822 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !1821)
!1823 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !1821)
!1824 = !DILocation(line: 223, column: 17, scope: !1784)
!1825 = !DILocation(line: 224, column: 31, scope: !1788)
!1826 = !DILocation(line: 224, column: 20, scope: !1788)
!1827 = !DILocation(line: 224, column: 26, scope: !1788)
!1828 = !DILocation(line: 224, column: 26, scope: !1792)
!1829 = !DILocation(line: 225, column: 9, scope: !1788)
!1830 = !DILocation(line: 224, column: 9, scope: !1790)
!1831 = !DILocation(line: 229, column: 20, scope: !1790)
!1832 = !DILocation(line: 229, column: 9, scope: !1794)
!1833 = !DILocation(line: 230, column: 8, scope: !1794)
!1834 = !DILocation(line: 227, column: 20, scope: !1788)
!1835 = !DILocation(line: 227, column: 16, scope: !1788)
!1836 = !DILocation(line: 1, column: 1, scope: !1837)
!1837 = !DILexicalBlockFile(scope: !1788, file: !908, discriminator: 0)
!1838 = !DILocation(line: 265, column: 2, scope: !1784)
!1839 = !DILocation(line: 230, column: 21, scope: !1794)
!1840 = !DILocation(line: 233, column: 8, scope: !1794)
!1841 = !DILocation(line: 231, column: 13, scope: !1794)
!1842 = !DILocation(line: 231, column: 9, scope: !1794)
!1843 = !DILocation(line: 230, column: 5, scope: !1794)
!1844 = !DILocation(line: 237, column: 34, scope: !1794)
!1845 = !DILocation(line: 237, column: 21, scope: !1794)
!1846 = !DILocation(line: 234, column: 20, scope: !1794)
!1847 = !DILocation(line: 234, column: 16, scope: !1794)
!1848 = !DILocation(line: 1, column: 1, scope: !1849)
!1849 = !DILexicalBlockFile(scope: !1794, file: !908, discriminator: 0)
!1850 = !DILocation(line: 1, column: 1, scope: !1851)
!1851 = !DILexicalBlockFile(scope: !1790, file: !908, discriminator: 0)
!1852 = !{i8 0, i8 3}
!1853 = !DILocation(line: 237, column: 15, scope: !1794)
!1854 = !DILocation(line: 239, column: 49, scope: !1794)
!1855 = !DILocation(line: 239, column: 35, scope: !1794)
!1856 = !DILocation(line: 238, column: 14, scope: !1794)
!1857 = !DILocation(line: 238, column: 20, scope: !1798)
!1858 = !DILocation(line: 242, column: 26, scope: !1796)
!1859 = !DILocation(line: 242, column: 12, scope: !1796)
!1860 = !DILocation(line: 242, column: 17, scope: !1796)
!1861 = !DILocation(line: 242, column: 17, scope: !1802)
!1862 = !DILocation(line: 243, column: 16, scope: !1796)
!1863 = !DILocation(line: 1, column: 1, scope: !1864)
!1864 = !DILexicalBlockFile(scope: !1796, file: !908, discriminator: 0)
!1865 = !DILocation(line: 250, column: 37, scope: !1796)
!1866 = !DILocation(line: 250, column: 51, scope: !1796)
!1867 = !DILocation(line: 250, column: 18, scope: !1796)
!1868 = !DILocation(line: 251, column: 8, scope: !1804)
!1869 = !DILocation(line: 251, column: 27, scope: !1804)
!1870 = !DILocation(line: 251, column: 65, scope: !1804)
!1871 = !DILocation(line: 251, column: 79, scope: !1804)
!1872 = !DILocation(line: 251, column: 46, scope: !1804)
!1873 = !DILocation(line: 251, column: 40, scope: !1804)
!1874 = !DILocation(line: 256, column: 8, scope: !1804)
!1875 = !DILocation(line: 252, column: 9, scope: !1804)
!1876 = !DILocation(line: 251, column: 5, scope: !1804)
!1877 = !DILocation(line: 260, column: 45, scope: !1804)
!1878 = !DILocation(line: 260, column: 21, scope: !1804)
!1879 = !DILocation(line: 257, column: 39, scope: !1804)
!1880 = !DILocation(line: 257, column: 14, scope: !1804)
!1881 = !DILocation(line: 257, column: 9, scope: !1804)
!1882 = !DILocation(line: 256, column: 5, scope: !1804)
!1883 = !DILocation(line: 261, column: 8, scope: !1806)
!1884 = !DILocation(line: 264, column: 8, scope: !1806)
!1885 = !DILocation(line: 264, column: 5, scope: !1806)
!1886 = !DILocation(line: 262, column: 18, scope: !1806)
!1887 = !DILocation(line: 262, column: 17, scope: !1806)
!1888 = !DILocation(line: 262, column: 9, scope: !1806)
!1889 = !DILocation(line: 261, column: 5, scope: !1806)
!1890 = !DILocation(line: 239, column: 21, scope: !1794)
!1891 = !DILocation(line: 239, column: 26, scope: !1794)
!1892 = !DILocation(line: 239, column: 26, scope: !1800)
!1893 = !DILocation(line: 239, column: 72, scope: !1794)
!1894 = !DILocation(line: 240, column: 28, scope: !1794)
!1895 = !DILocation(line: 240, column: 24, scope: !1794)
!1896 = !DILocation(line: 240, column: 17, scope: !1794)
!1897 = distinct !DISubprogram(name: "dec2flt<f64>", linkageName: "_ZN4core3num7dec2flt7dec2flt17he47d22f84eb69cc7E", scope: !46, file: !794, line: 222, type: !1309, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !1898)
!1898 = !{!1899, !1900, !1902, !1904, !1906, !1908, !1910, !1912, !1914, !1916, !1918}
!1899 = !DILocalVariable(name: "s", arg: 1, scope: !1897, file: !794, line: 222, type: !383)
!1900 = !DILocalVariable(name: "s", scope: !1901, file: !794, line: 223, type: !373, align: 8)
!1901 = distinct !DILexicalBlock(scope: !1897, file: !794, line: 223, column: 5)
!1902 = !DILocalVariable(name: "c", scope: !1903, file: !794, line: 224, type: !8, align: 1)
!1903 = distinct !DILexicalBlock(scope: !1901, file: !794, line: 224, column: 5)
!1904 = !DILocalVariable(name: "c", scope: !1905, file: !794, line: 224, type: !8, align: 1)
!1905 = distinct !DILexicalBlock(scope: !1901, file: !794, line: 224, column: 20)
!1906 = !DILocalVariable(name: "negative", scope: !1907, file: !794, line: 229, type: !675, align: 1)
!1907 = distinct !DILexicalBlock(scope: !1903, file: !794, line: 229, column: 5)
!1908 = !DILocalVariable(name: "num", scope: !1909, file: !794, line: 237, type: !1625, align: 8)
!1909 = distinct !DILexicalBlock(scope: !1907, file: !794, line: 237, column: 5)
!1910 = !DILocalVariable(name: "r", scope: !1911, file: !794, line: 238, type: !1625, align: 8)
!1911 = distinct !DILexicalBlock(scope: !1907, file: !794, line: 238, column: 9)
!1912 = !DILocalVariable(name: "value", scope: !1913, file: !794, line: 239, type: !525, align: 8)
!1913 = distinct !DILexicalBlock(scope: !1907, file: !794, line: 239, column: 9)
!1914 = !DILocalVariable(name: "value", scope: !1915, file: !794, line: 242, type: !525, align: 8)
!1915 = distinct !DILexicalBlock(scope: !1909, file: !794, line: 242, column: 12)
!1916 = !DILocalVariable(name: "fp", scope: !1917, file: !794, line: 250, type: !797, align: 8)
!1917 = distinct !DILexicalBlock(scope: !1909, file: !794, line: 250, column: 5)
!1918 = !DILocalVariable(name: "float", scope: !1919, file: !794, line: 260, type: !525, align: 8)
!1919 = distinct !DILexicalBlock(scope: !1917, file: !794, line: 260, column: 5)
!1920 = !DILocation(line: 222, column: 29, scope: !1897)
!1921 = !DILocation(line: 223, column: 9, scope: !1901)
!1922 = !DILocation(line: 237, column: 9, scope: !1909)
!1923 = !DILocation(line: 238, column: 14, scope: !1911)
!1924 = !DILocation(line: 250, column: 9, scope: !1917)
!1925 = !DILocation(line: 260, column: 9, scope: !1919)
!1926 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !1927)
!1927 = distinct !DILocation(line: 223, column: 17, scope: !1897)
!1928 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !1927)
!1929 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !1927)
!1930 = !DILocation(line: 223, column: 17, scope: !1897)
!1931 = !DILocation(line: 224, column: 31, scope: !1901)
!1932 = !DILocation(line: 224, column: 20, scope: !1901)
!1933 = !DILocation(line: 224, column: 26, scope: !1901)
!1934 = !DILocation(line: 224, column: 26, scope: !1905)
!1935 = !DILocation(line: 225, column: 9, scope: !1901)
!1936 = !DILocation(line: 224, column: 9, scope: !1903)
!1937 = !DILocation(line: 229, column: 20, scope: !1903)
!1938 = !DILocation(line: 229, column: 9, scope: !1907)
!1939 = !DILocation(line: 230, column: 8, scope: !1907)
!1940 = !DILocation(line: 227, column: 20, scope: !1901)
!1941 = !DILocation(line: 227, column: 16, scope: !1901)
!1942 = !DILocation(line: 1, column: 1, scope: !1943)
!1943 = !DILexicalBlockFile(scope: !1901, file: !908, discriminator: 0)
!1944 = !DILocation(line: 265, column: 2, scope: !1897)
!1945 = !DILocation(line: 230, column: 21, scope: !1907)
!1946 = !DILocation(line: 233, column: 8, scope: !1907)
!1947 = !DILocation(line: 231, column: 13, scope: !1907)
!1948 = !DILocation(line: 231, column: 9, scope: !1907)
!1949 = !DILocation(line: 230, column: 5, scope: !1907)
!1950 = !DILocation(line: 237, column: 34, scope: !1907)
!1951 = !DILocation(line: 237, column: 21, scope: !1907)
!1952 = !DILocation(line: 234, column: 20, scope: !1907)
!1953 = !DILocation(line: 234, column: 16, scope: !1907)
!1954 = !DILocation(line: 1, column: 1, scope: !1955)
!1955 = !DILexicalBlockFile(scope: !1907, file: !908, discriminator: 0)
!1956 = !DILocation(line: 1, column: 1, scope: !1957)
!1957 = !DILexicalBlockFile(scope: !1903, file: !908, discriminator: 0)
!1958 = !DILocation(line: 237, column: 15, scope: !1907)
!1959 = !DILocation(line: 239, column: 49, scope: !1907)
!1960 = !DILocation(line: 239, column: 35, scope: !1907)
!1961 = !DILocation(line: 238, column: 14, scope: !1907)
!1962 = !DILocation(line: 238, column: 20, scope: !1911)
!1963 = !DILocation(line: 242, column: 26, scope: !1909)
!1964 = !DILocation(line: 242, column: 12, scope: !1909)
!1965 = !DILocation(line: 242, column: 17, scope: !1909)
!1966 = !DILocation(line: 242, column: 17, scope: !1915)
!1967 = !DILocation(line: 243, column: 16, scope: !1909)
!1968 = !DILocation(line: 1, column: 1, scope: !1969)
!1969 = !DILexicalBlockFile(scope: !1909, file: !908, discriminator: 0)
!1970 = !DILocation(line: 250, column: 37, scope: !1909)
!1971 = !DILocation(line: 250, column: 51, scope: !1909)
!1972 = !DILocation(line: 250, column: 18, scope: !1909)
!1973 = !DILocation(line: 251, column: 8, scope: !1917)
!1974 = !DILocation(line: 251, column: 27, scope: !1917)
!1975 = !DILocation(line: 251, column: 65, scope: !1917)
!1976 = !DILocation(line: 251, column: 79, scope: !1917)
!1977 = !DILocation(line: 251, column: 46, scope: !1917)
!1978 = !DILocation(line: 251, column: 40, scope: !1917)
!1979 = !DILocation(line: 256, column: 8, scope: !1917)
!1980 = !DILocation(line: 252, column: 9, scope: !1917)
!1981 = !DILocation(line: 251, column: 5, scope: !1917)
!1982 = !DILocation(line: 260, column: 45, scope: !1917)
!1983 = !DILocation(line: 260, column: 21, scope: !1917)
!1984 = !DILocation(line: 257, column: 39, scope: !1917)
!1985 = !DILocation(line: 257, column: 14, scope: !1917)
!1986 = !DILocation(line: 257, column: 9, scope: !1917)
!1987 = !DILocation(line: 256, column: 5, scope: !1917)
!1988 = !DILocation(line: 261, column: 8, scope: !1919)
!1989 = !DILocation(line: 264, column: 8, scope: !1919)
!1990 = !DILocation(line: 264, column: 5, scope: !1919)
!1991 = !DILocation(line: 262, column: 18, scope: !1919)
!1992 = !DILocation(line: 262, column: 17, scope: !1919)
!1993 = !DILocation(line: 262, column: 9, scope: !1919)
!1994 = !DILocation(line: 261, column: 5, scope: !1919)
!1995 = !DILocation(line: 239, column: 21, scope: !1907)
!1996 = !DILocation(line: 239, column: 26, scope: !1907)
!1997 = !DILocation(line: 239, column: 26, scope: !1913)
!1998 = !DILocation(line: 239, column: 72, scope: !1907)
!1999 = !DILocation(line: 240, column: 28, scope: !1907)
!2000 = !DILocation(line: 240, column: 24, scope: !1907)
!2001 = !DILocation(line: 240, column: 17, scope: !1907)
!2002 = distinct !DISubprogram(name: "call_once<fn(&usize, &usize) -> core::cmp::Ordering, (&usize, &usize)>", linkageName: "_ZN4core3ops8function6FnOnce9call_once17h5d8b4d52c0e39bb0E", scope: !2004, file: !2003, line: 227, type: !2006, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2015, retainedNodes: !2008)
!2003 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ops/function.rs", directory: "", checksumkind: CSK_MD5, checksum: "1a40c014f8a7b8b7cd612b461a47e902")
!2004 = !DINamespace(name: "FnOnce", scope: !2005)
!2005 = !DINamespace(name: "function", scope: !19)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!38, !706, !654, !654}
!2008 = !{!2009, !2010}
!2009 = !DILocalVariable(arg: 1, scope: !2002, file: !2003, line: 227, type: !706)
!2010 = !DILocalVariable(arg: 2, scope: !2002, file: !2003, line: 227, type: !2011)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "(&usize, &usize)", file: !2, size: 128, align: 64, elements: !2012, templateParams: !4, identifier: "4bc227a7fa9c3d458d76f51eddc3e0bc")
!2012 = !{!2013, !2014}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2011, file: !2, baseType: !654, size: 64, align: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !2011, file: !2, baseType: !654, size: 64, align: 64, offset: 64)
!2015 = !{!2016, !2017}
!2016 = !DITemplateTypeParameter(name: "Self", type: !706)
!2017 = !DITemplateTypeParameter(name: "Args", type: !2011)
!2018 = !DILocation(line: 227, column: 5, scope: !2002)
!2019 = distinct !DISubprogram(name: "slice_from_raw_parts<u8>", linkageName: "_ZN4core3ptr20slice_from_raw_parts17hc86f76d7a6485995E", scope: !95, file: !2020, line: 257, type: !2021, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2023)
!2020 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "207736266ff0d04d675044b37a0a2de6")
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!245, !98, !109}
!2023 = !{!2024, !2025}
!2024 = !DILocalVariable(name: "data", arg: 1, scope: !2019, file: !2020, line: 257, type: !98)
!2025 = !DILocalVariable(name: "len", arg: 2, scope: !2019, file: !2020, line: 257, type: !109)
!2026 = !DILocation(line: 257, column: 38, scope: !2019)
!2027 = !DILocation(line: 257, column: 54, scope: !2019)
!2028 = !DILocation(line: 258, column: 20, scope: !2019)
!2029 = !DILocation(line: 258, column: 5, scope: !2019)
!2030 = !DILocation(line: 259, column: 2, scope: !2019)
!2031 = distinct !DISubprogram(name: "drop_in_place<&num_traits::FloatErrorKind>", linkageName: "_ZN4core3ptr51drop_in_place$LT$$RF$num_traits..FloatErrorKind$GT$17hacc6e33a0073cd64E", scope: !95, file: !2020, line: 188, type: !2032, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2037, retainedNodes: !2035)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !2034}
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mut &FloatErrorKind", baseType: !5, size: 64, align: 64, dwarfAddressSpace: 0)
!2035 = !{!2036}
!2036 = !DILocalVariable(arg: 1, scope: !2031, file: !2020, line: 188, type: !2034)
!2037 = !{!2038}
!2038 = !DITemplateTypeParameter(name: "T", type: !5)
!2039 = !DILocation(line: 188, column: 1, scope: !2031)
!2040 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$13guaranteed_eq17hb5389b5bfc28251dE", scope: !2042, file: !2041, line: 433, type: !2044, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2046)
!2041 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/mut_ptr.rs", directory: "", checksumkind: CSK_MD5, checksum: "dc9433fa5edb0740532b3ed97e3aaa10")
!2042 = !DINamespace(name: "{impl#0}", scope: !2043)
!2043 = !DINamespace(name: "mut_ptr", scope: !95)
!2044 = !DISubroutineType(types: !2045)
!2045 = !{!675, !551, !551}
!2046 = !{!2047, !2048}
!2047 = !DILocalVariable(name: "self", arg: 1, scope: !2040, file: !2041, line: 433, type: !551)
!2048 = !DILocalVariable(name: "other", arg: 2, scope: !2040, file: !2041, line: 433, type: !551)
!2049 = !DILocation(line: 433, column: 32, scope: !2040)
!2050 = !DILocation(line: 433, column: 38, scope: !2040)
!2051 = !DILocation(line: 437, column: 9, scope: !2040)
!2052 = !DILocation(line: 438, column: 6, scope: !2040)
!2053 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$7is_null17hcf7dfc9c26e0d15aE", scope: !2042, file: !2041, line: 36, type: !2054, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2056)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!675, !551}
!2056 = !{!2057}
!2057 = !DILocalVariable(name: "self", arg: 1, scope: !2053, file: !2041, line: 36, type: !551)
!2058 = !DILocation(line: 36, column: 26, scope: !2053)
!2059 = !DILocation(line: 39, column: 41, scope: !2053)
!2060 = !DILocation(line: 39, column: 9, scope: !2053)
!2061 = !DILocation(line: 40, column: 6, scope: !2053)
!2062 = distinct !DISubprogram(name: "from_raw_parts<[u8]>", linkageName: "_ZN4core3ptr8metadata14from_raw_parts17h3edb511186dd2debE", scope: !2064, file: !2063, line: 110, type: !2065, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !729, retainedNodes: !2068)
!2063 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/metadata.rs", directory: "", checksumkind: CSK_MD5, checksum: "1c0696840ef99c8132b364245b959d8b")
!2064 = !DINamespace(name: "metadata", scope: !95)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!245, !2067, !109}
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*const ()", baseType: !220, size: 64, align: 64, dwarfAddressSpace: 0)
!2068 = !{!2069, !2070}
!2069 = !DILocalVariable(name: "data_address", arg: 1, scope: !2062, file: !2063, line: 111, type: !2067)
!2070 = !DILocalVariable(name: "metadata", arg: 2, scope: !2062, file: !2063, line: 112, type: !109)
!2071 = !DILocation(line: 111, column: 5, scope: !2062)
!2072 = !DILocation(line: 112, column: 5, scope: !2062)
!2073 = !DILocation(line: 117, column: 36, scope: !2062)
!2074 = !DILocation(line: 117, column: 14, scope: !2062)
!2075 = !DILocation(line: 118, column: 2, scope: !2062)
!2076 = distinct !DISubprogram(name: "metadata<[u8]>", linkageName: "_ZN4core3ptr8metadata8metadata17h50978647204dcd7aE", scope: !2064, file: !2063, line: 93, type: !2077, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !729, retainedNodes: !2079)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!109, !245}
!2079 = !{!2080}
!2080 = !DILocalVariable(name: "ptr", arg: 1, scope: !2076, file: !2063, line: 93, type: !245)
!2081 = !DILocation(line: 93, column: 34, scope: !2076)
!2082 = !DILocation(line: 97, column: 14, scope: !2076)
!2083 = !DILocation(line: 98, column: 2, scope: !2076)
!2084 = distinct !DISubprogram(name: "new_unchecked<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$13new_unchecked17h232f62df0a4a4fe7E", scope: !93, file: !2085, line: 189, type: !2086, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2088)
!2085 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/ptr/non_null.rs", directory: "", checksumkind: CSK_MD5, checksum: "c5d45e507157c14ac9b8f7e5ac0abc2b")
!2086 = !DISubroutineType(types: !2087)
!2087 = !{!93, !551}
!2088 = !{!2089}
!2089 = !DILocalVariable(name: "ptr", arg: 1, scope: !2084, file: !2085, line: 189, type: !551)
!2090 = !DILocation(line: 189, column: 39, scope: !2084)
!2091 = !DILocation(line: 191, column: 18, scope: !2084)
!2092 = !DILocation(line: 192, column: 6, scope: !2084)
!2093 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr8non_null16NonNull$LT$T$GT$6as_ptr17hf4ba03ec4b811b65E", scope: !93, file: !2085, line: 268, type: !2094, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2096)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!551, !93}
!2096 = !{!2097}
!2097 = !DILocalVariable(name: "self", arg: 1, scope: !2093, file: !2085, line: 268, type: !93)
!2098 = !DILocation(line: 268, column: 25, scope: !2093)
!2099 = !DILocation(line: 270, column: 6, scope: !2093)
!2100 = distinct !DISubprogram(name: "guaranteed_eq<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$13guaranteed_eq17hc6462d3e0c2eb04dE", scope: !265, file: !264, line: 418, type: !2101, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2103)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!675, !98, !98}
!2103 = !{!2104, !2105}
!2104 = !DILocalVariable(name: "self", arg: 1, scope: !2100, file: !264, line: 418, type: !98)
!2105 = !DILocalVariable(name: "other", arg: 2, scope: !2100, file: !264, line: 418, type: !98)
!2106 = !DILocation(line: 418, column: 32, scope: !2100)
!2107 = !DILocation(line: 418, column: 38, scope: !2100)
!2108 = !DILocation(line: 422, column: 9, scope: !2100)
!2109 = !DILocation(line: 423, column: 6, scope: !2100)
!2110 = distinct !DISubprogram(name: "cast<u8, ()>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$4cast17hef9ad36df408ff39E", scope: !265, file: !264, line: 47, type: !2111, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2115, retainedNodes: !2113)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!2067, !98}
!2113 = !{!2114}
!2114 = !DILocalVariable(name: "self", arg: 1, scope: !2110, file: !264, line: 47, type: !98)
!2115 = !{!100, !2116}
!2116 = !DITemplateTypeParameter(name: "U", type: !220)
!2117 = !DILocation(line: 47, column: 26, scope: !2110)
!2118 = !DILocation(line: 48, column: 9, scope: !2110)
!2119 = !DILocation(line: 49, column: 6, scope: !2110)
!2120 = distinct !DISubprogram(name: "is_null<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$7is_null17h28ca124dcefc1f68E", scope: !265, file: !264, line: 37, type: !2121, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2123)
!2121 = !DISubroutineType(types: !2122)
!2122 = !{!675, !98}
!2123 = !{!2124}
!2124 = !DILocalVariable(name: "self", arg: 1, scope: !2120, file: !264, line: 37, type: !98)
!2125 = !DILocation(line: 37, column: 26, scope: !2120)
!2126 = !DILocation(line: 40, column: 43, scope: !2120)
!2127 = !DILocation(line: 40, column: 9, scope: !2120)
!2128 = !DILocation(line: 41, column: 6, scope: !2120)
!2129 = distinct !DISubprogram(name: "len<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$3len17hec0269ed6419e823E", scope: !2130, file: !264, line: 916, type: !2077, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2131)
!2130 = !DINamespace(name: "{impl#1}", scope: !266)
!2131 = !{!2132}
!2132 = !DILocalVariable(name: "self", arg: 1, scope: !2129, file: !264, line: 916, type: !245)
!2133 = !DILocation(line: 916, column: 22, scope: !2129)
!2134 = !DILocation(line: 917, column: 9, scope: !2129)
!2135 = !DILocation(line: 918, column: 6, scope: !2129)
!2136 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core3ptr9const_ptr43_$LT$impl$u20$$BP$const$u20$$u5b$T$u5d$$GT$6as_ptr17h6bb91fbf2dc375fbE", scope: !2130, file: !264, line: 936, type: !2137, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2139)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!98, !245}
!2139 = !{!2140}
!2140 = !DILocalVariable(name: "self", arg: 1, scope: !2136, file: !264, line: 936, type: !245)
!2141 = !DILocation(line: 936, column: 25, scope: !2136)
!2142 = !DILocation(line: 937, column: 9, scope: !2136)
!2143 = !DILocation(line: 938, column: 6, scope: !2136)
!2144 = distinct !DISubprogram(name: "unwrap_or_0", linkageName: "_ZN4core3str11validations11unwrap_or_017h67cb83ba25f81120E", scope: !2146, file: !2145, line: 29, type: !2147, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2159)
!2145 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/validations.rs", directory: "", checksumkind: CSK_MD5, checksum: "e16ec20c9856918c50ffdc08694a8084")
!2146 = !DINamespace(name: "validations", scope: !146)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!8, !2149}
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&u8>", scope: !65, file: !2, size: 64, align: 64, elements: !2150, identifier: "6a688895f599082c77da7ba07346571d")
!2150 = !{!2151}
!2151 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 64, align: 64, elements: !2152, templateParams: !105, identifier: "6a688895f599082c77da7ba07346571d_variant_part", discriminator: !82)
!2152 = !{!2153, !2155}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2151, file: !2, baseType: !2154, size: 64, align: 64, extraData: i64 0)
!2154 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2149, file: !2, size: 64, align: 64, elements: !4, templateParams: !105, identifier: "6a688895f599082c77da7ba07346571d::None")
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2151, file: !2, baseType: !2156, size: 64, align: 64)
!2156 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2149, file: !2, size: 64, align: 64, elements: !2157, templateParams: !105, identifier: "6a688895f599082c77da7ba07346571d::Some")
!2157 = !{!2158}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2156, file: !2, baseType: !76, size: 64, align: 64)
!2159 = !{!2160, !2161}
!2160 = !DILocalVariable(name: "opt", arg: 1, scope: !2144, file: !2145, line: 29, type: !2149)
!2161 = !DILocalVariable(name: "byte", scope: !2162, file: !2145, line: 31, type: !8, align: 1)
!2162 = distinct !DILexicalBlock(scope: !2144, file: !2145, line: 31, column: 9)
!2163 = !DILocation(line: 29, column: 16, scope: !2144)
!2164 = !DILocation(line: 30, column: 11, scope: !2144)
!2165 = !DILocation(line: 30, column: 5, scope: !2144)
!2166 = !DILocation(line: 32, column: 17, scope: !2144)
!2167 = !DILocation(line: 31, column: 15, scope: !2144)
!2168 = !DILocation(line: 31, column: 15, scope: !2162)
!2169 = !DILocation(line: 31, column: 24, scope: !2162)
!2170 = !DILocation(line: 31, column: 27, scope: !2144)
!2171 = !DILocation(line: 34, column: 2, scope: !2144)
!2172 = distinct !DISubprogram(name: "next_code_point<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core3str11validations15next_code_point17he73579e4f5eff6b8E", scope: !2146, file: !2145, line: 40, type: !2173, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !153, retainedNodes: !2188)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{!2175, !2187}
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<u32>", scope: !65, file: !2, size: 64, align: 32, elements: !2176, identifier: "6b95e1347650682ce84b960afa0e0b5f")
!2176 = !{!2177}
!2177 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 64, align: 32, elements: !2178, templateParams: !2181, identifier: "6b95e1347650682ce84b960afa0e0b5f_variant_part", discriminator: !1181)
!2178 = !{!2179, !2183}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2177, file: !2, baseType: !2180, size: 64, align: 32, extraData: i64 0)
!2180 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2175, file: !2, size: 64, align: 32, elements: !4, templateParams: !2181, identifier: "6b95e1347650682ce84b960afa0e0b5f::None")
!2181 = !{!2182}
!2182 = !DITemplateTypeParameter(name: "T", type: !312)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2177, file: !2, baseType: !2184, size: 64, align: 32, extraData: i64 1)
!2184 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2175, file: !2, size: 64, align: 32, elements: !2185, templateParams: !2181, identifier: "6b95e1347650682ce84b960afa0e0b5f::Some")
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2184, file: !2, baseType: !312, size: 32, align: 32, offset: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Iter<u8>", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!2188 = !{!2189, !2190, !2192, !2194, !2196, !2198, !2200, !2202, !2204, !2206}
!2189 = !DILocalVariable(name: "bytes", arg: 1, scope: !2172, file: !2145, line: 40, type: !2187)
!2190 = !DILocalVariable(name: "x", scope: !2191, file: !2145, line: 42, type: !8, align: 1)
!2191 = distinct !DILexicalBlock(scope: !2172, file: !2145, line: 42, column: 5)
!2192 = !DILocalVariable(name: "residual", scope: !2193, file: !2145, line: 42, type: !329, align: 1)
!2193 = distinct !DILexicalBlock(scope: !2172, file: !2145, line: 42, column: 26)
!2194 = !DILocalVariable(name: "val", scope: !2195, file: !2145, line: 42, type: !76, align: 8)
!2195 = distinct !DILexicalBlock(scope: !2172, file: !2145, line: 42, column: 14)
!2196 = !DILocalVariable(name: "init", scope: !2197, file: !2145, line: 50, type: !312, align: 4)
!2197 = distinct !DILexicalBlock(scope: !2191, file: !2145, line: 50, column: 5)
!2198 = !DILocalVariable(name: "y", scope: !2199, file: !2145, line: 51, type: !8, align: 1)
!2199 = distinct !DILexicalBlock(scope: !2197, file: !2145, line: 51, column: 5)
!2200 = !DILocalVariable(name: "ch", scope: !2201, file: !2145, line: 52, type: !312, align: 4)
!2201 = distinct !DILexicalBlock(scope: !2199, file: !2145, line: 52, column: 5)
!2202 = !DILocalVariable(name: "z", scope: !2203, file: !2145, line: 56, type: !8, align: 1)
!2203 = distinct !DILexicalBlock(scope: !2201, file: !2145, line: 56, column: 9)
!2204 = !DILocalVariable(name: "y_z", scope: !2205, file: !2145, line: 57, type: !312, align: 4)
!2205 = distinct !DILexicalBlock(scope: !2203, file: !2145, line: 57, column: 9)
!2206 = !DILocalVariable(name: "w", scope: !2207, file: !2145, line: 62, type: !8, align: 1)
!2207 = distinct !DILexicalBlock(scope: !2205, file: !2145, line: 62, column: 13)
!2208 = !DILocation(line: 40, column: 56, scope: !2172)
!2209 = !DILocation(line: 42, column: 26, scope: !2193)
!2210 = !DILocation(line: 52, column: 9, scope: !2201)
!2211 = !DILocation(line: 42, column: 14, scope: !2172)
!2212 = !DILocation(line: 42, column: 14, scope: !2195)
!2213 = !DILocation(line: 42, column: 13, scope: !2172)
!2214 = !DILocation(line: 42, column: 9, scope: !2191)
!2215 = !DILocation(line: 43, column: 8, scope: !2191)
!2216 = !DILocation(line: 42, column: 14, scope: !2193)
!2217 = !DILocation(line: 1, column: 1, scope: !2218)
!2218 = !DILexicalBlockFile(scope: !2172, file: !908, discriminator: 0)
!2219 = !DILocation(line: 68, column: 2, scope: !2172)
!2220 = !DILocation(line: 50, column: 16, scope: !2191)
!2221 = !DILocation(line: 50, column: 9, scope: !2197)
!2222 = !DILocation(line: 44, column: 21, scope: !2191)
!2223 = !DILocation(line: 44, column: 16, scope: !2191)
!2224 = !DILocation(line: 1, column: 1, scope: !2225)
!2225 = !DILexicalBlockFile(scope: !2191, file: !908, discriminator: 0)
!2226 = !DILocation(line: 51, column: 25, scope: !2197)
!2227 = !DILocation(line: 51, column: 13, scope: !2197)
!2228 = !DILocation(line: 51, column: 9, scope: !2199)
!2229 = !DILocation(line: 52, column: 18, scope: !2199)
!2230 = !DILocation(line: 53, column: 8, scope: !2201)
!2231 = !DILocation(line: 67, column: 10, scope: !2201)
!2232 = !DILocation(line: 67, column: 5, scope: !2201)
!2233 = !DILocation(line: 56, column: 29, scope: !2201)
!2234 = !DILocation(line: 56, column: 17, scope: !2201)
!2235 = !DILocation(line: 56, column: 13, scope: !2203)
!2236 = !DILocation(line: 57, column: 38, scope: !2203)
!2237 = !DILocation(line: 57, column: 19, scope: !2203)
!2238 = !DILocation(line: 57, column: 13, scope: !2205)
!2239 = !DILocation(line: 58, column: 14, scope: !2205)
!2240 = !DILocation(line: 58, column: 9, scope: !2205)
!2241 = !DILocation(line: 59, column: 12, scope: !2205)
!2242 = !DILocation(line: 53, column: 5, scope: !2201)
!2243 = !DILocation(line: 62, column: 33, scope: !2205)
!2244 = !DILocation(line: 62, column: 21, scope: !2205)
!2245 = !DILocation(line: 62, column: 17, scope: !2207)
!2246 = !DILocation(line: 63, column: 18, scope: !2207)
!2247 = !DILocation(line: 63, column: 37, scope: !2207)
!2248 = !DILocation(line: 63, column: 13, scope: !2207)
!2249 = !DILocation(line: 59, column: 9, scope: !2205)
!2250 = distinct !DISubprogram(name: "utf8_first_byte", linkageName: "_ZN4core3str11validations15utf8_first_byte17h22df06b668388e5fE", scope: !2146, file: !2145, line: 11, type: !2251, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2253)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!312, !8, !312}
!2253 = !{!2254, !2255}
!2254 = !DILocalVariable(name: "byte", arg: 1, scope: !2250, file: !2145, line: 11, type: !8)
!2255 = !DILocalVariable(name: "width", arg: 2, scope: !2250, file: !2145, line: 11, type: !312)
!2256 = !DILocation(line: 11, column: 20, scope: !2250)
!2257 = !DILocation(line: 11, column: 30, scope: !2250)
!2258 = !DILocation(line: 12, column: 13, scope: !2250)
!2259 = !DILocation(line: 12, column: 5, scope: !2250)
!2260 = !DILocation(line: 13, column: 2, scope: !2250)
!2261 = distinct !DISubprogram(name: "utf8_acc_cont_byte", linkageName: "_ZN4core3str11validations18utf8_acc_cont_byte17hc40912839e1d8ef4E", scope: !2146, file: !2145, line: 17, type: !2262, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2264)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{!312, !312, !8}
!2264 = !{!2265, !2266}
!2265 = !DILocalVariable(name: "ch", arg: 1, scope: !2261, file: !2145, line: 17, type: !312)
!2266 = !DILocalVariable(name: "byte", arg: 2, scope: !2261, file: !2145, line: 17, type: !8)
!2267 = !DILocation(line: 17, column: 23, scope: !2261)
!2268 = !DILocation(line: 17, column: 32, scope: !2261)
!2269 = !DILocation(line: 18, column: 5, scope: !2261)
!2270 = !DILocation(line: 18, column: 17, scope: !2261)
!2271 = !DILocation(line: 19, column: 2, scope: !2261)
!2272 = distinct !DISubprogram(name: "is_char_boundary", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17h139dd18bcb60623aE", scope: !1816, file: !1815, line: 193, type: !2273, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2275)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!675, !383, !109}
!2275 = !{!2276, !2277, !2278}
!2276 = !DILocalVariable(name: "self", arg: 1, scope: !2272, file: !1815, line: 193, type: !383)
!2277 = !DILocalVariable(name: "index", arg: 2, scope: !2272, file: !1815, line: 193, type: !109)
!2278 = !DILocalVariable(name: "b", scope: !2279, file: !1815, line: 215, type: !8, align: 1)
!2279 = distinct !DILexicalBlock(scope: !2272, file: !1815, line: 215, column: 13)
!2280 = !DILocation(line: 193, column: 29, scope: !2272)
!2281 = !DILocation(line: 193, column: 36, scope: !2272)
!2282 = !DILocation(line: 198, column: 12, scope: !2272)
!2283 = !DILocation(line: 199, column: 20, scope: !2272)
!2284 = !DILocation(line: 217, column: 6, scope: !2272)
!2285 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2286)
!2286 = distinct !DILocation(line: 202, column: 15, scope: !2272)
!2287 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2286)
!2288 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2286)
!2289 = !DILocation(line: 202, column: 15, scope: !2272)
!2290 = !DILocation(line: 202, column: 9, scope: !2272)
!2291 = !DILocation(line: 212, column: 30, scope: !2272)
!2292 = !DILocation(line: 215, column: 19, scope: !2272)
!2293 = !DILocation(line: 215, column: 19, scope: !2279)
!2294 = !DILocation(line: 215, column: 25, scope: !2279)
!2295 = !DILocation(line: 215, column: 42, scope: !2272)
!2296 = !DILocation(line: 212, column: 21, scope: !2272)
!2297 = !DILocation(line: 212, column: 39, scope: !2272)
!2298 = distinct !DISubprogram(name: "len", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha76bd3be6e302bf6E", scope: !1816, file: !1815, line: 144, type: !2299, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2301)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!109, !383}
!2301 = !{!2302}
!2302 = !DILocalVariable(name: "self", arg: 1, scope: !2298, file: !1815, line: 144, type: !383)
!2303 = !DILocation(line: 144, column: 22, scope: !2298)
!2304 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2305)
!2305 = distinct !DILocation(line: 145, column: 9, scope: !2298)
!2306 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2305)
!2307 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2305)
!2308 = !DILocation(line: 145, column: 9, scope: !2298)
!2309 = !DILocation(line: 146, column: 6, scope: !2298)
!2310 = distinct !DISubprogram(name: "bytes", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5bytes17hbe664ab4ae5d6b2fE", scope: !1816, file: !1815, line: 761, type: !2311, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2313)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!144, !383}
!2313 = !{!2314}
!2314 = !DILocalVariable(name: "self", arg: 1, scope: !2310, file: !1815, line: 761, type: !383)
!2315 = !DILocation(line: 761, column: 18, scope: !2310)
!2316 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2317)
!2317 = distinct !DILocation(line: 762, column: 15, scope: !2310)
!2318 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2317)
!2319 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2317)
!2320 = !DILocation(line: 762, column: 15, scope: !2310)
!2321 = !DILocation(line: 762, column: 9, scope: !2310)
!2322 = !DILocation(line: 763, column: 6, scope: !2310)
!2323 = distinct !DISubprogram(name: "chars", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h512dff041c501abfE", scope: !1816, file: !1815, line: 679, type: !2324, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2326)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!317, !383}
!2326 = !{!2327}
!2327 = !DILocalVariable(name: "self", arg: 1, scope: !2323, file: !1815, line: 679, type: !383)
!2328 = !DILocation(line: 679, column: 18, scope: !2323)
!2329 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2330)
!2330 = distinct !DILocation(line: 680, column: 23, scope: !2323)
!2331 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2330)
!2332 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2330)
!2333 = !DILocation(line: 680, column: 23, scope: !2323)
!2334 = !DILocation(line: 680, column: 9, scope: !2323)
!2335 = !DILocation(line: 681, column: 6, scope: !2323)
!2336 = distinct !DISubprogram(name: "parse<usize>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17h53427912684d06eaE", scope: !1816, file: !1815, line: 2220, type: !2337, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2358, retainedNodes: !2356)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!2339, !383}
!2339 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<usize, core::num::error::ParseIntError>", scope: !25, file: !2, size: 128, align: 64, elements: !2340, identifier: "d53aa29f8c28b4d7323124a1585f332")
!2340 = !{!2341}
!2341 = !DICompositeType(tag: DW_TAG_variant_part, scope: !25, file: !2, size: 128, align: 64, elements: !2342, templateParams: !2347, identifier: "d53aa29f8c28b4d7323124a1585f332_variant_part", discriminator: !1301)
!2342 = !{!2343, !2352}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !2341, file: !2, baseType: !2344, size: 128, align: 64, extraData: i64 0)
!2344 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !2339, file: !2, size: 128, align: 64, elements: !2345, templateParams: !2347, identifier: "d53aa29f8c28b4d7323124a1585f332::Ok")
!2345 = !{!2346}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2344, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!2347 = !{!196, !2348}
!2348 = !DITemplateTypeParameter(name: "E", type: !2349)
!2349 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseIntError", scope: !49, file: !2, size: 8, align: 8, elements: !2350, templateParams: !4, identifier: "ec736c1df174b70f3a332d35ddf9b1f1")
!2350 = !{!2351}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2349, file: !2, baseType: !48, size: 8, align: 8)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !2341, file: !2, baseType: !2353, size: 128, align: 64, extraData: i64 1)
!2353 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !2339, file: !2, size: 128, align: 64, elements: !2354, templateParams: !2347, identifier: "d53aa29f8c28b4d7323124a1585f332::Err")
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2353, file: !2, baseType: !2349, size: 8, align: 8, offset: 8)
!2356 = !{!2357}
!2357 = !DILocalVariable(name: "self", arg: 1, scope: !2336, file: !1815, line: 2220, type: !383)
!2358 = !{!2359}
!2359 = !DITemplateTypeParameter(name: "F", type: !109)
!2360 = !DILocation(line: 2220, column: 30, scope: !2336)
!2361 = !DILocation(line: 2221, column: 9, scope: !2336)
!2362 = !DILocation(line: 2222, column: 6, scope: !2336)
!2363 = distinct !DISubprogram(name: "parse<f64>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17haddabf03b8561c9cE", scope: !1816, file: !1815, line: 2220, type: !1309, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !886, retainedNodes: !2364)
!2364 = !{!2365}
!2365 = !DILocalVariable(name: "self", arg: 1, scope: !2363, file: !1815, line: 2220, type: !383)
!2366 = !DILocation(line: 2220, column: 30, scope: !2363)
!2367 = !DILocation(line: 2221, column: 9, scope: !2363)
!2368 = !DILocation(line: 2222, column: 6, scope: !2363)
!2369 = distinct !DISubprogram(name: "parse<f32>", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$5parse17he99c810f82e6b0d7E", scope: !1816, file: !1815, line: 2220, type: !1282, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !1008, retainedNodes: !2370)
!2370 = !{!2371}
!2371 = !DILocalVariable(name: "self", arg: 1, scope: !2369, file: !1815, line: 2220, type: !383)
!2372 = !DILocation(line: 2220, column: 30, scope: !2369)
!2373 = !DILocation(line: 2221, column: 9, scope: !2369)
!2374 = !DILocation(line: 2222, column: 6, scope: !2369)
!2375 = distinct !DISubprogram(name: "is_empty", linkageName: "_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hcd0145b4087fba4fE", scope: !1816, file: !1815, line: 164, type: !2376, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2378)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!675, !383}
!2378 = !{!2379}
!2379 = !DILocalVariable(name: "self", arg: 1, scope: !2375, file: !1815, line: 164, type: !383)
!2380 = !DILocation(line: 164, column: 27, scope: !2375)
!2381 = !DILocation(line: 165, column: 9, scope: !2375)
!2382 = !DILocation(line: 166, column: 6, scope: !2375)
!2383 = distinct !DISubprogram(name: "as_str", linkageName: "_ZN4core3str4iter5Chars6as_str17h676e0f9eaa5200d8E", scope: !317, file: !2384, line: 113, type: !2385, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2388)
!2384 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "f779e00203b15b13d5c175584230dbb4")
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!383, !2387}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Chars", baseType: !317, size: 64, align: 64, dwarfAddressSpace: 0)
!2388 = !{!2389}
!2389 = !DILocalVariable(name: "self", arg: 1, scope: !2383, file: !2384, line: 113, type: !2387)
!2390 = !DILocation(line: 113, column: 19, scope: !2383)
!2391 = !DILocation(line: 115, column: 38, scope: !2383)
!2392 = !DILocation(line: 115, column: 18, scope: !2383)
!2393 = !DILocation(line: 116, column: 6, scope: !2383)
!2394 = distinct !DISubprogram(name: "get_unchecked", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$13get_unchecked17h71421a3984187c97E", scope: !2396, file: !2395, line: 344, type: !2398, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2404)
!2395 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/traits.rs", directory: "", checksumkind: CSK_MD5, checksum: "07593d71b1fed55f0a5ec9affdecdb4c")
!2396 = !DINamespace(name: "{impl#9}", scope: !2397)
!2397 = !DINamespace(name: "traits", scope: !146)
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!2400, !359, !2400}
!2400 = !DICompositeType(tag: DW_TAG_structure_type, name: "*const str", file: !2, size: 128, align: 64, elements: !2401, templateParams: !4, identifier: "a5bdbc221d616da05a81afdf07f1669")
!2401 = !{!2402, !2403}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "data_ptr", scope: !2400, file: !2, baseType: !98, size: 64, align: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2400, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!2404 = !{!2405, !2406, !2407, !2409, !2411}
!2405 = !DILocalVariable(name: "self", arg: 1, scope: !2394, file: !2395, line: 344, type: !359)
!2406 = !DILocalVariable(name: "slice", arg: 2, scope: !2394, file: !2395, line: 344, type: !2400)
!2407 = !DILocalVariable(name: "slice", scope: !2408, file: !2395, line: 345, type: !245, align: 8)
!2408 = distinct !DILexicalBlock(scope: !2394, file: !2395, line: 345, column: 9)
!2409 = !DILocalVariable(name: "ptr", scope: !2410, file: !2395, line: 348, type: !98, align: 8)
!2410 = distinct !DILexicalBlock(scope: !2408, file: !2395, line: 348, column: 9)
!2411 = !DILocalVariable(name: "len", scope: !2412, file: !2395, line: 349, type: !109, align: 8)
!2412 = distinct !DILexicalBlock(scope: !2410, file: !2395, line: 349, column: 9)
!2413 = !DILocation(line: 344, column: 29, scope: !2394)
!2414 = !DILocation(line: 344, column: 35, scope: !2394)
!2415 = !DILocation(line: 345, column: 21, scope: !2394)
!2416 = !DILocation(line: 345, column: 13, scope: !2408)
!2417 = !DILocation(line: 348, column: 28, scope: !2408)
!2418 = !DILocation(line: 511, column: 29, scope: !263, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 348, column: 28, scope: !2408)
!2420 = !DILocation(line: 511, column: 35, scope: !263, inlinedAt: !2419)
!2421 = !DILocation(line: 230, column: 32, scope: !275, inlinedAt: !2422)
!2422 = distinct !DILocation(line: 516, column: 18, scope: !263, inlinedAt: !2419)
!2423 = !DILocation(line: 230, column: 38, scope: !275, inlinedAt: !2422)
!2424 = !DILocation(line: 235, column: 18, scope: !275, inlinedAt: !2422)
!2425 = !DILocation(line: 348, column: 13, scope: !2410)
!2426 = !DILocation(line: 349, column: 19, scope: !2410)
!2427 = !DILocation(line: 349, column: 13, scope: !2412)
!2428 = !DILocation(line: 350, column: 9, scope: !2412)
!2429 = !DILocation(line: 351, column: 6, scope: !2394)
!2430 = distinct !DISubprogram(name: "get", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17h210cb0f409e02ebfE", scope: !2396, file: !2395, line: 324, type: !2431, scopeLine: 324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2445)
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!2433, !359, !383}
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<&str>", scope: !65, file: !2, size: 128, align: 64, elements: !2434, identifier: "ba46a980ca83ddbb963844449be6c093")
!2434 = !{!2435}
!2435 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !2436, templateParams: !2439, identifier: "ba46a980ca83ddbb963844449be6c093_variant_part", discriminator: !82)
!2436 = !{!2437, !2441}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !2435, file: !2, baseType: !2438, size: 128, align: 64, extraData: i64 0)
!2438 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !2433, file: !2, size: 128, align: 64, elements: !4, templateParams: !2439, identifier: "ba46a980ca83ddbb963844449be6c093::None")
!2439 = !{!2440}
!2440 = !DITemplateTypeParameter(name: "T", type: !383)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !2435, file: !2, baseType: !2442, size: 128, align: 64)
!2442 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !2433, file: !2, size: 128, align: 64, elements: !2443, templateParams: !2439, identifier: "ba46a980ca83ddbb963844449be6c093::Some")
!2443 = !{!2444}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !2442, file: !2, baseType: !383, size: 128, align: 64)
!2445 = !{!2446, !2447}
!2446 = !DILocalVariable(name: "self", arg: 1, scope: !2430, file: !2395, line: 324, type: !359)
!2447 = !DILocalVariable(name: "slice", arg: 2, scope: !2430, file: !2395, line: 324, type: !383)
!2448 = !DILocation(line: 324, column: 12, scope: !2430)
!2449 = !DILocation(line: 324, column: 18, scope: !2430)
!2450 = !DILocation(line: 325, column: 12, scope: !2430)
!2451 = !DILocation(line: 330, column: 13, scope: !2430)
!2452 = !DILocation(line: 325, column: 9, scope: !2430)
!2453 = !DILocation(line: 328, column: 29, scope: !2430)
!2454 = !DILocation(line: 328, column: 13, scope: !2430)
!2455 = !DILocation(line: 332, column: 6, scope: !2430)
!2456 = distinct !DISubprogram(name: "index", linkageName: "_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17hddb1ebded64afd8bE", scope: !2396, file: !2395, line: 361, type: !2457, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!383, !359, !383, !377}
!2459 = !{!2460, !2461, !2462, !2464, !2465}
!2460 = !DILocalVariable(name: "self", arg: 1, scope: !2456, file: !2395, line: 361, type: !359)
!2461 = !DILocalVariable(name: "slice", arg: 2, scope: !2456, file: !2395, line: 361, type: !383)
!2462 = !DILocalVariable(name: "start", scope: !2463, file: !2395, line: 362, type: !109, align: 8)
!2463 = distinct !DILexicalBlock(scope: !2456, file: !2395, line: 362, column: 9)
!2464 = !DILocalVariable(name: "end", scope: !2463, file: !2395, line: 362, type: !109, align: 8)
!2465 = !DILocalVariable(name: "s", scope: !2466, file: !2395, line: 364, type: !383, align: 8)
!2466 = distinct !DILexicalBlock(scope: !2463, file: !2395, line: 364, column: 13)
!2467 = !DILocation(line: 361, column: 14, scope: !2456)
!2468 = !DILocation(line: 361, column: 20, scope: !2456)
!2469 = !DILocation(line: 362, column: 41, scope: !2456)
!2470 = !DILocation(line: 362, column: 28, scope: !2456)
!2471 = !DILocation(line: 362, column: 14, scope: !2456)
!2472 = !DILocation(line: 362, column: 14, scope: !2463)
!2473 = !DILocation(line: 362, column: 21, scope: !2456)
!2474 = !DILocation(line: 362, column: 21, scope: !2463)
!2475 = !DILocation(line: 363, column: 15, scope: !2463)
!2476 = !DILocation(line: 363, column: 9, scope: !2463)
!2477 = !DILocation(line: 365, column: 21, scope: !2463)
!2478 = !DILocation(line: 364, column: 18, scope: !2463)
!2479 = !DILocation(line: 364, column: 18, scope: !2466)
!2480 = !DILocation(line: 367, column: 6, scope: !2456)
!2481 = distinct !DISubprogram(name: "eq", linkageName: "_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17hb406591fb252ecfaE", scope: !2482, file: !2395, line: 28, type: !2483, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2485)
!2482 = !DINamespace(name: "{impl#1}", scope: !2397)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!675, !383, !383}
!2485 = !{!2486, !2487}
!2486 = !DILocalVariable(name: "self", arg: 1, scope: !2481, file: !2395, line: 28, type: !383)
!2487 = !DILocalVariable(name: "other", arg: 2, scope: !2481, file: !2395, line: 28, type: !383)
!2488 = !DILocation(line: 28, column: 11, scope: !2481)
!2489 = !DILocation(line: 28, column: 18, scope: !2481)
!2490 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2491)
!2491 = distinct !DILocation(line: 29, column: 9, scope: !2481)
!2492 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2491)
!2493 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2491)
!2494 = !DILocation(line: 29, column: 9, scope: !2481)
!2495 = !DILocation(line: 235, column: 27, scope: !1814, inlinedAt: !2496)
!2496 = distinct !DILocation(line: 29, column: 28, scope: !2481)
!2497 = !DILocation(line: 237, column: 18, scope: !1814, inlinedAt: !2496)
!2498 = !DILocation(line: 238, column: 6, scope: !1814, inlinedAt: !2496)
!2499 = !DILocation(line: 29, column: 28, scope: !2481)
!2500 = !DILocation(line: 30, column: 6, scope: !2481)
!2501 = distinct !DISubprogram(name: "index<core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hb957295e3d336df5E", scope: !2502, file: !2395, line: 63, type: !2503, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2508, retainedNodes: !2505)
!2502 = !DINamespace(name: "{impl#4}", scope: !2397)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!383, !383, !359, !377}
!2505 = !{!2506, !2507}
!2506 = !DILocalVariable(name: "self", arg: 1, scope: !2501, file: !2395, line: 63, type: !383)
!2507 = !DILocalVariable(name: "index", arg: 2, scope: !2501, file: !2395, line: 63, type: !359)
!2508 = !{!2509}
!2509 = !DITemplateTypeParameter(name: "I", type: !359)
!2510 = !DILocation(line: 63, column: 14, scope: !2501)
!2511 = !DILocation(line: 63, column: 21, scope: !2501)
!2512 = !DILocation(line: 64, column: 9, scope: !2501)
!2513 = !DILocation(line: 65, column: 6, scope: !2501)
!2514 = distinct !DISubprogram(name: "from_utf8_unchecked", linkageName: "_ZN4core3str8converts19from_utf8_unchecked17hce44fbdce675666bE", scope: !2516, file: !2515, line: 161, type: !2517, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2519)
!2515 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/str/converts.rs", directory: "", checksumkind: CSK_MD5, checksum: "6dc06e04abe21bfc38810894182da58e")
!2516 = !DINamespace(name: "converts", scope: !146)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!383, !373}
!2519 = !{!2520}
!2520 = !DILocalVariable(name: "v", arg: 1, scope: !2514, file: !2515, line: 161, type: !373)
!2521 = !DILocation(line: 161, column: 41, scope: !2514)
!2522 = !DILocation(line: 164, column: 14, scope: !2514)
!2523 = !DILocation(line: 165, column: 2, scope: !2514)
!2524 = distinct !DISubprogram(name: "then_some<u32>", linkageName: "_ZN4core4bool22_$LT$impl$u20$bool$GT$9then_some17h7966edebdc29653fE", scope: !2526, file: !2525, line: 17, type: !2528, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2181, retainedNodes: !2530)
!2525 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/bool.rs", directory: "", checksumkind: CSK_MD5, checksum: "7bca4087d7ac5ef5421194269806dd7d")
!2526 = !DINamespace(name: "{impl#0}", scope: !2527)
!2527 = !DINamespace(name: "bool", scope: !20)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!2175, !675, !312}
!2530 = !{!2531, !2532}
!2531 = !DILocalVariable(name: "self", arg: 1, scope: !2524, file: !2525, line: 17, type: !675)
!2532 = !DILocalVariable(name: "t", arg: 2, scope: !2524, file: !2525, line: 17, type: !312)
!2533 = !DILocation(line: 17, column: 25, scope: !2524)
!2534 = !DILocation(line: 17, column: 31, scope: !2524)
!2535 = !DILocation(line: 18, column: 12, scope: !2524)
!2536 = !DILocation(line: 18, column: 36, scope: !2524)
!2537 = !DILocation(line: 18, column: 9, scope: !2524)
!2538 = !DILocation(line: 18, column: 24, scope: !2524)
!2539 = !DILocation(line: 18, column: 19, scope: !2524)
!2540 = !DILocation(line: 19, column: 5, scope: !2524)
!2541 = !DILocation(line: 19, column: 6, scope: !2524)
!2542 = distinct !DISubprogram(name: "from_u32_unchecked", linkageName: "_ZN4core4char7convert18from_u32_unchecked17h765baebb9a612ccdE", scope: !2544, file: !2543, line: 92, type: !2546, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2548)
!2543 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/char/convert.rs", directory: "", checksumkind: CSK_MD5, checksum: "cd55edca0fc0a2a4223b95294dcc97cc")
!2544 = !DINamespace(name: "convert", scope: !2545)
!2545 = !DINamespace(name: "char", scope: !20)
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!306, !312}
!2548 = !{!2549}
!2549 = !DILocalVariable(name: "i", arg: 1, scope: !2542, file: !2543, line: 92, type: !312)
!2550 = !DILocation(line: 92, column: 34, scope: !2542)
!2551 = !DILocation(line: 94, column: 78, scope: !2542)
!2552 = !DILocation(line: 95, column: 2, scope: !2542)
!2553 = distinct !DISubprogram(name: "to_digit", linkageName: "_ZN4core4char7methods22_$LT$impl$u20$char$GT$8to_digit17hdd616edadcf75153E", scope: !2555, file: !2554, line: 332, type: !2557, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2559)
!2554 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/char/methods.rs", directory: "", checksumkind: CSK_MD5, checksum: "35992d7ea25cc6161af2a9cc74200563")
!2555 = !DINamespace(name: "{impl#0}", scope: !2556)
!2556 = !DINamespace(name: "methods", scope: !2545)
!2557 = !DISubroutineType(types: !2558)
!2558 = !{!2175, !306, !312}
!2559 = !{!2560, !2561, !2562}
!2560 = !DILocalVariable(name: "self", arg: 1, scope: !2553, file: !2554, line: 332, type: !306)
!2561 = !DILocalVariable(name: "radix", arg: 2, scope: !2553, file: !2554, line: 332, type: !312)
!2562 = !DILocalVariable(name: "digit", scope: !2563, file: !2554, line: 335, type: !312, align: 4)
!2563 = distinct !DILexicalBlock(scope: !2553, file: !2554, line: 335, column: 9)
!2564 = !DILocation(line: 332, column: 21, scope: !2553)
!2565 = !DILocation(line: 332, column: 27, scope: !2553)
!2566 = !DILocation(line: 335, column: 13, scope: !2563)
!2567 = !DILocation(line: 333, column: 17, scope: !2553)
!2568 = !DILocation(line: 333, column: 9, scope: !2553)
!2569 = !DILocation(line: 335, column: 25, scope: !2553)
!2570 = !DILocalVariable(name: "self", arg: 1, scope: !2571, file: !735, line: 1133, type: !312)
!2571 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$12wrapping_sub17hefbdb3ae01e7dca9E", scope: !2572, file: !735, line: 1133, type: !2573, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2575)
!2572 = !DINamespace(name: "{impl#8}", scope: !47)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!312, !312, !312}
!2575 = !{!2570, !2576}
!2576 = !DILocalVariable(name: "rhs", arg: 2, scope: !2571, file: !735, line: 1133, type: !312)
!2577 = !DILocation(line: 1133, column: 35, scope: !2571, inlinedAt: !2578)
!2578 = distinct !DILocation(line: 335, column: 25, scope: !2553)
!2579 = !DILocation(line: 1133, column: 41, scope: !2571, inlinedAt: !2578)
!2580 = !DILocation(line: 1134, column: 13, scope: !2571, inlinedAt: !2578)
!2581 = !DILocation(line: 336, column: 12, scope: !2563)
!2582 = !DILocation(line: 343, column: 10, scope: !2563)
!2583 = !DILocation(line: 343, column: 9, scope: !2563)
!2584 = !DILocation(line: 343, column: 35, scope: !2563)
!2585 = !DILocation(line: 337, column: 16, scope: !2563)
!2586 = !DILocation(line: 341, column: 22, scope: !2563)
!2587 = !DILocation(line: 341, column: 21, scope: !2563)
!2588 = !DILocation(line: 1133, column: 35, scope: !2571, inlinedAt: !2589)
!2589 = distinct !DILocation(line: 341, column: 21, scope: !2563)
!2590 = !DILocation(line: 1133, column: 41, scope: !2571, inlinedAt: !2589)
!2591 = !DILocation(line: 1134, column: 13, scope: !2571, inlinedAt: !2589)
!2592 = !DILocation(line: 338, column: 29, scope: !2563)
!2593 = !DILocation(line: 338, column: 24, scope: !2563)
!2594 = !DILocation(line: 344, column: 6, scope: !2553)
!2595 = !DILocalVariable(name: "self", arg: 1, scope: !2596, file: !735, line: 997, type: !312)
!2596 = distinct !DISubprogram(name: "saturating_add", linkageName: "_ZN4core3num21_$LT$impl$u20$u32$GT$14saturating_add17ha01b2849ab190ae8E", scope: !2572, file: !735, line: 997, type: !2573, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !2597)
!2597 = !{!2595, !2598}
!2598 = !DILocalVariable(name: "rhs", arg: 2, scope: !2596, file: !735, line: 997, type: !312)
!2599 = !DILocation(line: 997, column: 37, scope: !2596, inlinedAt: !2600)
!2600 = distinct !DILocation(line: 341, column: 21, scope: !2563)
!2601 = !DILocation(line: 997, column: 43, scope: !2596, inlinedAt: !2600)
!2602 = !DILocation(line: 998, column: 13, scope: !2596, inlinedAt: !2600)
!2603 = !DILocation(line: 341, column: 13, scope: !2563)
!2604 = !DILocation(line: 336, column: 9, scope: !2563)
!2605 = distinct !DISubprogram(name: "all<core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>, num_traits::str_to_ascii_lower_eq_str::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all17h759b38be3e8bef1aE", scope: !2607, file: !2606, line: 2256, type: !2610, scopeLine: 2256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2617, retainedNodes: !2614)
!2606 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/iterator.rs", directory: "", checksumkind: CSK_MD5, checksum: "a638382da20c71c07b5dfc1f48eba32d")
!2607 = !DINamespace(name: "Iterator", scope: !2608)
!2608 = !DINamespace(name: "iterator", scope: !2609)
!2609 = !DINamespace(name: "traits", scope: !61)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!675, !140, !2612}
!2612 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2613, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "511ea5c6eece8a4be55934ee9e718c8b")
!2613 = !DINamespace(name: "str_to_ascii_lower_eq_str", scope: !7)
!2614 = !{!2615, !2616}
!2615 = !DILocalVariable(name: "self", arg: 1, scope: !2605, file: !2606, line: 2256, type: !140)
!2616 = !DILocalVariable(name: "f", arg: 2, scope: !2605, file: !2606, line: 2256, type: !2612)
!2617 = !{!2618, !2619}
!2618 = !DITemplateTypeParameter(name: "Self", type: !141)
!2619 = !DITemplateTypeParameter(name: "F", type: !2612)
!2620 = !DILocation(line: 2256, column: 15, scope: !2605)
!2621 = !DILocation(line: 2256, column: 26, scope: !2605)
!2622 = !DILocation(line: 2267, column: 27, scope: !2605)
!2623 = !DILocation(line: 2267, column: 9, scope: !2605)
!2624 = !DILocation(line: 2268, column: 6, scope: !2605)
!2625 = distinct !DISubprogram(name: "check<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check17h81517fe2b0a83ec5E", scope: !2626, file: !2606, line: 2262, type: !2627, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2631, retainedNodes: !2629)
!2626 = !DINamespace(name: "all", scope: !2607)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{null, !2612}
!2629 = !{!2630}
!2630 = !DILocalVariable(name: "f", arg: 1, scope: !2625, file: !2606, line: 2262, type: !2612)
!2631 = !{!130, !2632}
!2632 = !DITemplateTypeParameter(name: "impl FnMut(T) -> bool", type: !2612)
!2633 = !DILocation(line: 2262, column: 21, scope: !2625)
!2634 = !DILocation(line: 2263, column: 13, scope: !2625)
!2635 = !DILocation(line: 2266, column: 10, scope: !2625)
!2636 = distinct !DISubprogram(name: "{closure#0}<(u8, u8), num_traits::str_to_ascii_lower_eq_str::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3all5check28_$u7b$$u7b$closure$u7d$$u7d$17he12b760980656518E", scope: !2637, file: !2606, line: 2263, type: !2638, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2631, retainedNodes: !2644)
!2637 = !DINamespace(name: "check", scope: !2626)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{!17, !2640, !220, !131}
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !2641, size: 64, align: 64, dwarfAddressSpace: 0)
!2641 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !2637, file: !2, align: 8, elements: !2642, templateParams: !4, identifier: "de59e4bc03d542545a5c6fc154d3bab1")
!2642 = !{!2643}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2641, file: !2, baseType: !2612, align: 8)
!2644 = !{!2645, !2646, !2647}
!2645 = !DILocalVariable(name: "x", arg: 3, scope: !2636, file: !2606, line: 2263, type: !131)
!2646 = !DILocalVariable(name: "f", scope: !2636, file: !2606, line: 2262, type: !2612, align: 1)
!2647 = !DILocalVariable(arg: 2, scope: !2636, file: !2606, line: 2263, type: !220)
!2648 = !DILocation(line: 2262, column: 21, scope: !2636)
!2649 = !DILocation(line: 2263, column: 19, scope: !2636)
!2650 = !DILocation(line: 2263, column: 23, scope: !2636)
!2651 = !DILocation(line: 2264, column: 20, scope: !2636)
!2652 = !DILocation(line: 2264, column: 58, scope: !2636)
!2653 = !DILocation(line: 2264, column: 17, scope: !2636)
!2654 = !DILocation(line: 2264, column: 27, scope: !2636)
!2655 = !DILocation(line: 2265, column: 14, scope: !2636)
!2656 = distinct !DISubprogram(name: "zip<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3zip17h31e15a62e7100431E", scope: !2607, file: !2606, line: 519, type: !421, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2660, retainedNodes: !2657)
!2657 = !{!2658, !2659}
!2658 = !DILocalVariable(name: "self", arg: 1, scope: !2656, file: !2606, line: 519, type: !144)
!2659 = !DILocalVariable(name: "other", arg: 2, scope: !2656, file: !2606, line: 519, type: !144)
!2660 = !{!2661, !2662}
!2661 = !DITemplateTypeParameter(name: "Self", type: !144)
!2662 = !DITemplateTypeParameter(name: "U", type: !144)
!2663 = !DILocation(line: 519, column: 15, scope: !2656)
!2664 = !DILocation(line: 519, column: 21, scope: !2656)
!2665 = !DILocation(line: 524, column: 24, scope: !2656)
!2666 = !DILocation(line: 524, column: 9, scope: !2656)
!2667 = !DILocation(line: 525, column: 6, scope: !2656)
!2668 = distinct !DISubprogram(name: "zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator3zip17h91c254db5300b4f5E", scope: !2607, file: !2606, line: 519, type: !400, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2672, retainedNodes: !2669)
!2669 = !{!2670, !2671}
!2670 = !DILocalVariable(name: "self", arg: 1, scope: !2668, file: !2606, line: 519, type: !88)
!2671 = !DILocalVariable(name: "other", arg: 2, scope: !2668, file: !2606, line: 519, type: !88)
!2672 = !{!2673, !2674}
!2673 = !DITemplateTypeParameter(name: "Self", type: !88)
!2674 = !DITemplateTypeParameter(name: "U", type: !88)
!2675 = !DILocation(line: 519, column: 15, scope: !2668)
!2676 = !DILocation(line: 519, column: 21, scope: !2668)
!2677 = !DILocation(line: 524, column: 24, scope: !2668)
!2678 = !DILocation(line: 524, column: 9, scope: !2668)
!2679 = !DILocation(line: 525, column: 6, scope: !2668)
!2680 = distinct !DISubprogram(name: "fold<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>, u8, core::num::dec2flt::common::ByteSlice::eq_ignore_case::{closure#0}>", linkageName: "_ZN4core4iter6traits8iterator8Iterator4fold17h692432889ff703a6E", scope: !2607, file: !2606, line: 2163, type: !2681, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2691, retainedNodes: !2683)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!8, !85, !8, !1358}
!2683 = !{!2684, !2685, !2686, !2687, !2689}
!2684 = !DILocalVariable(name: "self", arg: 1, scope: !2680, file: !2606, line: 2163, type: !85)
!2685 = !DILocalVariable(name: "init", arg: 2, scope: !2680, file: !2606, line: 2163, type: !8)
!2686 = !DILocalVariable(name: "f", arg: 3, scope: !2680, file: !2606, line: 2163, type: !1358)
!2687 = !DILocalVariable(name: "accum", scope: !2688, file: !2606, line: 2168, type: !8, align: 1)
!2688 = distinct !DILexicalBlock(scope: !2680, file: !2606, line: 2168, column: 9)
!2689 = !DILocalVariable(name: "x", scope: !2690, file: !2606, line: 2169, type: !73, align: 8)
!2690 = distinct !DILexicalBlock(scope: !2688, file: !2606, line: 2169, column: 19)
!2691 = !{!2692, !2693, !2694}
!2692 = !DITemplateTypeParameter(name: "Self", type: !85)
!2693 = !DITemplateTypeParameter(name: "B", type: !8)
!2694 = !DITemplateTypeParameter(name: "F", type: !1358)
!2695 = !DILocation(line: 2168, column: 13, scope: !2688)
!2696 = !DILocation(line: 2163, column: 19, scope: !2680)
!2697 = !DILocation(line: 2163, column: 29, scope: !2680)
!2698 = !DILocation(line: 2163, column: 38, scope: !2680)
!2699 = !DILocation(line: 2168, column: 25, scope: !2680)
!2700 = !DILocation(line: 2169, column: 9, scope: !2688)
!2701 = !DILocation(line: 2169, column: 29, scope: !2688)
!2702 = !DILocation(line: 2169, column: 19, scope: !2688)
!2703 = !DILocation(line: 2169, column: 24, scope: !2688)
!2704 = !DILocation(line: 2169, column: 24, scope: !2690)
!2705 = !DILocation(line: 2170, column: 23, scope: !2688)
!2706 = !DILocation(line: 2170, column: 21, scope: !2688)
!2707 = !DILocation(line: 2171, column: 9, scope: !2688)
!2708 = !DILocation(line: 2173, column: 5, scope: !2680)
!2709 = !DILocation(line: 2173, column: 6, scope: !2680)
!2710 = !DILocation(line: 2170, column: 13, scope: !2688)
!2711 = distinct !DISubprogram(name: "by_ref<core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6by_ref17hac9931c7b12b140dE", scope: !2607, file: !2606, line: 1623, type: !2712, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2716, retainedNodes: !2714)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!313, !313}
!2714 = !{!2715}
!2715 = !DILocalVariable(name: "self", arg: 1, scope: !2711, file: !2606, line: 1623, type: !313)
!2716 = !{!2717}
!2717 = !DITemplateTypeParameter(name: "Self", type: !314)
!2718 = !DILocation(line: 1623, column: 15, scope: !2711)
!2719 = !DILocation(line: 1628, column: 6, scope: !2711)
!2720 = distinct !DISubprogram(name: "copied<core::slice::iter::Iter<u8>, u8>", linkageName: "_ZN4core4iter6traits8iterator8Iterator6copied17h0ba0ff0396782e6fE", scope: !2607, file: !2606, line: 2886, type: !2721, scopeLine: 2886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2725, retainedNodes: !2723)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!149, !88}
!2723 = !{!2724}
!2724 = !DILocalVariable(name: "self", arg: 1, scope: !2720, file: !2606, line: 2886, type: !88)
!2725 = !{!2673, !100}
!2726 = !DILocation(line: 2886, column: 26, scope: !2720)
!2727 = !DILocation(line: 2891, column: 9, scope: !2720)
!2728 = !DILocation(line: 2892, column: 6, scope: !2720)
!2729 = distinct !DISubprogram(name: "try_fold<core::iter::adapters::zip::Zip<core::str::iter::Bytes, core::str::iter::Bytes>, (), core::iter::traits::iterator::Iterator::all::check::{closure#0}, core::ops::control_flow::ControlFlow<(), ()>>", linkageName: "_ZN4core4iter6traits8iterator8Iterator8try_fold17hf3232ee12c92807eE", scope: !2607, file: !2606, line: 1986, type: !2730, scopeLine: 1986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2744, retainedNodes: !2732)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!17, !140, !220, !2641}
!2732 = !{!2733, !2734, !2735, !2736, !2738, !2740, !2742}
!2733 = !DILocalVariable(name: "self", arg: 1, scope: !2729, file: !2606, line: 1986, type: !140)
!2734 = !DILocalVariable(name: "init", arg: 2, scope: !2729, file: !2606, line: 1986, type: !220)
!2735 = !DILocalVariable(name: "f", arg: 3, scope: !2729, file: !2606, line: 1986, type: !2641)
!2736 = !DILocalVariable(name: "accum", scope: !2737, file: !2606, line: 1992, type: !220, align: 1)
!2737 = distinct !DILexicalBlock(scope: !2729, file: !2606, line: 1992, column: 9)
!2738 = !DILocalVariable(name: "x", scope: !2739, file: !2606, line: 1993, type: !131, align: 1)
!2739 = distinct !DILexicalBlock(scope: !2737, file: !2606, line: 1993, column: 19)
!2740 = !DILocalVariable(name: "residual", scope: !2741, file: !2606, line: 1994, type: !212, align: 1)
!2741 = distinct !DILexicalBlock(scope: !2737, file: !2606, line: 1994, column: 32)
!2742 = !DILocalVariable(name: "val", scope: !2743, file: !2606, line: 1994, type: !220, align: 1)
!2743 = distinct !DILexicalBlock(scope: !2737, file: !2606, line: 1994, column: 21)
!2744 = !{!2618, !222, !2745, !2746}
!2745 = !DITemplateTypeParameter(name: "F", type: !2641)
!2746 = !DITemplateTypeParameter(name: "R", type: !17)
!2747 = !DILocation(line: 1986, column: 26, scope: !2729)
!2748 = !DILocation(line: 1986, column: 37, scope: !2729)
!2749 = !DILocation(line: 1986, column: 46, scope: !2729)
!2750 = !DILocation(line: 1992, column: 13, scope: !2737)
!2751 = !DILocation(line: 1994, column: 32, scope: !2741)
!2752 = !DILocation(line: 1994, column: 21, scope: !2743)
!2753 = !DILocation(line: 1993, column: 9, scope: !2737)
!2754 = !DILocation(line: 1993, column: 29, scope: !2737)
!2755 = !DILocation(line: 1993, column: 19, scope: !2737)
!2756 = !DILocation(line: 1993, column: 24, scope: !2737)
!2757 = !DILocation(line: 1993, column: 24, scope: !2739)
!2758 = !DILocation(line: 1994, column: 21, scope: !2737)
!2759 = !DILocation(line: 1995, column: 9, scope: !2737)
!2760 = !DILocation(line: 1996, column: 15, scope: !2737)
!2761 = !DILocation(line: 1997, column: 5, scope: !2729)
!2762 = !DILocation(line: 1997, column: 6, scope: !2729)
!2763 = !DILocation(line: 1994, column: 21, scope: !2741)
!2764 = distinct !DISubprogram(name: "enumerate<core::str::iter::Chars>", linkageName: "_ZN4core4iter6traits8iterator8Iterator9enumerate17h97135b2391b53e59E", scope: !2607, file: !2606, line: 890, type: !2765, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2769, retainedNodes: !2767)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!314, !317}
!2767 = !{!2768}
!2768 = !DILocalVariable(name: "self", arg: 1, scope: !2764, file: !2606, line: 890, type: !317)
!2769 = !{!2770}
!2770 = !DITemplateTypeParameter(name: "Self", type: !317)
!2771 = !DILocation(line: 890, column: 18, scope: !2764)
!2772 = !DILocation(line: 894, column: 9, scope: !2764)
!2773 = !DILocation(line: 895, column: 6, scope: !2764)
!2774 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf28523a15f4dd198E", scope: !85, file: !57, line: 22, type: !400, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !112, retainedNodes: !2775)
!2775 = !{!2776, !2777}
!2776 = !DILocalVariable(name: "a", arg: 1, scope: !2774, file: !57, line: 22, type: !88)
!2777 = !DILocalVariable(name: "b", arg: 2, scope: !2774, file: !57, line: 22, type: !88)
!2778 = !DILocation(line: 22, column: 32, scope: !2774)
!2779 = !DILocation(line: 22, column: 38, scope: !2774)
!2780 = !DILocation(line: 23, column: 9, scope: !2774)
!2781 = !DILocation(line: 24, column: 6, scope: !2774)
!2782 = distinct !DISubprogram(name: "new<core::str::iter::Bytes, core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17hf91346d71e625039E", scope: !141, file: !57, line: 22, type: !421, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !159, retainedNodes: !2783)
!2783 = !{!2784, !2785}
!2784 = !DILocalVariable(name: "a", arg: 1, scope: !2782, file: !57, line: 22, type: !144)
!2785 = !DILocalVariable(name: "b", arg: 2, scope: !2782, file: !57, line: 22, type: !144)
!2786 = !DILocation(line: 22, column: 32, scope: !2782)
!2787 = !DILocation(line: 22, column: 38, scope: !2782)
!2788 = !DILocation(line: 23, column: 9, scope: !2782)
!2789 = !DILocation(line: 24, column: 6, scope: !2782)
!2790 = distinct !DISubprogram(name: "try_get_unchecked<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip17try_get_unchecked17h721846e5d9984395E", scope: !59, file: !57, line: 556, type: !2791, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !153, retainedNodes: !2793)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{!76, !2187, !109}
!2793 = !{!2794, !2795}
!2794 = !DILocalVariable(name: "it", arg: 1, scope: !2790, file: !57, line: 556, type: !2187)
!2795 = !DILocalVariable(name: "idx", arg: 2, scope: !2790, file: !57, line: 556, type: !109)
!2796 = !DILocation(line: 556, column: 62, scope: !2790)
!2797 = !DILocation(line: 556, column: 74, scope: !2790)
!2798 = !DILocation(line: 562, column: 14, scope: !2790)
!2799 = !DILocation(line: 563, column: 2, scope: !2790)
!2800 = distinct !DISubprogram(name: "size<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h0fedc2414066c9baE", scope: !2801, file: !57, line: 538, type: !2802, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2807, retainedNodes: !2805)
!2801 = !DINamespace(name: "TrustedRandomAccessNoCoerce", scope: !59)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!109, !2804}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Iter<u8>", baseType: !88, size: 64, align: 64, dwarfAddressSpace: 0)
!2805 = !{!2806}
!2806 = !DILocalVariable(name: "self", arg: 1, scope: !2800, file: !57, line: 538, type: !2804)
!2807 = !{!2673}
!2808 = !DILocation(line: 538, column: 13, scope: !2800)
!2809 = !DILocation(line: 542, column: 9, scope: !2800)
!2810 = !DILocation(line: 543, column: 6, scope: !2800)
!2811 = distinct !DISubprogram(name: "size<core::str::iter::Bytes>", linkageName: "_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h19b34300de56c82fE", scope: !2801, file: !57, line: 538, type: !2812, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2817, retainedNodes: !2815)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!109, !2814}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Bytes", baseType: !144, size: 64, align: 64, dwarfAddressSpace: 0)
!2815 = !{!2816}
!2816 = !DILocalVariable(name: "self", arg: 1, scope: !2811, file: !57, line: 538, type: !2814)
!2817 = !{!2661}
!2818 = !DILocation(line: 538, column: 13, scope: !2811)
!2819 = !DILocation(line: 542, column: 9, scope: !2811)
!2820 = !DILocation(line: 543, column: 6, scope: !2811)
!2821 = distinct !DISubprogram(name: "new<core::slice::iter::Iter<u8>>", linkageName: "_ZN4core4iter8adapters6copied15Copied$LT$I$GT$3new17hd46a13205614d2f7E", scope: !149, file: !168, line: 22, type: !2721, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !153, retainedNodes: !2822)
!2822 = !{!2823}
!2823 = !DILocalVariable(name: "it", arg: 1, scope: !2821, file: !168, line: 22, type: !88)
!2824 = !DILocation(line: 22, column: 32, scope: !2821)
!2825 = !DILocation(line: 23, column: 9, scope: !2821)
!2826 = !DILocation(line: 24, column: 6, scope: !2821)
!2827 = distinct !DISubprogram(name: "new<core::str::iter::Chars>", linkageName: "_ZN4core4iter8adapters9enumerate18Enumerate$LT$I$GT$3new17h32a8c08ae4e53323E", scope: !314, file: !289, line: 22, type: !2765, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !321, retainedNodes: !2828)
!2828 = !{!2829}
!2829 = !DILocalVariable(name: "iter", arg: 1, scope: !2827, file: !289, line: 22, type: !317)
!2830 = !DILocation(line: 22, column: 32, scope: !2827)
!2831 = !DILocation(line: 23, column: 9, scope: !2827)
!2832 = !DILocation(line: 24, column: 6, scope: !2827)
!2833 = distinct !DISubprogram(name: "get<u8, usize>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$3get17h539b0c87fcc1bf17E", scope: !2835, file: !2834, line: 301, type: !2836, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2841, retainedNodes: !2838)
!2834 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "243cc0697a78f4c8bd2ff0d415c0bd00")
!2835 = !DINamespace(name: "{impl#0}", scope: !90)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!2149, !373, !109}
!2838 = !{!2839, !2840}
!2839 = !DILocalVariable(name: "self", arg: 1, scope: !2833, file: !2834, line: 301, type: !373)
!2840 = !DILocalVariable(name: "index", arg: 2, scope: !2833, file: !2834, line: 301, type: !109)
!2841 = !{!100, !2842}
!2842 = !DITemplateTypeParameter(name: "I", type: !109)
!2843 = !DILocation(line: 301, column: 19, scope: !2833)
!2844 = !DILocation(line: 301, column: 26, scope: !2833)
!2845 = !DILocation(line: 305, column: 9, scope: !2833)
!2846 = !DILocation(line: 306, column: 6, scope: !2833)
!2847 = distinct !DISubprogram(name: "iter<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h1aa6c32d2b116661E", scope: !2835, file: !2834, line: 704, type: !2848, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2850)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!88, !373}
!2850 = !{!2851}
!2851 = !DILocalVariable(name: "self", arg: 1, scope: !2847, file: !2834, line: 704, type: !373)
!2852 = !DILocation(line: 704, column: 17, scope: !2847)
!2853 = !DILocation(line: 705, column: 9, scope: !2847)
!2854 = !DILocation(line: 706, column: 6, scope: !2847)
!2855 = distinct !DISubprogram(name: "first<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$5first17hae99d40c22f691a2E", scope: !2835, file: !2834, line: 142, type: !2856, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2858)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!2149, !373}
!2858 = !{!2859, !2860}
!2859 = !DILocalVariable(name: "self", arg: 1, scope: !2855, file: !2834, line: 142, type: !373)
!2860 = !DILocalVariable(name: "first", scope: !2861, file: !2834, line: 143, type: !76, align: 8)
!2861 = distinct !DILexicalBlock(scope: !2855, file: !2834, line: 143, column: 16)
!2862 = !DILocation(line: 142, column: 24, scope: !2855)
!2863 = !DILocation(line: 143, column: 16, scope: !2855)
!2864 = !DILocation(line: 143, column: 58, scope: !2855)
!2865 = !DILocation(line: 143, column: 9, scope: !2855)
!2866 = !DILocation(line: 143, column: 17, scope: !2855)
!2867 = !DILocation(line: 143, column: 17, scope: !2861)
!2868 = !DILocation(line: 143, column: 37, scope: !2855)
!2869 = !DILocation(line: 144, column: 6, scope: !2855)
!2870 = distinct !DISubprogram(name: "as_ptr<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$6as_ptr17h71c8ac8c06b7d8a2E", scope: !2835, file: !2834, line: 431, type: !2871, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2873)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!98, !373}
!2873 = !{!2874}
!2874 = !DILocalVariable(name: "self", arg: 1, scope: !2870, file: !2834, line: 431, type: !373)
!2875 = !DILocation(line: 431, column: 25, scope: !2870)
!2876 = !DILocation(line: 432, column: 9, scope: !2870)
!2877 = !DILocation(line: 433, column: 6, scope: !2870)
!2878 = distinct !DISubprogram(name: "is_empty<u8>", linkageName: "_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8is_empty17h0e52eb6f587116c6E", scope: !2835, file: !2834, line: 124, type: !2879, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2881)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!675, !373}
!2881 = !{!2882}
!2882 = !DILocalVariable(name: "self", arg: 1, scope: !2878, file: !2834, line: 124, type: !373)
!2883 = !DILocation(line: 124, column: 27, scope: !2878)
!2884 = !DILocation(line: 125, column: 9, scope: !2878)
!2885 = !DILocation(line: 126, column: 6, scope: !2878)
!2886 = distinct !DISubprogram(name: "eq<u8, u8>", linkageName: "_ZN4core5slice3cmp81_$LT$impl$u20$core..cmp..PartialEq$LT$$u5b$B$u5d$$GT$$u20$for$u20$$u5b$A$u5d$$GT$2eq17h9fdb2abeb156c430E", scope: !2888, file: !2887, line: 26, type: !1332, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2893, retainedNodes: !2890)
!2887 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/cmp.rs", directory: "", checksumkind: CSK_MD5, checksum: "0f370535ae3eff2c0fd9fccdd14b7032")
!2888 = !DINamespace(name: "{impl#0}", scope: !2889)
!2889 = !DINamespace(name: "cmp", scope: !90)
!2890 = !{!2891, !2892}
!2891 = !DILocalVariable(name: "self", arg: 1, scope: !2886, file: !2887, line: 26, type: !373)
!2892 = !DILocalVariable(name: "other", arg: 2, scope: !2886, file: !2887, line: 26, type: !373)
!2893 = !{!2894, !2693}
!2894 = !DITemplateTypeParameter(name: "A", type: !8)
!2895 = !DILocation(line: 26, column: 11, scope: !2886)
!2896 = !DILocation(line: 26, column: 18, scope: !2886)
!2897 = !DILocation(line: 27, column: 9, scope: !2886)
!2898 = !DILocation(line: 28, column: 6, scope: !2886)
!2899 = distinct !DISubprogram(name: "from_raw_parts<u8>", linkageName: "_ZN4core5slice3raw14from_raw_parts17hcaadf253843d6163E", scope: !2901, file: !2900, line: 88, type: !2902, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2904)
!2900 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/raw.rs", directory: "", checksumkind: CSK_MD5, checksum: "5d3d89763d536c3489cc9de04b56e43e")
!2901 = !DINamespace(name: "raw", scope: !90)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!373, !98, !109}
!2904 = !{!2905, !2906}
!2905 = !DILocalVariable(name: "data", arg: 1, scope: !2899, file: !2900, line: 88, type: !98)
!2906 = !DILocalVariable(name: "len", arg: 2, scope: !2899, file: !2900, line: 88, type: !109)
!2907 = !DILocation(line: 88, column: 37, scope: !2899)
!2908 = !DILocation(line: 88, column: 53, scope: !2899)
!2909 = !DILocation(line: 95, column: 16, scope: !2899)
!2910 = !DILocation(line: 96, column: 2, scope: !2899)
!2911 = distinct !DISubprogram(name: "new<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$3new17h7537b812ca168bd9E", scope: !88, file: !2912, line: 87, type: !2848, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2913)
!2912 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter.rs", directory: "", checksumkind: CSK_MD5, checksum: "5aaa66a4d49b9ecc9bcb7869337da7d8")
!2913 = !{!2914, !2915, !2917}
!2914 = !DILocalVariable(name: "slice", arg: 1, scope: !2911, file: !2912, line: 87, type: !373)
!2915 = !DILocalVariable(name: "ptr", scope: !2916, file: !2912, line: 88, type: !98, align: 8)
!2916 = distinct !DILexicalBlock(scope: !2911, file: !2912, line: 88, column: 9)
!2917 = !DILocalVariable(name: "end", scope: !2918, file: !2912, line: 93, type: !98, align: 8)
!2918 = distinct !DILexicalBlock(scope: !2916, file: !2912, line: 93, column: 13)
!2919 = !DILocation(line: 87, column: 23, scope: !2911)
!2920 = !DILocation(line: 93, column: 17, scope: !2918)
!2921 = !DILocation(line: 88, column: 19, scope: !2911)
!2922 = !DILocation(line: 88, column: 13, scope: !2916)
!2923 = !DILocation(line: 91, column: 21, scope: !2916)
!2924 = !DILocation(line: 91, column: 20, scope: !2916)
!2925 = !DILocation(line: 91, column: 13, scope: !2916)
!2926 = !DILocation(line: 93, column: 26, scope: !2916)
!2927 = !DILocalVariable(name: "self", arg: 1, scope: !2928, file: !264, line: 638, type: !98)
!2928 = distinct !DISubprogram(name: "wrapping_add<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$12wrapping_add17hbb809e6909397b5eE", scope: !265, file: !264, line: 638, type: !267, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2929)
!2929 = !{!2927, !2930}
!2930 = !DILocalVariable(name: "count", arg: 2, scope: !2928, file: !264, line: 638, type: !109)
!2931 = !DILocation(line: 638, column: 31, scope: !2928, inlinedAt: !2932)
!2932 = distinct !DILocation(line: 94, column: 17, scope: !2916)
!2933 = !DILocation(line: 638, column: 37, scope: !2928, inlinedAt: !2932)
!2934 = !DILocalVariable(name: "self", arg: 1, scope: !2935, file: !264, line: 292, type: !98)
!2935 = distinct !DISubprogram(name: "wrapping_offset<u8>", linkageName: "_ZN4core3ptr9const_ptr33_$LT$impl$u20$$BP$const$u20$T$GT$15wrapping_offset17h13588d32deea9d39E", scope: !265, file: !264, line: 292, type: !276, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2936)
!2936 = !{!2934, !2937}
!2937 = !DILocalVariable(name: "count", arg: 2, scope: !2935, file: !264, line: 292, type: !278)
!2938 = !DILocation(line: 292, column: 34, scope: !2935, inlinedAt: !2939)
!2939 = distinct !DILocation(line: 642, column: 9, scope: !2928, inlinedAt: !2932)
!2940 = !DILocation(line: 292, column: 40, scope: !2935, inlinedAt: !2939)
!2941 = !DILocation(line: 297, column: 18, scope: !2935, inlinedAt: !2939)
!2942 = !DILocation(line: 94, column: 17, scope: !2916)
!2943 = !DILocation(line: 511, column: 29, scope: !263, inlinedAt: !2944)
!2944 = distinct !DILocation(line: 96, column: 17, scope: !2916)
!2945 = !DILocation(line: 511, column: 35, scope: !263, inlinedAt: !2944)
!2946 = !DILocation(line: 230, column: 32, scope: !275, inlinedAt: !2947)
!2947 = distinct !DILocation(line: 516, column: 18, scope: !263, inlinedAt: !2944)
!2948 = !DILocation(line: 230, column: 38, scope: !275, inlinedAt: !2947)
!2949 = !DILocation(line: 235, column: 18, scope: !275, inlinedAt: !2947)
!2950 = !DILocation(line: 96, column: 17, scope: !2916)
!2951 = !DILocation(line: 93, column: 23, scope: !2916)
!2952 = !DILocation(line: 99, column: 25, scope: !2918)
!2953 = !DILocation(line: 99, column: 64, scope: !2918)
!2954 = !DILocation(line: 99, column: 13, scope: !2918)
!2955 = !DILocation(line: 101, column: 6, scope: !2911)
!2956 = distinct !DISubprogram(name: "as_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$8as_slice17h720044fad6a2487fE", scope: !88, file: !2912, line: 128, type: !2957, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2959)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!373, !2804}
!2959 = !{!2960}
!2960 = !DILocalVariable(name: "self", arg: 1, scope: !2956, file: !2912, line: 128, type: !2804)
!2961 = !DILocation(line: 128, column: 21, scope: !2956)
!2962 = !DILocalVariable(name: "self", arg: 1, scope: !2963, file: !2964, line: 74, type: !2804)
!2963 = distinct !DISubprogram(name: "make_slice<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$10make_slice17he0acab7c9116edccE", scope: !88, file: !2964, line: 74, type: !2957, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2965)
!2964 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/slice/iter/macros.rs", directory: "", checksumkind: CSK_MD5, checksum: "eaa73f4306714798d2867dabeabed334")
!2965 = !{!2962, !2966, !2968, !2970}
!2966 = !DILocalVariable(name: "start", scope: !2967, file: !2964, line: 78, type: !93, align: 8)
!2967 = distinct !DILexicalBlock(scope: !2963, file: !2964, line: 18, column: 9)
!2968 = !DILocalVariable(name: "size", scope: !2969, file: !2964, line: 78, type: !109, align: 8)
!2969 = distinct !DILexicalBlock(scope: !2967, file: !2964, line: 19, column: 9)
!2970 = !DILocalVariable(name: "diff", scope: !2971, file: !2964, line: 78, type: !109, align: 8)
!2971 = distinct !DILexicalBlock(scope: !2969, file: !2964, line: 29, column: 13)
!2972 = !DILocation(line: 74, column: 27, scope: !2963, inlinedAt: !2973)
!2973 = distinct !DILocation(line: 129, column: 9, scope: !2956)
!2974 = !DILocation(line: 78, column: 41, scope: !2963, inlinedAt: !2973)
!2975 = !DILocation(line: 78, column: 60, scope: !2963, inlinedAt: !2973)
!2976 = !DILocation(line: 78, column: 60, scope: !2967, inlinedAt: !2973)
!2977 = !DILocalVariable(arg: 1, scope: !2978, file: !2912, line: 40, type: !98)
!2978 = distinct !DISubprogram(name: "size_from_ptr<u8>", linkageName: "_ZN4core5slice4iter13size_from_ptr17h5a5256e899ba6652E", scope: !89, file: !2912, line: 40, type: !2979, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !2981)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!109, !98}
!2981 = !{!2977}
!2982 = !DILocation(line: 40, column: 21, scope: !2978, inlinedAt: !2983)
!2983 = distinct !DILocation(line: 78, column: 60, scope: !2967, inlinedAt: !2973)
!2984 = !DILocation(line: 78, column: 60, scope: !2969, inlinedAt: !2973)
!2985 = !DILocation(line: 78, column: 60, scope: !2971, inlinedAt: !2973)
!2986 = !DILocation(line: 78, column: 26, scope: !2963, inlinedAt: !2973)
!2987 = !DILocation(line: 129, column: 9, scope: !2956)
!2988 = !DILocation(line: 130, column: 6, scope: !2956)
!2989 = distinct !DISubprogram(name: "index<u8, core::ops::range::RangeFrom<usize>>", linkageName: "_ZN4core5slice5index74_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$$u5b$T$u5d$$GT$5index17h85cbd218e682b1adE", scope: !2990, file: !240, line: 14, type: !2991, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2996, retainedNodes: !2993)
!2990 = !DINamespace(name: "{impl#0}", scope: !242)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!373, !373, !359, !377}
!2993 = !{!2994, !2995}
!2994 = !DILocalVariable(name: "self", arg: 1, scope: !2989, file: !240, line: 14, type: !373)
!2995 = !DILocalVariable(name: "index", arg: 2, scope: !2989, file: !240, line: 14, type: !359)
!2996 = !{!100, !2509}
!2997 = !DILocation(line: 14, column: 14, scope: !2989)
!2998 = !DILocation(line: 14, column: 21, scope: !2989)
!2999 = !DILocation(line: 15, column: 9, scope: !2989)
!3000 = !DILocation(line: 16, column: 6, scope: !2989)
!3001 = distinct !DISubprogram(name: "map<u32, char, core::str::iter::{impl#0}::next::{closure#0}>", linkageName: "_ZN4core6option15Option$LT$T$GT$3map17hffef032889a08927E", scope: !2175, file: !3002, line: 834, type: !3003, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3025, retainedNodes: !3020)
!3002 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/option.rs", directory: "", checksumkind: CSK_MD5, checksum: "ae2d10012265ee4a26e1fe00b9dc31b2")
!3003 = !DISubroutineType(types: !3004)
!3004 = !{!3005, !2175, !3017}
!3005 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<char>", scope: !65, file: !2, size: 32, align: 32, elements: !3006, identifier: "c9f95cfd81201893a604cb13a7526586")
!3006 = !{!3007}
!3007 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 32, align: 32, elements: !3008, templateParams: !3011, identifier: "c9f95cfd81201893a604cb13a7526586_variant_part", discriminator: !1181)
!3008 = !{!3009, !3013}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3007, file: !2, baseType: !3010, size: 32, align: 32, extraData: i64 1114112)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3005, file: !2, size: 32, align: 32, elements: !4, templateParams: !3011, identifier: "c9f95cfd81201893a604cb13a7526586::None")
!3011 = !{!3012}
!3012 = !DITemplateTypeParameter(name: "T", type: !306)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3007, file: !2, baseType: !3014, size: 32, align: 32)
!3014 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3005, file: !2, size: 32, align: 32, elements: !3015, templateParams: !3011, identifier: "c9f95cfd81201893a604cb13a7526586::Some")
!3015 = !{!3016}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3014, file: !2, baseType: !306, size: 32, align: 32)
!3017 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !3018, file: !2, align: 8, elements: !4, templateParams: !4, identifier: "2a85ef6f0e8e92b0f92609c5a9d9e7ce")
!3018 = !DINamespace(name: "next", scope: !3019)
!3019 = !DINamespace(name: "{impl#0}", scope: !145)
!3020 = !{!3021, !3022, !3023}
!3021 = !DILocalVariable(name: "self", arg: 1, scope: !3001, file: !3002, line: 834, type: !2175)
!3022 = !DILocalVariable(name: "f", arg: 2, scope: !3001, file: !3002, line: 834, type: !3017)
!3023 = !DILocalVariable(name: "x", scope: !3024, file: !3002, line: 836, type: !312, align: 4)
!3024 = distinct !DILexicalBlock(scope: !3001, file: !3002, line: 836, column: 13)
!3025 = !{!2182, !3026, !3027}
!3026 = !DITemplateTypeParameter(name: "U", type: !306)
!3027 = !DITemplateTypeParameter(name: "F", type: !3017)
!3028 = !DILocation(line: 834, column: 38, scope: !3001)
!3029 = !DILocation(line: 834, column: 44, scope: !3001)
!3030 = !DILocation(line: 835, column: 15, scope: !3001)
!3031 = !DILocation(line: 835, column: 9, scope: !3001)
!3032 = !DILocation(line: 837, column: 21, scope: !3001)
!3033 = !DILocation(line: 836, column: 18, scope: !3001)
!3034 = !DILocation(line: 836, column: 18, scope: !3024)
!3035 = !DILocation(line: 836, column: 29, scope: !3024)
!3036 = !DILocation(line: 836, column: 24, scope: !3024)
!3037 = !DILocation(line: 839, column: 5, scope: !3001)
!3038 = !DILocation(line: 839, column: 6, scope: !3001)
!3039 = distinct !DISubprogram(name: "is_none<(char, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_none17h1e3be241a57d2d6aE", scope: !3040, file: !3002, line: 565, type: !3056, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3046, retainedNodes: !3059)
!3040 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(char, usize)>", scope: !65, file: !2, size: 128, align: 64, elements: !3041, identifier: "3c25cf5bda399e80fac6379ee857f092")
!3041 = !{!3042}
!3042 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 128, align: 64, elements: !3043, templateParams: !3046, identifier: "3c25cf5bda399e80fac6379ee857f092_variant_part", discriminator: !1181)
!3043 = !{!3044, !3052}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !3042, file: !2, baseType: !3045, size: 128, align: 64, extraData: i64 1114112)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !3040, file: !2, size: 128, align: 64, elements: !4, templateParams: !3046, identifier: "3c25cf5bda399e80fac6379ee857f092::None")
!3046 = !{!3047}
!3047 = !DITemplateTypeParameter(name: "T", type: !3048)
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "(char, usize)", file: !2, size: 128, align: 64, elements: !3049, templateParams: !4, identifier: "4313d2f35c76ce959082352d0aac60a")
!3049 = !{!3050, !3051}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3048, file: !2, baseType: !306, size: 32, align: 32)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3048, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !3042, file: !2, baseType: !3053, size: 128, align: 64)
!3053 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !3040, file: !2, size: 128, align: 64, elements: !3054, templateParams: !3046, identifier: "3c25cf5bda399e80fac6379ee857f092::Some")
!3054 = !{!3055}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3053, file: !2, baseType: !3048, size: 128, align: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!675, !3058}
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&Option<(char, usize)>", baseType: !3040, size: 64, align: 64, dwarfAddressSpace: 0)
!3059 = !{!3060}
!3060 = !DILocalVariable(name: "self", arg: 1, scope: !3039, file: !3002, line: 565, type: !3058)
!3061 = !DILocation(line: 565, column: 26, scope: !3039)
!3062 = !DILocation(line: 566, column: 10, scope: !3039)
!3063 = !DILocation(line: 566, column: 9, scope: !3039)
!3064 = !DILocation(line: 567, column: 6, scope: !3039)
!3065 = distinct !DISubprogram(name: "is_some<(char, usize)>", linkageName: "_ZN4core6option15Option$LT$T$GT$7is_some17he00cc1c1f027ac36E", scope: !3040, file: !3002, line: 545, type: !3056, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3046, retainedNodes: !3066)
!3066 = !{!3067}
!3067 = !DILocalVariable(name: "self", arg: 1, scope: !3065, file: !3002, line: 545, type: !3058)
!3068 = !DILocation(line: 545, column: 26, scope: !3065)
!3069 = !DILocation(line: 546, column: 18, scope: !3065)
!3070 = !DILocation(line: 546, column: 9, scope: !3065)
!3071 = !DILocation(line: 547, column: 6, scope: !3065)
!3072 = distinct !DISubprogram(name: "map_err<f64, core::num::dec2flt::ParseFloatError, num_traits::ParseFloatError, num_traits::{impl#23}::from_str_radix::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17ha43927676a2de699E", scope: !1311, file: !3073, line: 850, type: !3074, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3106, retainedNodes: !3099)
!3073 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/result.rs", directory: "", checksumkind: CSK_MD5, checksum: "f73030f150a3926f0f5a346ed13cef73")
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!3076, !1311, !3093}
!3076 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f64, num_traits::ParseFloatError>", scope: !25, file: !2, size: 128, align: 64, elements: !3077, identifier: "f7ebdbaedd07e5df6939f89f3d407ad2")
!3077 = !{!3078}
!3078 = !DICompositeType(tag: DW_TAG_variant_part, scope: !25, file: !2, size: 128, align: 64, elements: !3079, templateParams: !3084, identifier: "f7ebdbaedd07e5df6939f89f3d407ad2_variant_part", discriminator: !1301)
!3079 = !{!3080, !3089}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3078, file: !2, baseType: !3081, size: 128, align: 64, extraData: i64 0)
!3081 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3076, file: !2, size: 128, align: 64, elements: !3082, templateParams: !3084, identifier: "f7ebdbaedd07e5df6939f89f3d407ad2::Ok")
!3082 = !{!3083}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3081, file: !2, baseType: !525, size: 64, align: 64, offset: 64)
!3084 = !{!824, !3085}
!3085 = !DITemplateTypeParameter(name: "E", type: !3086)
!3086 = !DICompositeType(tag: DW_TAG_structure_type, name: "ParseFloatError", scope: !7, file: !2, size: 8, align: 8, elements: !3087, templateParams: !4, identifier: "8584c83babc583ebecce3ba50b1e547a")
!3087 = !{!3088}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !3086, file: !2, baseType: !6, size: 8, align: 8)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3078, file: !2, baseType: !3090, size: 128, align: 64, extraData: i64 1)
!3090 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3076, file: !2, size: 128, align: 64, elements: !3091, templateParams: !3084, identifier: "f7ebdbaedd07e5df6939f89f3d407ad2::Err")
!3091 = !{!3092}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3090, file: !2, baseType: !3086, size: 8, align: 8, offset: 8)
!3093 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !3094, file: !2, size: 64, align: 64, elements: !3096, templateParams: !4, identifier: "c1c590d90553496598893ed972913ab3")
!3094 = !DINamespace(name: "from_str_radix", scope: !3095)
!3095 = !DINamespace(name: "{impl#23}", scope: !7)
!3096 = !{!3097}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !3093, file: !2, baseType: !3098, size: 64, align: 64)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&&str", baseType: !383, size: 64, align: 64, dwarfAddressSpace: 0)
!3099 = !{!3100, !3101, !3102, !3104}
!3100 = !DILocalVariable(name: "self", arg: 1, scope: !3072, file: !3073, line: 850, type: !1311)
!3101 = !DILocalVariable(name: "op", arg: 2, scope: !3072, file: !3073, line: 850, type: !3093)
!3102 = !DILocalVariable(name: "t", scope: !3103, file: !3073, line: 852, type: !525, align: 8)
!3103 = distinct !DILexicalBlock(scope: !3072, file: !3073, line: 852, column: 13)
!3104 = !DILocalVariable(name: "e", scope: !3105, file: !3073, line: 853, type: !1294, align: 1)
!3105 = distinct !DILexicalBlock(scope: !3072, file: !3073, line: 853, column: 13)
!3106 = !{!824, !1293, !3107, !3108}
!3107 = !DITemplateTypeParameter(name: "F", type: !3086)
!3108 = !DITemplateTypeParameter(name: "O", type: !3093)
!3109 = !DILocation(line: 850, column: 42, scope: !3072)
!3110 = !DILocation(line: 850, column: 48, scope: !3072)
!3111 = !DILocation(line: 851, column: 15, scope: !3072)
!3112 = !DILocation(line: 851, column: 9, scope: !3072)
!3113 = !DILocation(line: 852, column: 16, scope: !3072)
!3114 = !DILocation(line: 852, column: 16, scope: !3103)
!3115 = !DILocation(line: 852, column: 22, scope: !3103)
!3116 = !DILocation(line: 852, column: 26, scope: !3072)
!3117 = !DILocation(line: 853, column: 17, scope: !3072)
!3118 = !DILocation(line: 853, column: 17, scope: !3105)
!3119 = !DILocation(line: 853, column: 27, scope: !3105)
!3120 = !DILocation(line: 853, column: 23, scope: !3105)
!3121 = !DILocation(line: 853, column: 32, scope: !3072)
!3122 = !DILocation(line: 855, column: 5, scope: !3072)
!3123 = !DILocation(line: 855, column: 6, scope: !3072)
!3124 = distinct !DISubprogram(name: "map_err<f32, core::num::dec2flt::ParseFloatError, num_traits::ParseFloatError, num_traits::{impl#22}::from_str_radix::{closure#0}>", linkageName: "_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb71883dcc5fa9debE", scope: !1284, file: !3073, line: 850, type: !3125, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3152, retainedNodes: !3145)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!3127, !1284, !3140}
!3127 = !DICompositeType(tag: DW_TAG_structure_type, name: "Result<f32, num_traits::ParseFloatError>", scope: !25, file: !2, size: 64, align: 32, elements: !3128, identifier: "39336dd906fbe3916c055672d4163ade")
!3128 = !{!3129}
!3129 = !DICompositeType(tag: DW_TAG_variant_part, scope: !25, file: !2, size: 64, align: 32, elements: !3130, templateParams: !3135, identifier: "39336dd906fbe3916c055672d4163ade_variant_part", discriminator: !1301)
!3130 = !{!3131, !3136}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "Ok", scope: !3129, file: !2, baseType: !3132, size: 64, align: 32, extraData: i64 0)
!3132 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ok", scope: !3127, file: !2, size: 64, align: 32, elements: !3133, templateParams: !3135, identifier: "39336dd906fbe3916c055672d4163ade::Ok")
!3133 = !{!3134}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3132, file: !2, baseType: !510, size: 32, align: 32, offset: 32)
!3135 = !{!807, !3085}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "Err", scope: !3129, file: !2, baseType: !3137, size: 64, align: 32, extraData: i64 1)
!3137 = !DICompositeType(tag: DW_TAG_structure_type, name: "Err", scope: !3127, file: !2, size: 64, align: 32, elements: !3138, templateParams: !3135, identifier: "39336dd906fbe3916c055672d4163ade::Err")
!3138 = !{!3139}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3137, file: !2, baseType: !3086, size: 8, align: 8, offset: 8)
!3140 = !DICompositeType(tag: DW_TAG_structure_type, name: "{closure#0}", scope: !3141, file: !2, size: 64, align: 64, elements: !3143, templateParams: !4, identifier: "93a7453b6a2694995cadf825ae0a24cc")
!3141 = !DINamespace(name: "from_str_radix", scope: !3142)
!3142 = !DINamespace(name: "{impl#22}", scope: !7)
!3143 = !{!3144}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "_ref__src", scope: !3140, file: !2, baseType: !3098, size: 64, align: 64)
!3145 = !{!3146, !3147, !3148, !3150}
!3146 = !DILocalVariable(name: "self", arg: 1, scope: !3124, file: !3073, line: 850, type: !1284)
!3147 = !DILocalVariable(name: "op", arg: 2, scope: !3124, file: !3073, line: 850, type: !3140)
!3148 = !DILocalVariable(name: "t", scope: !3149, file: !3073, line: 852, type: !510, align: 4)
!3149 = distinct !DILexicalBlock(scope: !3124, file: !3073, line: 852, column: 13)
!3150 = !DILocalVariable(name: "e", scope: !3151, file: !3073, line: 853, type: !1294, align: 1)
!3151 = distinct !DILexicalBlock(scope: !3124, file: !3073, line: 853, column: 13)
!3152 = !{!807, !1293, !3107, !3153}
!3153 = !DITemplateTypeParameter(name: "O", type: !3140)
!3154 = !DILocation(line: 850, column: 42, scope: !3124)
!3155 = !DILocation(line: 850, column: 48, scope: !3124)
!3156 = !DILocation(line: 851, column: 15, scope: !3124)
!3157 = !DILocation(line: 851, column: 9, scope: !3124)
!3158 = !DILocation(line: 852, column: 16, scope: !3124)
!3159 = !DILocation(line: 852, column: 16, scope: !3149)
!3160 = !DILocation(line: 852, column: 22, scope: !3149)
!3161 = !DILocation(line: 852, column: 26, scope: !3124)
!3162 = !DILocation(line: 853, column: 17, scope: !3124)
!3163 = !DILocation(line: 853, column: 17, scope: !3151)
!3164 = !DILocation(line: 853, column: 27, scope: !3151)
!3165 = !DILocation(line: 853, column: 23, scope: !3151)
!3166 = !DILocation(line: 853, column: 32, scope: !3124)
!3167 = !DILocation(line: 855, column: 5, scope: !3124)
!3168 = !DILocation(line: 855, column: 6, scope: !3124)
!3169 = distinct !DISubprogram(name: "into_iter<&mut core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h33f14b6b687b5e3eE", scope: !3171, file: !3170, line: 243, type: !2712, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3175, retainedNodes: !3173)
!3170 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/iter/traits/collect.rs", directory: "", checksumkind: CSK_MD5, checksum: "46be48ef08ae744b2af0ec194db882b2")
!3171 = !DINamespace(name: "{impl#0}", scope: !3172)
!3172 = !DINamespace(name: "collect", scope: !2609)
!3173 = !{!3174}
!3174 = !DILocalVariable(name: "self", arg: 1, scope: !3169, file: !3170, line: 243, type: !313)
!3175 = !{!3176}
!3176 = !DITemplateTypeParameter(name: "I", type: !313)
!3177 = !DILocation(line: 243, column: 18, scope: !3169)
!3178 = !DILocation(line: 245, column: 6, scope: !3169)
!3179 = distinct !DISubprogram(name: "into_iter<core::slice::iter::Iter<u8>>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h9d5a3c46bc8c6025E", scope: !3171, file: !3170, line: 243, type: !3180, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !153, retainedNodes: !3182)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!88, !88}
!3182 = !{!3183}
!3183 = !DILocalVariable(name: "self", arg: 1, scope: !3179, file: !3170, line: 243, type: !88)
!3184 = !DILocation(line: 243, column: 18, scope: !3179)
!3185 = !DILocation(line: 245, column: 6, scope: !3179)
!3186 = distinct !DISubprogram(name: "into_iter<core::str::iter::Bytes>", linkageName: "_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17ha8a6bdf8abd5ff80E", scope: !3171, file: !3170, line: 243, type: !3187, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3191, retainedNodes: !3189)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!144, !144}
!3189 = !{!3190}
!3190 = !DILocalVariable(name: "self", arg: 1, scope: !3186, file: !3170, line: 243, type: !144)
!3191 = !{!3192}
!3192 = !DITemplateTypeParameter(name: "I", type: !144)
!3193 = !DILocation(line: 243, column: 18, scope: !3186)
!3194 = !DILocation(line: 245, column: 6, scope: !3186)
!3195 = distinct !DISubprogram(name: "as_ref<u8>", linkageName: "_ZN71_$LT$$u5b$T$u5d$$u20$as$u20$core..convert..AsRef$LT$$u5b$T$u5d$$GT$$GT$6as_ref17hf8157f5f8be10685E", scope: !3197, file: !3196, line: 600, type: !3198, scopeLine: 600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3200)
!3196 = !DIFile(filename: "/home/runner/work/bpf-tools/bpf-tools/out/rust/library/core/src/convert/mod.rs", directory: "", checksumkind: CSK_MD5, checksum: "013dcb324a64d449769af1e8bbdf7aa9")
!3197 = !DINamespace(name: "{impl#8}", scope: !225)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!373, !373}
!3200 = !{!3201}
!3201 = !DILocalVariable(name: "self", arg: 1, scope: !3195, file: !3196, line: 600, type: !373)
!3202 = !DILocation(line: 600, column: 15, scope: !3195)
!3203 = !DILocation(line: 602, column: 6, scope: !3195)
!3204 = distinct !DISubprogram(name: "next<core::iter::adapters::enumerate::Enumerate<core::str::iter::Chars>>", linkageName: "_ZN72_$LT$$RF$mut$u20$I$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h71ee9bc4cc19eec9E", scope: !3205, file: !2606, line: 3461, type: !3206, scopeLine: 3461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3211, retainedNodes: !3209)
!3205 = !DINamespace(name: "{impl#0}", scope: !2608)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!294, !3208}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut &mut Enumerate<core::str::iter::Chars>", baseType: !313, size: 64, align: 64, dwarfAddressSpace: 0)
!3209 = !{!3210}
!3210 = !DILocalVariable(name: "self", arg: 1, scope: !3204, file: !2606, line: 3461, type: !3208)
!3211 = !{!3212}
!3212 = !DITemplateTypeParameter(name: "I", type: !314)
!3213 = !DILocation(line: 3461, column: 13, scope: !3204)
!3214 = !DILocation(line: 3462, column: 9, scope: !3204)
!3215 = !DILocation(line: 3463, column: 6, scope: !3204)
!3216 = distinct !DISubprogram(name: "try_get_unchecked<core::slice::iter::Iter<u8>>", linkageName: "_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17h418df6df8687309aE", scope: !3217, file: !57, line: 578, type: !2791, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !153, retainedNodes: !3218)
!3217 = !DINamespace(name: "{impl#17}", scope: !59)
!3218 = !{!3219, !3220}
!3219 = !DILocalVariable(name: "self", arg: 1, scope: !3216, file: !57, line: 578, type: !2187)
!3220 = !DILocalVariable(name: "index", arg: 2, scope: !3216, file: !57, line: 578, type: !109)
!3221 = !DILocation(line: 578, column: 33, scope: !3216)
!3222 = !DILocation(line: 578, column: 44, scope: !3216)
!3223 = !DILocation(line: 581, column: 18, scope: !3216)
!3224 = !DILocation(line: 582, column: 6, scope: !3216)
!3225 = distinct !DISubprogram(name: "equal<u8, u8>", linkageName: "_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17he900d6ddd152772fE", scope: !3226, file: !2887, line: 83, type: !1332, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2893, retainedNodes: !3227)
!3226 = !DINamespace(name: "{impl#5}", scope: !2889)
!3227 = !{!3228, !3229, !3230}
!3228 = !DILocalVariable(name: "self", arg: 1, scope: !3225, file: !2887, line: 83, type: !373)
!3229 = !DILocalVariable(name: "other", arg: 2, scope: !3225, file: !2887, line: 83, type: !373)
!3230 = !DILocalVariable(name: "size", scope: !3231, file: !2887, line: 91, type: !109, align: 8)
!3231 = distinct !DILexicalBlock(scope: !3225, file: !2887, line: 91, column: 13)
!3232 = !DILocation(line: 83, column: 14, scope: !3225)
!3233 = !DILocation(line: 83, column: 21, scope: !3225)
!3234 = !DILocation(line: 84, column: 12, scope: !3225)
!3235 = !DILocation(line: 91, column: 24, scope: !3225)
!3236 = !DILocation(line: 91, column: 17, scope: !3231)
!3237 = !DILocation(line: 85, column: 20, scope: !3225)
!3238 = !DILocation(line: 94, column: 6, scope: !3225)
!3239 = !DILocation(line: 92, column: 20, scope: !3231)
!3240 = !DILocation(line: 92, column: 48, scope: !3231)
!3241 = !DILocation(line: 92, column: 13, scope: !3231)
!3242 = distinct !DISubprogram(name: "branch<&u8>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h604e3fef0399fad4E", scope: !3243, file: !3002, line: 2023, type: !3244, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !105, retainedNodes: !3262)
!3243 = !DINamespace(name: "{impl#40}", scope: !65)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!3246, !2149}
!3246 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, &u8>", scope: !18, file: !2, size: 64, align: 64, elements: !3247, identifier: "e8e383bc653a5e995a46cdaeaaea8ee2")
!3247 = !{!3248}
!3248 = !DICompositeType(tag: DW_TAG_variant_part, scope: !18, file: !2, size: 64, align: 64, elements: !3249, templateParams: !3254, identifier: "e8e383bc653a5e995a46cdaeaaea8ee2_variant_part", discriminator: !3261)
!3249 = !{!3250, !3257}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3248, file: !2, baseType: !3251, size: 64, align: 64)
!3251 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3246, file: !2, size: 64, align: 64, elements: !3252, templateParams: !3254, identifier: "e8e383bc653a5e995a46cdaeaaea8ee2::Continue")
!3252 = !{!3253}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3251, file: !2, baseType: !76, size: 64, align: 64)
!3254 = !{!3255, !3256}
!3255 = !DITemplateTypeParameter(name: "B", type: !329)
!3256 = !DITemplateTypeParameter(name: "C", type: !76)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3248, file: !2, baseType: !3258, size: 64, align: 64, extraData: i64 0)
!3258 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3246, file: !2, size: 64, align: 64, elements: !3259, templateParams: !3254, identifier: "e8e383bc653a5e995a46cdaeaaea8ee2::Break")
!3259 = !{!3260}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3258, file: !2, baseType: !329, align: 8)
!3261 = !DIDerivedType(tag: DW_TAG_member, scope: !18, file: !2, baseType: !83, size: 64, align: 64, flags: DIFlagArtificial)
!3262 = !{!3263, !3264}
!3263 = !DILocalVariable(name: "self", arg: 1, scope: !3242, file: !3002, line: 2023, type: !2149)
!3264 = !DILocalVariable(name: "v", scope: !3265, file: !3002, line: 2025, type: !76, align: 8)
!3265 = distinct !DILexicalBlock(scope: !3242, file: !3002, line: 2025, column: 13)
!3266 = !DILocation(line: 2023, column: 15, scope: !3242)
!3267 = !DILocation(line: 2024, column: 15, scope: !3242)
!3268 = !DILocation(line: 2024, column: 9, scope: !3242)
!3269 = !DILocation(line: 2026, column: 21, scope: !3242)
!3270 = !DILocation(line: 2026, column: 44, scope: !3242)
!3271 = !DILocation(line: 2025, column: 18, scope: !3242)
!3272 = !DILocation(line: 2025, column: 18, scope: !3265)
!3273 = !DILocation(line: 2025, column: 24, scope: !3265)
!3274 = !DILocation(line: 2028, column: 5, scope: !3242)
!3275 = !DILocation(line: 2028, column: 6, scope: !3242)
!3276 = distinct !DISubprogram(name: "branch<u64>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h833feb00c42a4ac7E", scope: !3243, file: !3002, line: 2023, type: !3277, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !745, retainedNodes: !3293)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!3279, !739}
!3279 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, u64>", scope: !18, file: !2, size: 128, align: 64, elements: !3280, identifier: "6f71c437e09010012371bfa5e9994540")
!3280 = !{!3281}
!3281 = !DICompositeType(tag: DW_TAG_variant_part, scope: !18, file: !2, size: 128, align: 64, elements: !3282, templateParams: !3287, identifier: "6f71c437e09010012371bfa5e9994540_variant_part", discriminator: !3261)
!3282 = !{!3283, !3289}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3281, file: !2, baseType: !3284, size: 128, align: 64, extraData: i64 0)
!3284 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3279, file: !2, size: 128, align: 64, elements: !3285, templateParams: !3287, identifier: "6f71c437e09010012371bfa5e9994540::Continue")
!3285 = !{!3286}
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3284, file: !2, baseType: !83, size: 64, align: 64, offset: 64)
!3287 = !{!3255, !3288}
!3288 = !DITemplateTypeParameter(name: "C", type: !83)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3281, file: !2, baseType: !3290, size: 128, align: 64, extraData: i64 1)
!3290 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3279, file: !2, size: 128, align: 64, elements: !3291, templateParams: !3287, identifier: "6f71c437e09010012371bfa5e9994540::Break")
!3291 = !{!3292}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3290, file: !2, baseType: !329, align: 8, offset: 64)
!3293 = !{!3294, !3295}
!3294 = !DILocalVariable(name: "self", arg: 1, scope: !3276, file: !3002, line: 2023, type: !739)
!3295 = !DILocalVariable(name: "v", scope: !3296, file: !3002, line: 2025, type: !83, align: 8)
!3296 = distinct !DILexicalBlock(scope: !3276, file: !3002, line: 2025, column: 13)
!3297 = !DILocation(line: 2023, column: 15, scope: !3276)
!3298 = !DILocation(line: 2024, column: 15, scope: !3276)
!3299 = !DILocation(line: 2024, column: 9, scope: !3276)
!3300 = !DILocation(line: 2026, column: 21, scope: !3276)
!3301 = !DILocation(line: 2026, column: 44, scope: !3276)
!3302 = !DILocation(line: 2025, column: 18, scope: !3276)
!3303 = !DILocation(line: 2025, column: 18, scope: !3296)
!3304 = !DILocation(line: 2025, column: 24, scope: !3296)
!3305 = !DILocation(line: 2028, column: 5, scope: !3276)
!3306 = !DILocation(line: 2028, column: 6, scope: !3276)
!3307 = distinct !DISubprogram(name: "branch<char>", linkageName: "_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hedeb98747c67b596E", scope: !3243, file: !3002, line: 2023, type: !3308, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !3011, retainedNodes: !3325)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!3310, !3005}
!3310 = !DICompositeType(tag: DW_TAG_structure_type, name: "ControlFlow<core::option::Option<core::convert::Infallible>, char>", scope: !18, file: !2, size: 32, align: 32, elements: !3311, identifier: "9fb5634625e5b1bdb26eabb0f63fef2b")
!3311 = !{!3312}
!3312 = !DICompositeType(tag: DW_TAG_variant_part, scope: !18, file: !2, size: 32, align: 32, elements: !3313, templateParams: !3318, identifier: "9fb5634625e5b1bdb26eabb0f63fef2b_variant_part", discriminator: !3324)
!3313 = !{!3314, !3320}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "Continue", scope: !3312, file: !2, baseType: !3315, size: 32, align: 32)
!3315 = !DICompositeType(tag: DW_TAG_structure_type, name: "Continue", scope: !3310, file: !2, size: 32, align: 32, elements: !3316, templateParams: !3318, identifier: "9fb5634625e5b1bdb26eabb0f63fef2b::Continue")
!3316 = !{!3317}
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3315, file: !2, baseType: !306, size: 32, align: 32)
!3318 = !{!3255, !3319}
!3319 = !DITemplateTypeParameter(name: "C", type: !306)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "Break", scope: !3312, file: !2, baseType: !3321, size: 32, align: 32, extraData: i64 1114112)
!3321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Break", scope: !3310, file: !2, size: 32, align: 32, elements: !3322, templateParams: !3318, identifier: "9fb5634625e5b1bdb26eabb0f63fef2b::Break")
!3322 = !{!3323}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3321, file: !2, baseType: !329, align: 8)
!3324 = !DIDerivedType(tag: DW_TAG_member, scope: !18, file: !2, baseType: !312, size: 32, align: 32, flags: DIFlagArtificial)
!3325 = !{!3326, !3327}
!3326 = !DILocalVariable(name: "self", arg: 1, scope: !3307, file: !3002, line: 2023, type: !3005)
!3327 = !DILocalVariable(name: "v", scope: !3328, file: !3002, line: 2025, type: !306, align: 4)
!3328 = distinct !DILexicalBlock(scope: !3307, file: !3002, line: 2025, column: 13)
!3329 = !DILocation(line: 2023, column: 15, scope: !3307)
!3330 = !DILocation(line: 2024, column: 15, scope: !3307)
!3331 = !DILocation(line: 2024, column: 9, scope: !3307)
!3332 = !DILocation(line: 2026, column: 21, scope: !3307)
!3333 = !DILocation(line: 2026, column: 44, scope: !3307)
!3334 = !DILocation(line: 2025, column: 18, scope: !3307)
!3335 = !DILocation(line: 2025, column: 18, scope: !3328)
!3336 = !DILocation(line: 2025, column: 24, scope: !3328)
!3337 = !DILocation(line: 2028, column: 5, scope: !3307)
!3338 = !DILocation(line: 2028, column: 6, scope: !3307)
!3339 = distinct !DISubprogram(name: "get_unchecked<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$13get_unchecked17ha18dfe0473024406E", scope: !3340, file: !240, line: 167, type: !3341, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3343)
!3340 = !DINamespace(name: "{impl#2}", scope: !242)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!98, !109, !245}
!3343 = !{!3344, !3345}
!3344 = !DILocalVariable(name: "self", arg: 1, scope: !3339, file: !240, line: 167, type: !109)
!3345 = !DILocalVariable(name: "slice", arg: 2, scope: !3339, file: !240, line: 167, type: !245)
!3346 = !DILocation(line: 167, column: 29, scope: !3339)
!3347 = !DILocation(line: 167, column: 35, scope: !3339)
!3348 = !DILocation(line: 172, column: 18, scope: !3339)
!3349 = !DILocation(line: 511, column: 29, scope: !263, inlinedAt: !3350)
!3350 = distinct !DILocation(line: 172, column: 18, scope: !3339)
!3351 = !DILocation(line: 511, column: 35, scope: !263, inlinedAt: !3350)
!3352 = !DILocation(line: 230, column: 32, scope: !275, inlinedAt: !3353)
!3353 = distinct !DILocation(line: 516, column: 18, scope: !263, inlinedAt: !3350)
!3354 = !DILocation(line: 230, column: 38, scope: !275, inlinedAt: !3353)
!3355 = !DILocation(line: 235, column: 18, scope: !275, inlinedAt: !3353)
!3356 = !DILocation(line: 173, column: 6, scope: !3339)
!3357 = distinct !DISubprogram(name: "get<u8>", linkageName: "_ZN75_$LT$usize$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17h14f5d3ac0968a5c0E", scope: !3340, file: !240, line: 155, type: !3358, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3360)
!3358 = !DISubroutineType(types: !3359)
!3359 = !{!2149, !109, !373}
!3360 = !{!3361, !3362}
!3361 = !DILocalVariable(name: "self", arg: 1, scope: !3357, file: !240, line: 155, type: !109)
!3362 = !DILocalVariable(name: "slice", arg: 2, scope: !3357, file: !240, line: 155, type: !373)
!3363 = !DILocation(line: 155, column: 12, scope: !3357)
!3364 = !DILocation(line: 155, column: 18, scope: !3357)
!3365 = !DILocation(line: 157, column: 12, scope: !3357)
!3366 = !DILocation(line: 157, column: 87, scope: !3357)
!3367 = !DILocation(line: 157, column: 9, scope: !3357)
!3368 = !DILocation(line: 157, column: 49, scope: !3357)
!3369 = !DILocation(line: 157, column: 42, scope: !3357)
!3370 = !DILocation(line: 158, column: 6, scope: !3357)
!3371 = distinct !DISubprogram(name: "ne", linkageName: "_ZN77_$LT$core..num..dec2flt..common..BiasedFp$u20$as$u20$core..cmp..PartialEq$GT$2ne17hc9d6db301fc3a3bdE", scope: !3372, file: !1330, line: 186, type: !3373, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3376)
!3372 = !DINamespace(name: "{impl#17}", scope: !798)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!675, !3375, !3375}
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&BiasedFp", baseType: !797, size: 64, align: 64, dwarfAddressSpace: 0)
!3376 = !{!3377, !3378, !3379, !3382, !3384, !3386}
!3377 = !DILocalVariable(name: "self", arg: 1, scope: !3371, file: !1330, line: 186, type: !3375)
!3378 = !DILocalVariable(name: "other", arg: 2, scope: !3371, file: !1330, line: 186, type: !3375)
!3379 = !DILocalVariable(name: "__self_1_0", scope: !3380, file: !1330, line: 189, type: !3381, align: 8)
!3380 = distinct !DILexicalBlock(scope: !3371, file: !1330, line: 186, column: 30)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&u64", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!3382 = !DILocalVariable(name: "__self_1_1", scope: !3380, file: !1330, line: 191, type: !3383, align: 8)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&i32", baseType: !511, size: 64, align: 64, dwarfAddressSpace: 0)
!3384 = !DILocalVariable(name: "__self_0_0", scope: !3385, file: !1330, line: 189, type: !3381, align: 8)
!3385 = distinct !DILexicalBlock(scope: !3380, file: !1330, line: 186, column: 30)
!3386 = !DILocalVariable(name: "__self_0_1", scope: !3385, file: !1330, line: 191, type: !3383, align: 8)
!3387 = !DILocation(line: 186, column: 30, scope: !3371)
!3388 = !DILocation(line: 189, column: 5, scope: !3371)
!3389 = !DILocation(line: 189, column: 5, scope: !3380)
!3390 = !DILocation(line: 191, column: 5, scope: !3371)
!3391 = !DILocation(line: 191, column: 5, scope: !3380)
!3392 = !DILocation(line: 189, column: 5, scope: !3385)
!3393 = !DILocation(line: 191, column: 5, scope: !3385)
!3394 = !DILocation(line: 186, column: 39, scope: !3371)
!3395 = distinct !DISubprogram(name: "__iterator_get_unchecked", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h21872b9da702deb4E", scope: !3396, file: !2384, line: 299, type: !3397, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3400)
!3396 = !DINamespace(name: "{impl#9}", scope: !145)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!8, !3399, !109}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Bytes", baseType: !144, size: 64, align: 64, dwarfAddressSpace: 0)
!3400 = !{!3401, !3402}
!3401 = !DILocalVariable(name: "self", arg: 1, scope: !3395, file: !2384, line: 299, type: !3399)
!3402 = !DILocalVariable(name: "idx", arg: 2, scope: !3395, file: !2384, line: 299, type: !109)
!3403 = !DILocation(line: 299, column: 40, scope: !3395)
!3404 = !DILocation(line: 299, column: 51, scope: !3395)
!3405 = !DILocation(line: 302, column: 18, scope: !3395)
!3406 = !DILocation(line: 303, column: 6, scope: !3395)
!3407 = distinct !DISubprogram(name: "size_hint", linkageName: "_ZN81_$LT$core..str..iter..Bytes$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h69cd9049a6c0c30bE", scope: !3396, file: !2384, line: 238, type: !3408, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3410)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!185, !2814}
!3410 = !{!3411}
!3411 = !DILocalVariable(name: "self", arg: 1, scope: !3407, file: !2384, line: 238, type: !2814)
!3412 = !DILocation(line: 238, column: 18, scope: !3407)
!3413 = !DILocation(line: 239, column: 9, scope: !3407)
!3414 = !DILocation(line: 240, column: 6, scope: !3407)
!3415 = distinct !DISubprogram(name: "next", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb51acee8bd391655E", scope: !3019, file: !2384, line: 40, type: !3416, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3419)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!3005, !3418}
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut Chars", baseType: !317, size: 64, align: 64, dwarfAddressSpace: 0)
!3419 = !{!3420}
!3420 = !DILocalVariable(name: "self", arg: 1, scope: !3415, file: !2384, line: 40, type: !3418)
!3421 = !DILocation(line: 40, column: 13, scope: !3415)
!3422 = !DILocation(line: 41, column: 9, scope: !3415)
!3423 = !DILocation(line: 45, column: 6, scope: !3415)
!3424 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next28_$u7b$$u7b$closure$u7d$$u7d$17hdb8dac89f30f1d27E", scope: !3018, file: !2384, line: 41, type: !3425, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3427)
!3425 = !DISubroutineType(types: !3426)
!3426 = !{!306, !3017, !312}
!3427 = !{!3428, !3429}
!3428 = !DILocalVariable(name: "ch", arg: 2, scope: !3424, file: !2384, line: 41, type: !312)
!3429 = !DILocalVariable(arg: 1, scope: !3424, file: !2384, line: 41, type: !3017)
!3430 = !DILocation(line: 41, column: 45, scope: !3424)
!3431 = !DILocation(line: 41, column: 46, scope: !3424)
!3432 = !DILocation(line: 43, column: 22, scope: !3424)
!3433 = !DILocation(line: 44, column: 10, scope: !3424)
!3434 = distinct !DISubprogram(name: "from_residual<u32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h02c92a3856b0b191E", scope: !3435, file: !3002, line: 2034, type: !3436, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !2181, retainedNodes: !3438)
!3435 = !DINamespace(name: "{impl#41}", scope: !65)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!2175, !329}
!3438 = !{!3439}
!3439 = !DILocalVariable(name: "residual", arg: 1, scope: !3434, file: !3002, line: 2034, type: !329)
!3440 = !DILocation(line: 2034, column: 22, scope: !3434)
!3441 = !DILocation(line: 2036, column: 21, scope: !3434)
!3442 = !DILocation(line: 2038, column: 6, scope: !3434)
!3443 = distinct !DISubprogram(name: "from_residual<f32>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h7d225edce8e764a3E", scope: !3435, file: !3002, line: 2034, type: !3444, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !806, retainedNodes: !3446)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!1171, !329}
!3446 = !{!3447}
!3447 = !DILocalVariable(name: "residual", arg: 1, scope: !3443, file: !3002, line: 2034, type: !329)
!3448 = !DILocation(line: 2034, column: 22, scope: !3443)
!3449 = !DILocation(line: 2036, column: 21, scope: !3443)
!3450 = !DILocation(line: 2038, column: 6, scope: !3443)
!3451 = distinct !DISubprogram(name: "from_residual<f64>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17hcd31cae4291415daE", scope: !3435, file: !3002, line: 2034, type: !3452, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !823, retainedNodes: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!1133, !329}
!3454 = !{!3455}
!3455 = !DILocalVariable(name: "residual", arg: 1, scope: !3451, file: !3002, line: 2034, type: !329)
!3456 = !DILocation(line: 2034, column: 22, scope: !3451)
!3457 = !DILocation(line: 2036, column: 21, scope: !3451)
!3458 = !DILocation(line: 2038, column: 6, scope: !3451)
!3459 = distinct !DISubprogram(name: "from_residual<(usize, char)>", linkageName: "_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17he188c053a388e2b1E", scope: !3435, file: !3002, line: 2034, type: !3460, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !300, retainedNodes: !3462)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{!294, !329}
!3462 = !{!3463}
!3463 = !DILocalVariable(name: "residual", arg: 1, scope: !3459, file: !3002, line: 2034, type: !329)
!3464 = !DILocation(line: 2034, column: 22, scope: !3459)
!3465 = !DILocation(line: 2036, column: 21, scope: !3459)
!3466 = !DILocation(line: 2038, column: 6, scope: !3459)
!3467 = distinct !DISubprogram(name: "eq<(), ()>", linkageName: "_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17h22ba08a09e27f5f4E", scope: !3468, file: !208, line: 50, type: !3469, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !232, retainedNodes: !3472)
!3468 = !DINamespace(name: "{impl#10}", scope: !18)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!675, !3471, !3471}
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&ControlFlow<(), ()>", baseType: !17, size: 64, align: 64, dwarfAddressSpace: 0)
!3472 = !{!3473, !3474, !3475, !3477, !3479, !3481, !3482, !3484}
!3473 = !DILocalVariable(name: "self", arg: 1, scope: !3467, file: !208, line: 50, type: !3471)
!3474 = !DILocalVariable(name: "other", arg: 2, scope: !3467, file: !208, line: 50, type: !3471)
!3475 = !DILocalVariable(name: "__self_vi", scope: !3476, file: !208, line: 50, type: !278, align: 8)
!3476 = distinct !DILexicalBlock(scope: !3467, file: !208, line: 50, column: 30)
!3477 = !DILocalVariable(name: "__arg_1_vi", scope: !3478, file: !208, line: 50, type: !278, align: 8)
!3478 = distinct !DILexicalBlock(scope: !3476, file: !208, line: 50, column: 30)
!3479 = !DILocalVariable(name: "__self_0", scope: !3480, file: !208, line: 55, type: !676, align: 8)
!3480 = distinct !DILexicalBlock(scope: !3478, file: !208, line: 50, column: 30)
!3481 = !DILocalVariable(name: "__arg_1_0", scope: !3480, file: !208, line: 55, type: !676, align: 8)
!3482 = !DILocalVariable(name: "__self_0", scope: !3483, file: !208, line: 59, type: !676, align: 8)
!3483 = distinct !DILexicalBlock(scope: !3478, file: !208, line: 50, column: 30)
!3484 = !DILocalVariable(name: "__arg_1_0", scope: !3483, file: !208, line: 59, type: !676, align: 8)
!3485 = !DILocation(line: 50, column: 30, scope: !3467)
!3486 = !DILocation(line: 50, column: 30, scope: !3476)
!3487 = !DILocation(line: 50, column: 30, scope: !3478)
!3488 = !DILocation(line: 59, column: 11, scope: !3478)
!3489 = !DILocation(line: 59, column: 11, scope: !3483)
!3490 = !DILocation(line: 50, column: 38, scope: !3478)
!3491 = !DILocation(line: 55, column: 14, scope: !3478)
!3492 = !DILocation(line: 55, column: 14, scope: !3480)
!3493 = !DILocation(line: 50, column: 39, scope: !3467)
!3494 = distinct !DISubprogram(name: "__iterator_get_unchecked<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h8656049b9fe6bb4cE", scope: !3495, file: !2964, line: 329, type: !2791, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3496)
!3495 = !DINamespace(name: "{impl#172}", scope: !89)
!3496 = !{!3497, !3498}
!3497 = !DILocalVariable(name: "self", arg: 1, scope: !3494, file: !2964, line: 329, type: !2187)
!3498 = !DILocalVariable(name: "idx", arg: 2, scope: !3494, file: !2964, line: 329, type: !109)
!3499 = !DILocation(line: 329, column: 48, scope: !3494)
!3500 = !DILocation(line: 329, column: 59, scope: !3494)
!3501 = !DILocation(line: 340, column: 42, scope: !3494)
!3502 = !DILocalVariable(name: "self", arg: 1, scope: !3503, file: !2041, line: 618, type: !551)
!3503 = distinct !DISubprogram(name: "add<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$3add17h92a6c6b561f66cd9E", scope: !2042, file: !2041, line: 618, type: !3504, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3506)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!551, !551, !109}
!3506 = !{!3502, !3507}
!3507 = !DILocalVariable(name: "count", arg: 2, scope: !3503, file: !2041, line: 618, type: !109)
!3508 = !DILocation(line: 618, column: 29, scope: !3503, inlinedAt: !3509)
!3509 = distinct !DILocation(line: 340, column: 42, scope: !3494)
!3510 = !DILocation(line: 618, column: 35, scope: !3503, inlinedAt: !3509)
!3511 = !DILocalVariable(name: "self", arg: 1, scope: !3512, file: !2041, line: 235, type: !551)
!3512 = distinct !DISubprogram(name: "offset<u8>", linkageName: "_ZN4core3ptr7mut_ptr31_$LT$impl$u20$$BP$mut$u20$T$GT$6offset17hdd58b130fcb57152E", scope: !2042, file: !2041, line: 235, type: !3513, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3515)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!551, !551, !278}
!3515 = !{!3511, !3516}
!3516 = !DILocalVariable(name: "count", arg: 2, scope: !3512, file: !2041, line: 235, type: !278)
!3517 = !DILocation(line: 235, column: 32, scope: !3512, inlinedAt: !3518)
!3518 = distinct !DILocation(line: 623, column: 18, scope: !3503, inlinedAt: !3509)
!3519 = !DILocation(line: 235, column: 38, scope: !3512, inlinedAt: !3518)
!3520 = !DILocation(line: 242, column: 18, scope: !3512, inlinedAt: !3518)
!3521 = !DILocation(line: 341, column: 14, scope: !3494)
!3522 = distinct !DISubprogram(name: "next<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h21e27410d267cec4E", scope: !3495, file: !2964, line: 134, type: !3523, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3525)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!2149, !2187}
!3525 = !{!3526}
!3526 = !DILocalVariable(name: "self", arg: 1, scope: !3522, file: !2964, line: 134, type: !2187)
!3527 = !DILocation(line: 134, column: 21, scope: !3522)
!3528 = !DILocation(line: 142, column: 29, scope: !3522)
!3529 = !DILocation(line: 142, column: 28, scope: !3522)
!3530 = !DILocation(line: 142, column: 21, scope: !3522)
!3531 = !DILocation(line: 143, column: 24, scope: !3522)
!3532 = !DILocation(line: 143, column: 21, scope: !3522)
!3533 = !DILocation(line: 144, column: 33, scope: !3522)
!3534 = !DILocation(line: 144, column: 32, scope: !3522)
!3535 = !DILocation(line: 144, column: 25, scope: !3522)
!3536 = !DILocation(line: 146, column: 24, scope: !3522)
!3537 = !DILocalVariable(name: "self", arg: 1, scope: !3538, file: !2964, line: 85, type: !2187)
!3538 = distinct !DISubprogram(name: "post_inc_start<u8>", linkageName: "_ZN4core5slice4iter13Iter$LT$T$GT$14post_inc_start17h9413daec92202347E", scope: !88, file: !2964, line: 85, type: !3539, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3541)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{!98, !2187, !278}
!3541 = !{!3537, !3542, !3543}
!3542 = !DILocalVariable(name: "offset", arg: 2, scope: !3538, file: !2964, line: 85, type: !278)
!3543 = !DILocalVariable(name: "old", scope: !3544, file: !2964, line: 90, type: !551, align: 8)
!3544 = distinct !DILexicalBlock(scope: !3538, file: !2964, line: 90, column: 21)
!3545 = !DILocation(line: 85, column: 38, scope: !3538, inlinedAt: !3546)
!3546 = distinct !DILocation(line: 149, column: 30, scope: !3522)
!3547 = !DILocation(line: 85, column: 49, scope: !3538, inlinedAt: !3546)
!3548 = !DILocation(line: 90, column: 31, scope: !3538, inlinedAt: !3546)
!3549 = !DILocation(line: 90, column: 25, scope: !3544, inlinedAt: !3546)
!3550 = !DILocation(line: 93, column: 64, scope: !3544, inlinedAt: !3546)
!3551 = !DILocation(line: 235, column: 32, scope: !3512, inlinedAt: !3552)
!3552 = distinct !DILocation(line: 93, column: 64, scope: !3544, inlinedAt: !3546)
!3553 = !DILocation(line: 235, column: 38, scope: !3512, inlinedAt: !3552)
!3554 = !DILocation(line: 242, column: 18, scope: !3512, inlinedAt: !3552)
!3555 = !DILocation(line: 93, column: 41, scope: !3544, inlinedAt: !3546)
!3556 = !DILocation(line: 93, column: 21, scope: !3544, inlinedAt: !3546)
!3557 = !DILocation(line: 94, column: 21, scope: !3544, inlinedAt: !3546)
!3558 = !DILocation(line: 96, column: 14, scope: !3538, inlinedAt: !3546)
!3559 = !DILocation(line: 149, column: 30, scope: !3522)
!3560 = !DILocation(line: 147, column: 25, scope: !3522)
!3561 = !DILocation(line: 146, column: 21, scope: !3522)
!3562 = !DILocation(line: 152, column: 14, scope: !3522)
!3563 = !DILocation(line: 149, column: 25, scope: !3522)
!3564 = distinct !DISubprogram(name: "size_hint<u8>", linkageName: "_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17ha1de5e1f1190acc2E", scope: !3495, file: !2964, line: 155, type: !3565, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !99, retainedNodes: !3567)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!185, !2804}
!3567 = !{!3568, !3569, !3571, !3573, !3575}
!3568 = !DILocalVariable(name: "self", arg: 1, scope: !3564, file: !2964, line: 155, type: !2804)
!3569 = !DILocalVariable(name: "exact", scope: !3570, file: !2964, line: 156, type: !109, align: 8)
!3570 = distinct !DILexicalBlock(scope: !3564, file: !2964, line: 156, column: 17)
!3571 = !DILocalVariable(name: "start", scope: !3572, file: !2964, line: 156, type: !93, align: 8)
!3572 = distinct !DILexicalBlock(scope: !3564, file: !2964, line: 18, column: 9)
!3573 = !DILocalVariable(name: "size", scope: !3574, file: !2964, line: 156, type: !109, align: 8)
!3574 = distinct !DILexicalBlock(scope: !3572, file: !2964, line: 19, column: 9)
!3575 = !DILocalVariable(name: "diff", scope: !3576, file: !2964, line: 156, type: !109, align: 8)
!3576 = distinct !DILexicalBlock(scope: !3574, file: !2964, line: 29, column: 13)
!3577 = !DILocation(line: 155, column: 26, scope: !3564)
!3578 = !DILocation(line: 156, column: 21, scope: !3570)
!3579 = !DILocation(line: 156, column: 29, scope: !3564)
!3580 = !DILocation(line: 156, column: 29, scope: !3572)
!3581 = !DILocation(line: 40, column: 21, scope: !2978, inlinedAt: !3582)
!3582 = distinct !DILocation(line: 156, column: 29, scope: !3572)
!3583 = !DILocation(line: 156, column: 29, scope: !3574)
!3584 = !DILocation(line: 156, column: 29, scope: !3576)
!3585 = !DILocation(line: 157, column: 18, scope: !3570)
!3586 = !DILocation(line: 157, column: 30, scope: !3570)
!3587 = !DILocation(line: 157, column: 25, scope: !3570)
!3588 = !DILocation(line: 157, column: 17, scope: !3570)
!3589 = !DILocation(line: 158, column: 14, scope: !3564)
!3590 = !DILocalVariable(name: "self", arg: 1, scope: !3591, file: !735, line: 1133, type: !109)
!3591 = distinct !DISubprogram(name: "wrapping_sub", linkageName: "_ZN4core3num23_$LT$impl$u20$usize$GT$12wrapping_sub17hcd6164a347ff4cacE", scope: !3592, file: !735, line: 1133, type: !630, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3593)
!3592 = !DINamespace(name: "{impl#11}", scope: !47)
!3593 = !{!3590, !3594}
!3594 = !DILocalVariable(name: "rhs", arg: 2, scope: !3591, file: !735, line: 1133, type: !109)
!3595 = !DILocation(line: 1133, column: 35, scope: !3591, inlinedAt: !3596)
!3596 = distinct !DILocation(line: 156, column: 29, scope: !3574)
!3597 = !DILocation(line: 1133, column: 41, scope: !3591, inlinedAt: !3596)
!3598 = !DILocation(line: 1134, column: 13, scope: !3591, inlinedAt: !3596)
!3599 = distinct !DISubprogram(name: "from_output<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h4eb715901cb89672E", scope: !3600, file: !208, line: 71, type: !3601, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !232, retainedNodes: !3603)
!3600 = !DINamespace(name: "{impl#0}", scope: !18)
!3601 = !DISubroutineType(types: !3602)
!3602 = !{!17, !220}
!3603 = !{!3604}
!3604 = !DILocalVariable(name: "output", arg: 1, scope: !3599, file: !208, line: 71, type: !220)
!3605 = !DILocation(line: 71, column: 20, scope: !3599)
!3606 = !DILocation(line: 72, column: 9, scope: !3599)
!3607 = !DILocation(line: 73, column: 6, scope: !3599)
!3608 = distinct !DISubprogram(name: "branch<(), ()>", linkageName: "_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h8ed8bd68cd15059fE", scope: !3600, file: !208, line: 76, type: !3609, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !232, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!17, !17}
!3611 = !{!3612, !3613, !3615}
!3612 = !DILocalVariable(name: "self", arg: 1, scope: !3608, file: !208, line: 76, type: !17)
!3613 = !DILocalVariable(name: "c", scope: !3614, file: !208, line: 78, type: !220, align: 1)
!3614 = distinct !DILexicalBlock(scope: !3608, file: !208, line: 78, column: 13)
!3615 = !DILocalVariable(name: "b", scope: !3616, file: !208, line: 79, type: !220, align: 1)
!3616 = distinct !DILexicalBlock(scope: !3608, file: !208, line: 79, column: 13)
!3617 = !DILocation(line: 76, column: 15, scope: !3608)
!3618 = !DILocation(line: 78, column: 35, scope: !3614)
!3619 = !DILocation(line: 79, column: 32, scope: !3616)
!3620 = !DILocation(line: 77, column: 15, scope: !3608)
!3621 = !DILocation(line: 77, column: 9, scope: !3608)
!3622 = !DILocation(line: 78, column: 41, scope: !3614)
!3623 = !DILocation(line: 78, column: 64, scope: !3608)
!3624 = !DILocation(line: 79, column: 57, scope: !3616)
!3625 = !DILocation(line: 79, column: 38, scope: !3616)
!3626 = !DILocation(line: 79, column: 78, scope: !3608)
!3627 = !DILocation(line: 81, column: 6, scope: !3608)
!3628 = distinct !DISubprogram(name: "integer_decode_f32", linkageName: "_ZN10num_traits5float18integer_decode_f3217h7311a72543b9d616E", scope: !3630, file: !3629, line: 2027, type: !3631, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3639)
!3629 = !DIFile(filename: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/float.rs", directory: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15", checksumkind: CSK_MD5, checksum: "7347186616beaff58e92671228810086")
!3630 = !DINamespace(name: "float", scope: !7)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!3633, !510}
!3633 = !DICompositeType(tag: DW_TAG_structure_type, name: "(u64, i16, i8)", file: !2, size: 128, align: 64, elements: !3634, templateParams: !4, identifier: "91ec6a60f7a92c698492e64c2c3d142b")
!3634 = !{!3635, !3636, !3638}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !3633, file: !2, baseType: !83, size: 64, align: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !3633, file: !2, baseType: !3637, size: 16, align: 16, offset: 64)
!3637 = !DIBasicType(name: "i16", size: 16, encoding: DW_ATE_signed)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "__2", scope: !3633, file: !2, baseType: !40, size: 8, align: 8, offset: 80)
!3639 = !{!3640, !3641, !3643, !3645, !3647}
!3640 = !DILocalVariable(name: "f", arg: 1, scope: !3628, file: !3629, line: 2027, type: !510)
!3641 = !DILocalVariable(name: "bits", scope: !3642, file: !3629, line: 2030, type: !312, align: 4)
!3642 = distinct !DILexicalBlock(scope: !3628, file: !3629, line: 2030, column: 5)
!3643 = !DILocalVariable(name: "sign", scope: !3644, file: !3629, line: 2031, type: !40, align: 1)
!3644 = distinct !DILexicalBlock(scope: !3642, file: !3629, line: 2031, column: 5)
!3645 = !DILocalVariable(name: "exponent", scope: !3646, file: !3629, line: 2032, type: !3637, align: 2)
!3646 = distinct !DILexicalBlock(scope: !3644, file: !3629, line: 2032, column: 5)
!3647 = !DILocalVariable(name: "mantissa", scope: !3648, file: !3629, line: 2033, type: !312, align: 4)
!3648 = distinct !DILexicalBlock(scope: !3646, file: !3629, line: 2033, column: 5)
!3649 = !DILocation(line: 2027, column: 23, scope: !3628)
!3650 = !DILocation(line: 2031, column: 9, scope: !3644)
!3651 = !DILocation(line: 2032, column: 9, scope: !3646)
!3652 = !DILocation(line: 2033, column: 9, scope: !3648)
!3653 = !DILocation(line: 2030, column: 30, scope: !3628)
!3654 = !DILocation(line: 2030, column: 9, scope: !3642)
!3655 = !DILocation(line: 2031, column: 23, scope: !3642)
!3656 = !DILocation(line: 2031, column: 41, scope: !3642)
!3657 = !DILocation(line: 2031, column: 20, scope: !3642)
!3658 = !DILocation(line: 2031, column: 52, scope: !3642)
!3659 = !DILocation(line: 2032, column: 30, scope: !3644)
!3660 = !DILocation(line: 2032, column: 29, scope: !3644)
!3661 = !DILocation(line: 2033, column: 23, scope: !3646)
!3662 = !DILocation(line: 2034, column: 9, scope: !3646)
!3663 = !DILocation(line: 2036, column: 9, scope: !3646)
!3664 = !DILocation(line: 2033, column: 20, scope: !3646)
!3665 = !DILocation(line: 2039, column: 5, scope: !3648)
!3666 = !DILocation(line: 2040, column: 6, scope: !3648)
!3667 = !DILocation(line: 2040, column: 23, scope: !3648)
!3668 = !DILocation(line: 2040, column: 33, scope: !3648)
!3669 = !DILocation(line: 2040, column: 5, scope: !3648)
!3670 = !DILocation(line: 2041, column: 2, scope: !3628)
!3671 = distinct !DISubprogram(name: "integer_decode_f64", linkageName: "_ZN10num_traits5float18integer_decode_f6417he274636522a29100E", scope: !3630, file: !3629, line: 2043, type: !3672, scopeLine: 2043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3674)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!3633, !525}
!3674 = !{!3675, !3676, !3678, !3680, !3682}
!3675 = !DILocalVariable(name: "f", arg: 1, scope: !3671, file: !3629, line: 2043, type: !525)
!3676 = !DILocalVariable(name: "bits", scope: !3677, file: !3629, line: 2046, type: !83, align: 8)
!3677 = distinct !DILexicalBlock(scope: !3671, file: !3629, line: 2046, column: 5)
!3678 = !DILocalVariable(name: "sign", scope: !3679, file: !3629, line: 2047, type: !40, align: 1)
!3679 = distinct !DILexicalBlock(scope: !3677, file: !3629, line: 2047, column: 5)
!3680 = !DILocalVariable(name: "exponent", scope: !3681, file: !3629, line: 2048, type: !3637, align: 2)
!3681 = distinct !DILexicalBlock(scope: !3679, file: !3629, line: 2048, column: 5)
!3682 = !DILocalVariable(name: "mantissa", scope: !3683, file: !3629, line: 2049, type: !83, align: 8)
!3683 = distinct !DILexicalBlock(scope: !3681, file: !3629, line: 2049, column: 5)
!3684 = !DILocation(line: 2043, column: 23, scope: !3671)
!3685 = !DILocation(line: 2047, column: 9, scope: !3679)
!3686 = !DILocation(line: 2048, column: 9, scope: !3681)
!3687 = !DILocation(line: 2049, column: 9, scope: !3683)
!3688 = !DILocation(line: 2046, column: 30, scope: !3671)
!3689 = !DILocation(line: 2046, column: 9, scope: !3677)
!3690 = !DILocation(line: 2047, column: 23, scope: !3677)
!3691 = !DILocation(line: 2047, column: 41, scope: !3677)
!3692 = !DILocation(line: 2047, column: 20, scope: !3677)
!3693 = !DILocation(line: 2047, column: 52, scope: !3677)
!3694 = !DILocation(line: 2048, column: 30, scope: !3679)
!3695 = !DILocation(line: 2048, column: 29, scope: !3679)
!3696 = !DILocation(line: 2049, column: 23, scope: !3681)
!3697 = !DILocation(line: 2050, column: 9, scope: !3681)
!3698 = !DILocation(line: 2052, column: 9, scope: !3681)
!3699 = !DILocation(line: 2049, column: 20, scope: !3681)
!3700 = !DILocation(line: 2055, column: 5, scope: !3683)
!3701 = !DILocation(line: 2056, column: 6, scope: !3683)
!3702 = !DILocation(line: 2056, column: 16, scope: !3683)
!3703 = !DILocation(line: 2056, column: 26, scope: !3683)
!3704 = !DILocation(line: 2056, column: 5, scope: !3683)
!3705 = !DILocation(line: 2057, column: 2, scope: !3671)
!3706 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN66_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Display$GT$3fmt17h51372839e59ecd79E", scope: !3707, file: !908, line: 202, type: !3708, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3711)
!3707 = !DINamespace(name: "{impl#7}", scope: !7)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!24, !3710, !539}
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&ParseFloatError", baseType: !3086, size: 64, align: 64, dwarfAddressSpace: 0)
!3711 = !{!3712, !3713, !3714}
!3712 = !DILocalVariable(name: "self", arg: 1, scope: !3706, file: !908, line: 202, type: !3710)
!3713 = !DILocalVariable(name: "f", arg: 2, scope: !3706, file: !908, line: 202, type: !539)
!3714 = !DILocalVariable(name: "description", scope: !3715, file: !908, line: 203, type: !383, align: 8)
!3715 = distinct !DILexicalBlock(scope: !3706, file: !908, line: 203, column: 9)
!3716 = !DILocation(line: 202, column: 12, scope: !3706)
!3717 = !DILocation(line: 202, column: 19, scope: !3706)
!3718 = !DILocation(line: 203, column: 13, scope: !3715)
!3719 = !DILocation(line: 203, column: 33, scope: !3706)
!3720 = !DILocation(line: 203, column: 27, scope: !3706)
!3721 = !DILocation(line: 204, column: 38, scope: !3706)
!3722 = !DILocation(line: 205, column: 40, scope: !3706)
!3723 = !DILocation(line: 205, column: 62, scope: !3706)
!3724 = !DILocation(line: 208, column: 9, scope: !3715)
!3725 = !DILocation(line: 209, column: 6, scope: !3706)
!3726 = distinct !DISubprogram(name: "str_to_ascii_lower_eq_str", linkageName: "_ZN10num_traits25str_to_ascii_lower_eq_str17h9d5108a825fa797dE", scope: !7, file: !908, line: 212, type: !2483, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3727)
!3727 = !{!3728, !3729}
!3728 = !DILocalVariable(name: "a", arg: 1, scope: !3726, file: !908, line: 212, type: !383)
!3729 = !DILocalVariable(name: "b", arg: 2, scope: !3726, file: !908, line: 212, type: !383)
!3730 = !DILocation(line: 212, column: 30, scope: !3726)
!3731 = !DILocation(line: 212, column: 39, scope: !3726)
!3732 = !DILocation(line: 213, column: 5, scope: !3726)
!3733 = !DILocation(line: 213, column: 16, scope: !3726)
!3734 = !DILocation(line: 214, column: 12, scope: !3726)
!3735 = !DILocation(line: 214, column: 26, scope: !3726)
!3736 = !DILocation(line: 218, column: 2, scope: !3726)
!3737 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN10num_traits25str_to_ascii_lower_eq_str28_$u7b$$u7b$closure$u7d$$u7d$17haa1e1f0636e531b8E", scope: !2613, file: !908, line: 214, type: !3738, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3741)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!675, !3740, !131}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut {closure#0}", baseType: !2612, size: 64, align: 64, dwarfAddressSpace: 0)
!3741 = !{!3742, !3744, !3745, !3747, !3748}
!3742 = !DILocalVariable(name: "a", scope: !3743, file: !908, line: 214, type: !8, align: 1)
!3743 = distinct !DILexicalBlock(scope: !3737, file: !908, line: 214, column: 50)
!3744 = !DILocalVariable(name: "b", scope: !3743, file: !908, line: 214, type: !8, align: 1)
!3745 = !DILocalVariable(name: "a_to_ascii_lower", scope: !3746, file: !908, line: 215, type: !8, align: 1)
!3746 = distinct !DILexicalBlock(scope: !3743, file: !908, line: 215, column: 13)
!3747 = !DILocalVariable(arg: 1, scope: !3737, file: !908, line: 214, type: !3740)
!3748 = !DILocalVariable(arg: 2, scope: !3737, file: !908, line: 214, type: !131)
!3749 = !DILocation(line: 214, column: 41, scope: !3737)
!3750 = !DILocation(line: 214, column: 42, scope: !3737)
!3751 = !DILocation(line: 214, column: 43, scope: !3737)
!3752 = !DILocation(line: 214, column: 43, scope: !3743)
!3753 = !DILocation(line: 214, column: 46, scope: !3737)
!3754 = !DILocation(line: 214, column: 46, scope: !3743)
!3755 = !DILocation(line: 215, column: 43, scope: !3743)
!3756 = !DILocation(line: 215, column: 42, scope: !3743)
!3757 = !DILocation(line: 215, column: 56, scope: !3743)
!3758 = !DILocation(line: 215, column: 41, scope: !3743)
!3759 = !DILocation(line: 215, column: 40, scope: !3743)
!3760 = !DILocation(line: 215, column: 36, scope: !3743)
!3761 = !DILocation(line: 215, column: 17, scope: !3746)
!3762 = !DILocation(line: 216, column: 13, scope: !3746)
!3763 = !DILocation(line: 217, column: 10, scope: !3737)
!3764 = distinct !DISubprogram(name: "powi", linkageName: "_ZN48_$LT$f32$u20$as$u20$num_traits..float..Float$GT$4powi17ha04dd418e89c7c5fE", scope: !3766, file: !3765, line: 9, type: !508, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3767)
!3765 = !DIFile(filename: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15/src/macros.rs", directory: "/home/chinedum/.cargo/registry/src/github.com-1ecc6299db9ec823/num-traits-0.2.15", checksumkind: CSK_MD5, checksum: "0e1f44c14a8b93134d236bd176cf6b0b")
!3766 = !DINamespace(name: "{impl#2}", scope: !3630)
!3767 = !{!3768, !3769}
!3768 = !DILocalVariable(name: "self", arg: 1, scope: !3764, file: !3765, line: 9, type: !510)
!3769 = !DILocalVariable(name: "n", arg: 2, scope: !3764, file: !3765, line: 9, type: !511)
!3770 = !DILocation(line: 9, column: 24, scope: !3764)
!3771 = !DILocation(line: 9, column: 34, scope: !3764)
!3772 = !DILocation(line: 10, column: 17, scope: !3764)
!3773 = !DILocation(line: 11, column: 14, scope: !3764)
!3774 = distinct !DISubprogram(name: "powi", linkageName: "_ZN48_$LT$f64$u20$as$u20$num_traits..float..Float$GT$4powi17h0817970147c1b9b7E", scope: !3775, file: !3765, line: 9, type: !523, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3776)
!3775 = !DINamespace(name: "{impl#3}", scope: !3630)
!3776 = !{!3777, !3778}
!3777 = !DILocalVariable(name: "self", arg: 1, scope: !3774, file: !3765, line: 9, type: !525)
!3778 = !DILocalVariable(name: "n", arg: 2, scope: !3774, file: !3765, line: 9, type: !511)
!3779 = !DILocation(line: 9, column: 24, scope: !3774)
!3780 = !DILocation(line: 9, column: 34, scope: !3774)
!3781 = !DILocation(line: 10, column: 17, scope: !3774)
!3782 = !DILocation(line: 11, column: 14, scope: !3774)
!3783 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN63_$LT$num_traits..FloatErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17hb7677d240ac5cfebE", scope: !3784, file: !908, line: 189, type: !3785, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3787)
!3784 = !DINamespace(name: "{impl#20}", scope: !7)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!24, !5, !539}
!3787 = !{!3788, !3789, !3790, !3800}
!3788 = !DILocalVariable(name: "self", arg: 1, scope: !3783, file: !908, line: 189, type: !5)
!3789 = !DILocalVariable(name: "f", arg: 2, scope: !3783, file: !908, line: 189, type: !539)
!3790 = !DILocalVariable(name: "debug_trait_builder", scope: !3791, file: !908, line: 189, type: !3792, align: 8)
!3791 = distinct !DILexicalBlock(scope: !3783, file: !908, line: 189, column: 10)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugTuple", baseType: !3793, size: 64, align: 64, dwarfAddressSpace: 0)
!3793 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugTuple", scope: !3794, file: !2, size: 192, align: 64, elements: !3795, templateParams: !4, identifier: "b87e16a2b5c8e5fbfa596aeab6e7643")
!3794 = !DINamespace(name: "builders", scope: !32)
!3795 = !{!3796, !3797, !3798, !3799}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3793, file: !2, baseType: !539, size: 64, align: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3793, file: !2, baseType: !24, size: 8, align: 8, offset: 128)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !3793, file: !2, baseType: !109, size: 64, align: 64, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "empty_name", scope: !3793, file: !2, baseType: !675, size: 8, align: 8, offset: 136)
!3800 = !DILocalVariable(name: "debug_trait_builder", scope: !3801, file: !908, line: 189, type: !3792, align: 8)
!3801 = distinct !DILexicalBlock(scope: !3783, file: !908, line: 189, column: 10)
!3802 = !DILocation(line: 189, column: 10, scope: !3783)
!3803 = !DILocation(line: 189, column: 10, scope: !3801)
!3804 = !DILocation(line: 189, column: 15, scope: !3783)
!3805 = !DILocation(line: 189, column: 10, scope: !3791)
!3806 = distinct !DISubprogram(name: "fmt", linkageName: "_ZN64_$LT$num_traits..ParseFloatError$u20$as$u20$core..fmt..Debug$GT$3fmt17hc6bb2c7eb69980bdE", scope: !3807, file: !908, line: 196, type: !3708, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3808)
!3807 = !DINamespace(name: "{impl#21}", scope: !7)
!3808 = !{!3809, !3810, !3811, !3813}
!3809 = !DILocalVariable(name: "self", arg: 1, scope: !3806, file: !908, line: 196, type: !3710)
!3810 = !DILocalVariable(name: "f", arg: 2, scope: !3806, file: !908, line: 196, type: !539)
!3811 = !DILocalVariable(name: "__self_0_0", scope: !3812, file: !908, line: 198, type: !5, align: 8)
!3812 = distinct !DILexicalBlock(scope: !3806, file: !908, line: 196, column: 10)
!3813 = !DILocalVariable(name: "debug_trait_builder", scope: !3814, file: !908, line: 1, type: !3815, align: 8)
!3814 = distinct !DILexicalBlock(scope: !3812, file: !908, line: 196, column: 10)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "&mut DebugStruct", baseType: !3816, size: 64, align: 64, dwarfAddressSpace: 0)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "DebugStruct", scope: !3794, file: !2, size: 128, align: 64, elements: !3817, templateParams: !4, identifier: "b8ccb8ae22ce0b331b3e3a943d09da82")
!3817 = !{!3818, !3819, !3820}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3816, file: !2, baseType: !539, size: 64, align: 64)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3816, file: !2, baseType: !24, size: 8, align: 8, offset: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "has_fields", scope: !3816, file: !2, baseType: !675, size: 8, align: 8, offset: 72)
!3821 = !DILocation(line: 196, column: 10, scope: !3806)
!3822 = !DILocation(line: 198, column: 5, scope: !3806)
!3823 = !DILocation(line: 198, column: 5, scope: !3812)
!3824 = !DILocation(line: 196, column: 10, scope: !3812)
!3825 = !DILocation(line: 1, column: 1, scope: !3814)
!3826 = !DILocation(line: 198, column: 5, scope: !3814)
!3827 = !DILocation(line: 196, column: 10, scope: !3814)
!3828 = !DILocation(line: 196, column: 15, scope: !3806)
!3829 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix17h213ec8c43e9bf63fE", scope: !3142, file: !908, line: 228, type: !3830, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !3832)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!3127, !383, !312}
!3832 = !{!3833, !3834, !3835, !3837, !3838, !3840, !3842, !3844, !3846, !3848, !3850, !3852, !3854, !3856, !3857, !3859, !3861, !3863, !3865, !3867, !3869, !3870, !3872, !3874, !3876, !3877, !3879, !3881, !3883, !3884, !3886, !3888, !3890}
!3833 = !DILocalVariable(name: "src", arg: 1, scope: !3829, file: !908, line: 228, type: !383)
!3834 = !DILocalVariable(name: "radix", arg: 2, scope: !3829, file: !908, line: 228, type: !312)
!3835 = !DILocalVariable(name: "is_positive", scope: !3836, file: !908, line: 265, type: !675, align: 1)
!3836 = distinct !DILexicalBlock(scope: !3829, file: !908, line: 265, column: 17)
!3837 = !DILocalVariable(name: "src", scope: !3836, file: !908, line: 265, type: !383, align: 8)
!3838 = !DILocalVariable(name: "src", scope: !3839, file: !908, line: 268, type: !383, align: 8)
!3839 = distinct !DILexicalBlock(scope: !3829, file: !908, line: 268, column: 21)
!3840 = !DILocalVariable(name: "sig", scope: !3841, file: !908, line: 273, type: !510, align: 4)
!3841 = distinct !DILexicalBlock(scope: !3836, file: !908, line: 273, column: 17)
!3842 = !DILocalVariable(name: "prev_sig", scope: !3843, file: !908, line: 275, type: !510, align: 4)
!3843 = distinct !DILexicalBlock(scope: !3841, file: !908, line: 275, column: 17)
!3844 = !DILocalVariable(name: "cs", scope: !3845, file: !908, line: 276, type: !314, align: 8)
!3845 = distinct !DILexicalBlock(scope: !3843, file: !908, line: 276, column: 17)
!3846 = !DILocalVariable(name: "exp_info", scope: !3847, file: !908, line: 278, type: !3040, align: 8)
!3847 = distinct !DILexicalBlock(scope: !3845, file: !908, line: 278, column: 17)
!3848 = !DILocalVariable(name: "iter", scope: !3849, file: !908, line: 281, type: !313, align: 8)
!3849 = distinct !DILexicalBlock(scope: !3847, file: !908, line: 281, column: 17)
!3850 = !DILocalVariable(name: "__next", scope: !3851, file: !908, line: 281, type: !302, align: 8)
!3851 = distinct !DILexicalBlock(scope: !3849, file: !908, line: 281, column: 31)
!3852 = !DILocalVariable(name: "val", scope: !3853, file: !908, line: 281, type: !302, align: 8)
!3853 = distinct !DILexicalBlock(scope: !3851, file: !908, line: 281, column: 21)
!3854 = !DILocalVariable(name: "i", scope: !3855, file: !908, line: 281, type: !109, align: 8)
!3855 = distinct !DILexicalBlock(scope: !3851, file: !908, line: 281, column: 31)
!3856 = !DILocalVariable(name: "c", scope: !3855, file: !908, line: 281, type: !306, align: 4)
!3857 = !DILocalVariable(name: "digit", scope: !3858, file: !908, line: 283, type: !312, align: 4)
!3858 = distinct !DILexicalBlock(scope: !3855, file: !908, line: 283, column: 25)
!3859 = !DILocalVariable(name: "power", scope: !3860, file: !908, line: 328, type: !510, align: 4)
!3860 = distinct !DILexicalBlock(scope: !3847, file: !908, line: 328, column: 21)
!3861 = !DILocalVariable(name: "iter", scope: !3862, file: !908, line: 329, type: !313, align: 8)
!3862 = distinct !DILexicalBlock(scope: !3860, file: !908, line: 329, column: 21)
!3863 = !DILocalVariable(name: "__next", scope: !3864, file: !908, line: 329, type: !302, align: 8)
!3864 = distinct !DILexicalBlock(scope: !3862, file: !908, line: 329, column: 35)
!3865 = !DILocalVariable(name: "val", scope: !3866, file: !908, line: 329, type: !302, align: 8)
!3866 = distinct !DILexicalBlock(scope: !3864, file: !908, line: 329, column: 25)
!3867 = !DILocalVariable(name: "i", scope: !3868, file: !908, line: 329, type: !109, align: 8)
!3868 = distinct !DILexicalBlock(scope: !3864, file: !908, line: 329, column: 35)
!3869 = !DILocalVariable(name: "c", scope: !3868, file: !908, line: 329, type: !306, align: 4)
!3870 = !DILocalVariable(name: "digit", scope: !3871, file: !908, line: 331, type: !312, align: 4)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !908, line: 331, column: 29)
!3872 = !DILocalVariable(name: "exp", scope: !3873, file: !908, line: 361, type: !510, align: 4)
!3873 = distinct !DILexicalBlock(scope: !3847, file: !908, line: 361, column: 17)
!3874 = !DILocalVariable(name: "c", scope: !3875, file: !908, line: 362, type: !306, align: 4)
!3875 = distinct !DILexicalBlock(scope: !3847, file: !908, line: 362, column: 21)
!3876 = !DILocalVariable(name: "offset", scope: !3875, file: !908, line: 362, type: !109, align: 8)
!3877 = !DILocalVariable(name: "base", scope: !3878, file: !908, line: 363, type: !510, align: 4)
!3878 = distinct !DILexicalBlock(scope: !3875, file: !908, line: 363, column: 25)
!3879 = !DILocalVariable(name: "src", scope: !3880, file: !908, line: 370, type: !383, align: 8)
!3880 = distinct !DILexicalBlock(scope: !3878, file: !908, line: 370, column: 25)
!3881 = !DILocalVariable(name: "is_positive", scope: !3882, file: !908, line: 371, type: !675, align: 1)
!3882 = distinct !DILexicalBlock(scope: !3880, file: !908, line: 371, column: 25)
!3883 = !DILocalVariable(name: "exp", scope: !3882, file: !908, line: 371, type: !2339, align: 8)
!3884 = !DILocalVariable(name: "src", scope: !3885, file: !908, line: 372, type: !383, align: 8)
!3885 = distinct !DILexicalBlock(scope: !3880, file: !908, line: 372, column: 29)
!3886 = !DILocalVariable(name: "src", scope: !3887, file: !908, line: 373, type: !383, align: 8)
!3887 = distinct !DILexicalBlock(scope: !3880, file: !908, line: 373, column: 29)
!3888 = !DILocalVariable(name: "exp", scope: !3889, file: !908, line: 385, type: !109, align: 8)
!3889 = distinct !DILexicalBlock(scope: !3882, file: !908, line: 385, column: 29)
!3890 = !DILocalVariable(name: "exp", scope: !3891, file: !908, line: 386, type: !109, align: 8)
!3891 = distinct !DILexicalBlock(scope: !3882, file: !908, line: 386, column: 29)
!3892 = !DILocation(line: 228, column: 31, scope: !3829)
!3893 = !DILocation(line: 228, column: 42, scope: !3829)
!3894 = !DILocation(line: 273, column: 21, scope: !3841)
!3895 = !DILocation(line: 275, column: 21, scope: !3843)
!3896 = !DILocation(line: 276, column: 21, scope: !3845)
!3897 = !DILocation(line: 278, column: 21, scope: !3847)
!3898 = !DILocation(line: 281, column: 31, scope: !3849)
!3899 = !DILocation(line: 328, column: 25, scope: !3860)
!3900 = !DILocation(line: 329, column: 35, scope: !3862)
!3901 = !DILocation(line: 361, column: 21, scope: !3873)
!3902 = !DILocation(line: 363, column: 29, scope: !3878)
!3903 = !DILocation(line: 371, column: 43, scope: !3882)
!3904 = !DILocation(line: 235, column: 20, scope: !3829)
!3905 = !DILocation(line: 236, column: 28, scope: !3829)
!3906 = !DILocation(line: 242, column: 46, scope: !3829)
!3907 = !DILocation(line: 242, column: 20, scope: !3829)
!3908 = !DILocation(line: 243, column: 50, scope: !3829)
!3909 = !DILocation(line: 243, column: 24, scope: !3829)
!3910 = !DILocation(line: 246, column: 53, scope: !3829)
!3911 = !DILocation(line: 246, column: 27, scope: !3829)
!3912 = !DILocation(line: 245, column: 28, scope: !3829)
!3913 = !DILocation(line: 245, column: 21, scope: !3829)
!3914 = !DILocation(line: 394, column: 14, scope: !3829)
!3915 = !DILocation(line: 247, column: 50, scope: !3829)
!3916 = !DILocation(line: 247, column: 24, scope: !3829)
!3917 = !DILocation(line: 250, column: 53, scope: !3829)
!3918 = !DILocation(line: 250, column: 27, scope: !3829)
!3919 = !DILocation(line: 249, column: 28, scope: !3829)
!3920 = !DILocation(line: 249, column: 21, scope: !3829)
!3921 = !DILocation(line: 252, column: 53, scope: !3829)
!3922 = !DILocation(line: 252, column: 27, scope: !3829)
!3923 = !DILocation(line: 251, column: 28, scope: !3829)
!3924 = !DILocation(line: 251, column: 21, scope: !3829)
!3925 = !DILocation(line: 265, column: 66, scope: !3829)
!3926 = !DILocation(line: 265, column: 49, scope: !3829)
!3927 = !DILocation(line: 253, column: 28, scope: !3829)
!3928 = !DILocation(line: 1, column: 1, scope: !3829)
!3929 = !DILocation(line: 265, column: 43, scope: !3829)
!3930 = !DILocation(line: 266, column: 48, scope: !3829)
!3931 = !DILocation(line: 266, column: 41, scope: !3829)
!3932 = !DILocation(line: 267, column: 32, scope: !3829)
!3933 = !DILocation(line: 269, column: 49, scope: !3829)
!3934 = !DILocation(line: 269, column: 41, scope: !3829)
!3935 = !DILocation(line: 269, column: 52, scope: !3829)
!3936 = !DILocation(line: 265, column: 22, scope: !3829)
!3937 = !DILocation(line: 265, column: 22, scope: !3836)
!3938 = !DILocation(line: 265, column: 35, scope: !3829)
!3939 = !DILocation(line: 265, column: 35, scope: !3836)
!3940 = !DILocation(line: 273, column: 34, scope: !3836)
!3941 = !DILocation(line: 268, column: 32, scope: !3829)
!3942 = !DILocation(line: 268, column: 32, scope: !3839)
!3943 = !DILocation(line: 268, column: 41, scope: !3839)
!3944 = !DILocation(line: 268, column: 52, scope: !3829)
!3945 = !DILocation(line: 267, column: 48, scope: !3829)
!3946 = !DILocation(line: 267, column: 41, scope: !3829)
!3947 = !DILocation(line: 273, column: 61, scope: !3836)
!3948 = !DILocation(line: 273, column: 31, scope: !3836)
!3949 = !DILocation(line: 273, column: 48, scope: !3836)
!3950 = !DILocation(line: 275, column: 36, scope: !3841)
!3951 = !DILocation(line: 276, column: 30, scope: !3843)
!3952 = !DILocation(line: 278, column: 36, scope: !3845)
!3953 = !DILocation(line: 281, column: 31, scope: !3847)
!3954 = !DILocation(line: 281, column: 17, scope: !3849)
!3955 = !DILocation(line: 281, column: 31, scope: !3851)
!3956 = !DILocation(line: 327, column: 20, scope: !3847)
!3957 = !DILocation(line: 281, column: 21, scope: !3851)
!3958 = !DILocation(line: 281, column: 21, scope: !3853)
!3959 = !DILocation(line: 281, column: 22, scope: !3851)
!3960 = !DILocation(line: 281, column: 22, scope: !3855)
!3961 = !DILocation(line: 281, column: 25, scope: !3851)
!3962 = !DILocation(line: 281, column: 25, scope: !3855)
!3963 = !DILocation(line: 282, column: 27, scope: !3855)
!3964 = !DILocation(line: 282, column: 21, scope: !3855)
!3965 = !DILocation(line: 310, column: 33, scope: !3855)
!3966 = !DILocation(line: 283, column: 30, scope: !3855)
!3967 = !DILocation(line: 283, column: 30, scope: !3858)
!3968 = !DILocation(line: 285, column: 35, scope: !3858)
!3969 = !DILocation(line: 285, column: 41, scope: !3858)
!3970 = !DILocation(line: 285, column: 29, scope: !3858)
!3971 = !DILocation(line: 288, column: 32, scope: !3858)
!3972 = !DILocation(line: 291, column: 39, scope: !3858)
!3973 = !DILocation(line: 291, column: 46, scope: !3858)
!3974 = !DILocation(line: 291, column: 45, scope: !3858)
!3975 = !DILocation(line: 291, column: 33, scope: !3858)
!3976 = !DILocation(line: 288, column: 29, scope: !3858)
!3977 = !DILocation(line: 289, column: 39, scope: !3858)
!3978 = !DILocation(line: 289, column: 46, scope: !3858)
!3979 = !DILocation(line: 289, column: 45, scope: !3858)
!3980 = !DILocation(line: 289, column: 33, scope: !3858)
!3981 = !DILocation(line: 296, column: 32, scope: !3858)
!3982 = !DILocation(line: 308, column: 40, scope: !3858)
!3983 = !DILocation(line: 308, column: 29, scope: !3858)
!3984 = !DILocation(line: 297, column: 36, scope: !3858)
!3985 = !DILocation(line: 297, column: 51, scope: !3858)
!3986 = !DILocation(line: 297, column: 58, scope: !3858)
!3987 = !DILocation(line: 299, column: 36, scope: !3858)
!3988 = !DILocation(line: 298, column: 46, scope: !3858)
!3989 = !DILocation(line: 1, column: 1, scope: !3858)
!3990 = !DILocation(line: 299, column: 52, scope: !3858)
!3991 = !DILocation(line: 299, column: 59, scope: !3858)
!3992 = !DILocation(line: 303, column: 36, scope: !3858)
!3993 = !DILocation(line: 300, column: 46, scope: !3858)
!3994 = !DILocation(line: 303, column: 52, scope: !3858)
!3995 = !DILocation(line: 303, column: 65, scope: !3858)
!3996 = !DILocation(line: 303, column: 71, scope: !3858)
!3997 = !DILocation(line: 303, column: 64, scope: !3858)
!3998 = !DILocation(line: 303, column: 86, scope: !3858)
!3999 = !DILocation(line: 303, column: 51, scope: !3858)
!4000 = !DILocation(line: 305, column: 36, scope: !3858)
!4001 = !DILocation(line: 304, column: 46, scope: !3858)
!4002 = !DILocation(line: 305, column: 53, scope: !3858)
!4003 = !DILocation(line: 305, column: 66, scope: !3858)
!4004 = !DILocation(line: 305, column: 72, scope: !3858)
!4005 = !DILocation(line: 305, column: 65, scope: !3858)
!4006 = !DILocation(line: 305, column: 87, scope: !3858)
!4007 = !DILocation(line: 305, column: 52, scope: !3858)
!4008 = !DILocation(line: 306, column: 46, scope: !3858)
!4009 = !DILocation(line: 319, column: 40, scope: !3855)
!4010 = !DILocation(line: 319, column: 33, scope: !3855)
!4011 = !DILocation(line: 312, column: 53, scope: !3855)
!4012 = !DILocation(line: 312, column: 49, scope: !3855)
!4013 = !DILocation(line: 312, column: 44, scope: !3855)
!4014 = !DILocation(line: 312, column: 33, scope: !3855)
!4015 = !DILocation(line: 313, column: 33, scope: !3855)
!4016 = !DILocation(line: 361, column: 33, scope: !3847)
!4017 = !DILocation(line: 361, column: 27, scope: !3847)
!4018 = !DILocation(line: 328, column: 37, scope: !3847)
!4019 = !DILocation(line: 329, column: 35, scope: !3860)
!4020 = !DILocation(line: 329, column: 21, scope: !3862)
!4021 = !DILocation(line: 329, column: 35, scope: !3864)
!4022 = !DILocation(line: 329, column: 25, scope: !3864)
!4023 = !DILocation(line: 329, column: 25, scope: !3866)
!4024 = !DILocation(line: 329, column: 26, scope: !3864)
!4025 = !DILocation(line: 329, column: 26, scope: !3868)
!4026 = !DILocation(line: 329, column: 29, scope: !3864)
!4027 = !DILocation(line: 329, column: 29, scope: !3868)
!4028 = !DILocation(line: 330, column: 31, scope: !3868)
!4029 = !DILocation(line: 330, column: 25, scope: !3868)
!4030 = !DILocation(line: 347, column: 37, scope: !3868)
!4031 = !DILocation(line: 331, column: 34, scope: !3868)
!4032 = !DILocation(line: 331, column: 34, scope: !3871)
!4033 = !DILocation(line: 333, column: 41, scope: !3871)
!4034 = !DILocation(line: 333, column: 49, scope: !3871)
!4035 = !DILocation(line: 333, column: 33, scope: !3871)
!4036 = !DILocation(line: 335, column: 42, scope: !3871)
!4037 = !DILocation(line: 338, column: 37, scope: !3871)
!4038 = !DILocation(line: 338, column: 43, scope: !3871)
!4039 = !DILocation(line: 338, column: 59, scope: !3871)
!4040 = !DILocation(line: 335, column: 39, scope: !3871)
!4041 = !DILocation(line: 336, column: 37, scope: !3871)
!4042 = !DILocation(line: 336, column: 43, scope: !3871)
!4043 = !DILocation(line: 336, column: 59, scope: !3871)
!4044 = !DILocation(line: 335, column: 33, scope: !3871)
!4045 = !DILocation(line: 341, column: 36, scope: !3871)
!4046 = !DILocation(line: 341, column: 51, scope: !3871)
!4047 = !DILocation(line: 341, column: 57, scope: !3871)
!4048 = !DILocation(line: 343, column: 36, scope: !3871)
!4049 = !DILocation(line: 342, column: 46, scope: !3871)
!4050 = !DILocation(line: 1, column: 1, scope: !3871)
!4051 = !DILocation(line: 343, column: 52, scope: !3871)
!4052 = !DILocation(line: 343, column: 58, scope: !3871)
!4053 = !DILocation(line: 345, column: 44, scope: !3871)
!4054 = !DILocation(line: 345, column: 33, scope: !3871)
!4055 = !DILocation(line: 344, column: 46, scope: !3871)
!4056 = !DILocation(line: 353, column: 44, scope: !3868)
!4057 = !DILocation(line: 353, column: 37, scope: !3868)
!4058 = !DILocation(line: 349, column: 57, scope: !3868)
!4059 = !DILocation(line: 349, column: 53, scope: !3868)
!4060 = !DILocation(line: 349, column: 48, scope: !3868)
!4061 = !DILocation(line: 349, column: 37, scope: !3868)
!4062 = !DILocation(line: 1, column: 1, scope: !3864)
!4063 = !DILocation(line: 390, column: 29, scope: !3847)
!4064 = !DILocation(line: 362, column: 27, scope: !3847)
!4065 = !DILocation(line: 362, column: 27, scope: !3875)
!4066 = !DILocation(line: 362, column: 30, scope: !3847)
!4067 = !DILocation(line: 362, column: 30, scope: !3875)
!4068 = !DILocation(line: 363, column: 36, scope: !3875)
!4069 = !DILocation(line: 366, column: 41, scope: !3875)
!4070 = !DILocation(line: 366, column: 34, scope: !3875)
!4071 = !DILocation(line: 364, column: 42, scope: !3875)
!4072 = !DILocation(line: 365, column: 42, scope: !3875)
!4073 = !DILocation(line: 365, column: 57, scope: !3875)
!4074 = !DILocation(line: 370, column: 40, scope: !3878)
!4075 = !DILocation(line: 370, column: 36, scope: !3878)
!4076 = !DILocation(line: 364, column: 57, scope: !3875)
!4077 = !DILocation(line: 370, column: 35, scope: !3878)
!4078 = !DILocation(line: 370, column: 29, scope: !3880)
!4079 = !DILocation(line: 371, column: 56, scope: !3880)
!4080 = !DILocation(line: 371, column: 50, scope: !3880)
!4081 = !DILocation(line: 375, column: 56, scope: !3880)
!4082 = !DILocation(line: 1, column: 1, scope: !3878)
!4083 = !DILocation(line: 374, column: 57, scope: !3880)
!4084 = !DILocation(line: 372, column: 40, scope: !3880)
!4085 = !DILocation(line: 372, column: 40, scope: !3885)
!4086 = !DILocation(line: 372, column: 57, scope: !3885)
!4087 = !DILocation(line: 373, column: 40, scope: !3880)
!4088 = !DILocation(line: 373, column: 40, scope: !3887)
!4089 = !DILocation(line: 373, column: 57, scope: !3887)
!4090 = !DILocation(line: 374, column: 49, scope: !3880)
!4091 = !DILocation(line: 374, column: 77, scope: !3880)
!4092 = !DILocation(line: 371, column: 30, scope: !3880)
!4093 = !DILocation(line: 371, column: 30, scope: !3882)
!4094 = !DILocation(line: 371, column: 43, scope: !3880)
!4095 = !DILocation(line: 384, column: 45, scope: !3882)
!4096 = !DILocation(line: 384, column: 31, scope: !3882)
!4097 = !DILocation(line: 384, column: 25, scope: !3882)
!4098 = !DILocation(line: 373, column: 49, scope: !3887)
!4099 = !DILocation(line: 373, column: 77, scope: !3880)
!4100 = !DILocation(line: 372, column: 49, scope: !3885)
!4101 = !DILocation(line: 372, column: 77, scope: !3880)
!4102 = !DILocation(line: 385, column: 40, scope: !3882)
!4103 = !DILocation(line: 385, column: 40, scope: !3889)
!4104 = !DILocation(line: 385, column: 53, scope: !3889)
!4105 = !DILocation(line: 385, column: 49, scope: !3889)
!4106 = !DILocation(line: 393, column: 20, scope: !3873)
!4107 = !DILocation(line: 393, column: 26, scope: !3873)
!4108 = !DILocation(line: 393, column: 17, scope: !3873)
!4109 = !DILocation(line: 386, column: 40, scope: !3882)
!4110 = !DILocation(line: 386, column: 40, scope: !3891)
!4111 = !DILocation(line: 386, column: 59, scope: !3891)
!4112 = !DILocation(line: 386, column: 55, scope: !3891)
!4113 = !DILocation(line: 387, column: 56, scope: !3882)
!4114 = !DILocation(line: 1, column: 1, scope: !3875)
!4115 = !DILocation(line: 386, column: 49, scope: !3891)
!4116 = !DILocation(line: 386, column: 68, scope: !3882)
!4117 = !DILocation(line: 236, column: 48, scope: !3829)
!4118 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h581169742fb4ec99E", scope: !3141, file: !908, line: 236, type: !4119, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!3086, !3140, !1294}
!4121 = !{!4122, !4123}
!4122 = !DILocalVariable(name: "src", scope: !4118, file: !908, line: 228, type: !383, align: 8)
!4123 = !DILocalVariable(arg: 2, scope: !4118, file: !908, line: 236, type: !1294)
!4124 = !DILocation(line: 228, column: 31, scope: !4118)
!4125 = !DILocation(line: 236, column: 49, scope: !4118)
!4126 = !DILocation(line: 237, column: 34, scope: !4118)
!4127 = !DILocation(line: 237, column: 66, scope: !4118)
!4128 = !DILocation(line: 237, column: 31, scope: !4118)
!4129 = !DILocation(line: 237, column: 51, scope: !4118)
!4130 = !DILocation(line: 236, column: 52, scope: !4118)
!4131 = !DILocation(line: 238, column: 22, scope: !4118)
!4132 = distinct !DISubprogram(name: "slice_shift_char", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h17943db7526cdedeE", scope: !3141, file: !908, line: 256, type: !4133, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4151)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!4135, !383}
!4135 = !DICompositeType(tag: DW_TAG_structure_type, name: "Option<(char, &str)>", scope: !65, file: !2, size: 192, align: 64, elements: !4136, identifier: "5959a5af2de36f4aa840cff95a992876")
!4136 = !{!4137}
!4137 = !DICompositeType(tag: DW_TAG_variant_part, scope: !65, file: !2, size: 192, align: 64, elements: !4138, templateParams: !4141, identifier: "5959a5af2de36f4aa840cff95a992876_variant_part", discriminator: !1181)
!4138 = !{!4139, !4147}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "None", scope: !4137, file: !2, baseType: !4140, size: 192, align: 64, extraData: i64 1114112)
!4140 = !DICompositeType(tag: DW_TAG_structure_type, name: "None", scope: !4135, file: !2, size: 192, align: 64, elements: !4, templateParams: !4141, identifier: "5959a5af2de36f4aa840cff95a992876::None")
!4141 = !{!4142}
!4142 = !DITemplateTypeParameter(name: "T", type: !4143)
!4143 = !DICompositeType(tag: DW_TAG_structure_type, name: "(char, &str)", file: !2, size: 192, align: 64, elements: !4144, templateParams: !4, identifier: "e8ef9197af0c0f5c3c5a800c973b8a18")
!4144 = !{!4145, !4146}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4143, file: !2, baseType: !306, size: 32, align: 32)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "__1", scope: !4143, file: !2, baseType: !383, size: 128, align: 64, offset: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "Some", scope: !4137, file: !2, baseType: !4148, size: 192, align: 64)
!4148 = !DICompositeType(tag: DW_TAG_structure_type, name: "Some", scope: !4135, file: !2, size: 192, align: 64, elements: !4149, templateParams: !4141, identifier: "5959a5af2de36f4aa840cff95a992876::Some")
!4149 = !{!4150}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "__0", scope: !4148, file: !2, baseType: !4143, size: 192, align: 64)
!4151 = !{!4152, !4153, !4155}
!4152 = !DILocalVariable(name: "src", arg: 1, scope: !4132, file: !908, line: 256, type: !383)
!4153 = !DILocalVariable(name: "chars", scope: !4154, file: !908, line: 257, type: !317, align: 8)
!4154 = distinct !DILexicalBlock(scope: !4132, file: !908, line: 257, column: 21)
!4155 = !DILocalVariable(name: "ch", scope: !4156, file: !908, line: 258, type: !306, align: 4)
!4156 = distinct !DILexicalBlock(scope: !4154, file: !908, line: 258, column: 28)
!4157 = !DILocation(line: 256, column: 37, scope: !4132)
!4158 = !DILocation(line: 257, column: 25, scope: !4154)
!4159 = !DILocation(line: 257, column: 37, scope: !4132)
!4160 = !DILocation(line: 258, column: 39, scope: !4154)
!4161 = !DILocation(line: 258, column: 28, scope: !4154)
!4162 = !DILocation(line: 258, column: 33, scope: !4154)
!4163 = !DILocation(line: 258, column: 33, scope: !4156)
!4164 = !DILocation(line: 259, column: 35, scope: !4154)
!4165 = !DILocation(line: 261, column: 25, scope: !4154)
!4166 = !DILocation(line: 258, column: 21, scope: !4154)
!4167 = !DILocation(line: 263, column: 18, scope: !4132)
!4168 = !DILocation(line: 259, column: 30, scope: !4154)
!4169 = !DILocation(line: 259, column: 25, scope: !4154)
!4170 = distinct !DISubprogram(name: "pow", linkageName: "_ZN39_$LT$f32$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17he28998159e117e56E", scope: !3141, file: !908, line: 379, type: !4171, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4173)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{!510, !510, !109}
!4173 = !{!4174, !4175}
!4174 = !DILocalVariable(name: "base", arg: 1, scope: !4170, file: !908, line: 379, type: !510)
!4175 = !DILocalVariable(name: "exp", arg: 2, scope: !4170, file: !908, line: 379, type: !109)
!4176 = !DILocation(line: 379, column: 32, scope: !4170)
!4177 = !DILocation(line: 379, column: 42, scope: !4170)
!4178 = !DILocation(line: 380, column: 47, scope: !4170)
!4179 = !DILocation(line: 380, column: 29, scope: !4170)
!4180 = !DILocation(line: 381, column: 26, scope: !4170)
!4181 = distinct !DISubprogram(name: "from_str_radix", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix17ha98c96c1bbf9a4e7E", scope: !3095, file: !908, line: 228, type: !4182, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4184)
!4182 = !DISubroutineType(types: !4183)
!4183 = !{!3076, !383, !312}
!4184 = !{!4185, !4186, !4187, !4189, !4190, !4192, !4194, !4196, !4198, !4200, !4202, !4204, !4206, !4208, !4209, !4211, !4213, !4215, !4217, !4219, !4221, !4222, !4224, !4226, !4228, !4229, !4231, !4233, !4235, !4236, !4238, !4240, !4242}
!4185 = !DILocalVariable(name: "src", arg: 1, scope: !4181, file: !908, line: 228, type: !383)
!4186 = !DILocalVariable(name: "radix", arg: 2, scope: !4181, file: !908, line: 228, type: !312)
!4187 = !DILocalVariable(name: "is_positive", scope: !4188, file: !908, line: 265, type: !675, align: 1)
!4188 = distinct !DILexicalBlock(scope: !4181, file: !908, line: 265, column: 17)
!4189 = !DILocalVariable(name: "src", scope: !4188, file: !908, line: 265, type: !383, align: 8)
!4190 = !DILocalVariable(name: "src", scope: !4191, file: !908, line: 268, type: !383, align: 8)
!4191 = distinct !DILexicalBlock(scope: !4181, file: !908, line: 268, column: 21)
!4192 = !DILocalVariable(name: "sig", scope: !4193, file: !908, line: 273, type: !525, align: 8)
!4193 = distinct !DILexicalBlock(scope: !4188, file: !908, line: 273, column: 17)
!4194 = !DILocalVariable(name: "prev_sig", scope: !4195, file: !908, line: 275, type: !525, align: 8)
!4195 = distinct !DILexicalBlock(scope: !4193, file: !908, line: 275, column: 17)
!4196 = !DILocalVariable(name: "cs", scope: !4197, file: !908, line: 276, type: !314, align: 8)
!4197 = distinct !DILexicalBlock(scope: !4195, file: !908, line: 276, column: 17)
!4198 = !DILocalVariable(name: "exp_info", scope: !4199, file: !908, line: 278, type: !3040, align: 8)
!4199 = distinct !DILexicalBlock(scope: !4197, file: !908, line: 278, column: 17)
!4200 = !DILocalVariable(name: "iter", scope: !4201, file: !908, line: 281, type: !313, align: 8)
!4201 = distinct !DILexicalBlock(scope: !4199, file: !908, line: 281, column: 17)
!4202 = !DILocalVariable(name: "__next", scope: !4203, file: !908, line: 281, type: !302, align: 8)
!4203 = distinct !DILexicalBlock(scope: !4201, file: !908, line: 281, column: 31)
!4204 = !DILocalVariable(name: "val", scope: !4205, file: !908, line: 281, type: !302, align: 8)
!4205 = distinct !DILexicalBlock(scope: !4203, file: !908, line: 281, column: 21)
!4206 = !DILocalVariable(name: "i", scope: !4207, file: !908, line: 281, type: !109, align: 8)
!4207 = distinct !DILexicalBlock(scope: !4203, file: !908, line: 281, column: 31)
!4208 = !DILocalVariable(name: "c", scope: !4207, file: !908, line: 281, type: !306, align: 4)
!4209 = !DILocalVariable(name: "digit", scope: !4210, file: !908, line: 283, type: !312, align: 4)
!4210 = distinct !DILexicalBlock(scope: !4207, file: !908, line: 283, column: 25)
!4211 = !DILocalVariable(name: "power", scope: !4212, file: !908, line: 328, type: !525, align: 8)
!4212 = distinct !DILexicalBlock(scope: !4199, file: !908, line: 328, column: 21)
!4213 = !DILocalVariable(name: "iter", scope: !4214, file: !908, line: 329, type: !313, align: 8)
!4214 = distinct !DILexicalBlock(scope: !4212, file: !908, line: 329, column: 21)
!4215 = !DILocalVariable(name: "__next", scope: !4216, file: !908, line: 329, type: !302, align: 8)
!4216 = distinct !DILexicalBlock(scope: !4214, file: !908, line: 329, column: 35)
!4217 = !DILocalVariable(name: "val", scope: !4218, file: !908, line: 329, type: !302, align: 8)
!4218 = distinct !DILexicalBlock(scope: !4216, file: !908, line: 329, column: 25)
!4219 = !DILocalVariable(name: "i", scope: !4220, file: !908, line: 329, type: !109, align: 8)
!4220 = distinct !DILexicalBlock(scope: !4216, file: !908, line: 329, column: 35)
!4221 = !DILocalVariable(name: "c", scope: !4220, file: !908, line: 329, type: !306, align: 4)
!4222 = !DILocalVariable(name: "digit", scope: !4223, file: !908, line: 331, type: !312, align: 4)
!4223 = distinct !DILexicalBlock(scope: !4220, file: !908, line: 331, column: 29)
!4224 = !DILocalVariable(name: "exp", scope: !4225, file: !908, line: 361, type: !525, align: 8)
!4225 = distinct !DILexicalBlock(scope: !4199, file: !908, line: 361, column: 17)
!4226 = !DILocalVariable(name: "c", scope: !4227, file: !908, line: 362, type: !306, align: 4)
!4227 = distinct !DILexicalBlock(scope: !4199, file: !908, line: 362, column: 21)
!4228 = !DILocalVariable(name: "offset", scope: !4227, file: !908, line: 362, type: !109, align: 8)
!4229 = !DILocalVariable(name: "base", scope: !4230, file: !908, line: 363, type: !525, align: 8)
!4230 = distinct !DILexicalBlock(scope: !4227, file: !908, line: 363, column: 25)
!4231 = !DILocalVariable(name: "src", scope: !4232, file: !908, line: 370, type: !383, align: 8)
!4232 = distinct !DILexicalBlock(scope: !4230, file: !908, line: 370, column: 25)
!4233 = !DILocalVariable(name: "is_positive", scope: !4234, file: !908, line: 371, type: !675, align: 1)
!4234 = distinct !DILexicalBlock(scope: !4232, file: !908, line: 371, column: 25)
!4235 = !DILocalVariable(name: "exp", scope: !4234, file: !908, line: 371, type: !2339, align: 8)
!4236 = !DILocalVariable(name: "src", scope: !4237, file: !908, line: 372, type: !383, align: 8)
!4237 = distinct !DILexicalBlock(scope: !4232, file: !908, line: 372, column: 29)
!4238 = !DILocalVariable(name: "src", scope: !4239, file: !908, line: 373, type: !383, align: 8)
!4239 = distinct !DILexicalBlock(scope: !4232, file: !908, line: 373, column: 29)
!4240 = !DILocalVariable(name: "exp", scope: !4241, file: !908, line: 385, type: !109, align: 8)
!4241 = distinct !DILexicalBlock(scope: !4234, file: !908, line: 385, column: 29)
!4242 = !DILocalVariable(name: "exp", scope: !4243, file: !908, line: 386, type: !109, align: 8)
!4243 = distinct !DILexicalBlock(scope: !4234, file: !908, line: 386, column: 29)
!4244 = !DILocation(line: 228, column: 31, scope: !4181)
!4245 = !DILocation(line: 228, column: 42, scope: !4181)
!4246 = !DILocation(line: 273, column: 21, scope: !4193)
!4247 = !DILocation(line: 275, column: 21, scope: !4195)
!4248 = !DILocation(line: 276, column: 21, scope: !4197)
!4249 = !DILocation(line: 278, column: 21, scope: !4199)
!4250 = !DILocation(line: 281, column: 31, scope: !4201)
!4251 = !DILocation(line: 328, column: 25, scope: !4212)
!4252 = !DILocation(line: 329, column: 35, scope: !4214)
!4253 = !DILocation(line: 361, column: 21, scope: !4225)
!4254 = !DILocation(line: 363, column: 29, scope: !4230)
!4255 = !DILocation(line: 371, column: 43, scope: !4234)
!4256 = !DILocation(line: 235, column: 20, scope: !4181)
!4257 = !DILocation(line: 236, column: 28, scope: !4181)
!4258 = !DILocation(line: 242, column: 46, scope: !4181)
!4259 = !DILocation(line: 242, column: 20, scope: !4181)
!4260 = !DILocation(line: 243, column: 50, scope: !4181)
!4261 = !DILocation(line: 243, column: 24, scope: !4181)
!4262 = !DILocation(line: 246, column: 53, scope: !4181)
!4263 = !DILocation(line: 246, column: 27, scope: !4181)
!4264 = !DILocation(line: 245, column: 28, scope: !4181)
!4265 = !DILocation(line: 245, column: 21, scope: !4181)
!4266 = !DILocation(line: 394, column: 14, scope: !4181)
!4267 = !DILocation(line: 247, column: 50, scope: !4181)
!4268 = !DILocation(line: 247, column: 24, scope: !4181)
!4269 = !DILocation(line: 250, column: 53, scope: !4181)
!4270 = !DILocation(line: 250, column: 27, scope: !4181)
!4271 = !DILocation(line: 249, column: 28, scope: !4181)
!4272 = !DILocation(line: 249, column: 21, scope: !4181)
!4273 = !DILocation(line: 252, column: 53, scope: !4181)
!4274 = !DILocation(line: 252, column: 27, scope: !4181)
!4275 = !DILocation(line: 251, column: 28, scope: !4181)
!4276 = !DILocation(line: 251, column: 21, scope: !4181)
!4277 = !DILocation(line: 265, column: 66, scope: !4181)
!4278 = !DILocation(line: 265, column: 49, scope: !4181)
!4279 = !DILocation(line: 253, column: 28, scope: !4181)
!4280 = !DILocation(line: 1, column: 1, scope: !4181)
!4281 = !DILocation(line: 265, column: 43, scope: !4181)
!4282 = !DILocation(line: 266, column: 48, scope: !4181)
!4283 = !DILocation(line: 266, column: 41, scope: !4181)
!4284 = !DILocation(line: 267, column: 32, scope: !4181)
!4285 = !DILocation(line: 269, column: 49, scope: !4181)
!4286 = !DILocation(line: 269, column: 41, scope: !4181)
!4287 = !DILocation(line: 269, column: 52, scope: !4181)
!4288 = !DILocation(line: 265, column: 22, scope: !4181)
!4289 = !DILocation(line: 265, column: 22, scope: !4188)
!4290 = !DILocation(line: 265, column: 35, scope: !4181)
!4291 = !DILocation(line: 265, column: 35, scope: !4188)
!4292 = !DILocation(line: 273, column: 34, scope: !4188)
!4293 = !DILocation(line: 268, column: 32, scope: !4181)
!4294 = !DILocation(line: 268, column: 32, scope: !4191)
!4295 = !DILocation(line: 268, column: 41, scope: !4191)
!4296 = !DILocation(line: 268, column: 52, scope: !4181)
!4297 = !DILocation(line: 267, column: 48, scope: !4181)
!4298 = !DILocation(line: 267, column: 41, scope: !4181)
!4299 = !DILocation(line: 273, column: 61, scope: !4188)
!4300 = !DILocation(line: 273, column: 31, scope: !4188)
!4301 = !DILocation(line: 273, column: 48, scope: !4188)
!4302 = !DILocation(line: 275, column: 36, scope: !4193)
!4303 = !DILocation(line: 276, column: 30, scope: !4195)
!4304 = !DILocation(line: 278, column: 36, scope: !4197)
!4305 = !DILocation(line: 281, column: 31, scope: !4199)
!4306 = !DILocation(line: 281, column: 17, scope: !4201)
!4307 = !DILocation(line: 281, column: 31, scope: !4203)
!4308 = !DILocation(line: 327, column: 20, scope: !4199)
!4309 = !DILocation(line: 281, column: 21, scope: !4203)
!4310 = !DILocation(line: 281, column: 21, scope: !4205)
!4311 = !DILocation(line: 281, column: 22, scope: !4203)
!4312 = !DILocation(line: 281, column: 22, scope: !4207)
!4313 = !DILocation(line: 281, column: 25, scope: !4203)
!4314 = !DILocation(line: 281, column: 25, scope: !4207)
!4315 = !DILocation(line: 282, column: 27, scope: !4207)
!4316 = !DILocation(line: 282, column: 21, scope: !4207)
!4317 = !DILocation(line: 310, column: 33, scope: !4207)
!4318 = !DILocation(line: 283, column: 30, scope: !4207)
!4319 = !DILocation(line: 283, column: 30, scope: !4210)
!4320 = !DILocation(line: 285, column: 35, scope: !4210)
!4321 = !DILocation(line: 285, column: 41, scope: !4210)
!4322 = !DILocation(line: 285, column: 29, scope: !4210)
!4323 = !DILocation(line: 288, column: 32, scope: !4210)
!4324 = !DILocation(line: 291, column: 39, scope: !4210)
!4325 = !DILocation(line: 291, column: 46, scope: !4210)
!4326 = !DILocation(line: 291, column: 45, scope: !4210)
!4327 = !DILocation(line: 291, column: 33, scope: !4210)
!4328 = !DILocation(line: 288, column: 29, scope: !4210)
!4329 = !DILocation(line: 289, column: 39, scope: !4210)
!4330 = !DILocation(line: 289, column: 46, scope: !4210)
!4331 = !DILocation(line: 289, column: 45, scope: !4210)
!4332 = !DILocation(line: 289, column: 33, scope: !4210)
!4333 = !DILocation(line: 296, column: 32, scope: !4210)
!4334 = !DILocation(line: 308, column: 40, scope: !4210)
!4335 = !DILocation(line: 308, column: 29, scope: !4210)
!4336 = !DILocation(line: 297, column: 36, scope: !4210)
!4337 = !DILocation(line: 297, column: 51, scope: !4210)
!4338 = !DILocation(line: 297, column: 58, scope: !4210)
!4339 = !DILocation(line: 299, column: 36, scope: !4210)
!4340 = !DILocation(line: 298, column: 46, scope: !4210)
!4341 = !DILocation(line: 1, column: 1, scope: !4210)
!4342 = !DILocation(line: 299, column: 52, scope: !4210)
!4343 = !DILocation(line: 299, column: 59, scope: !4210)
!4344 = !DILocation(line: 303, column: 36, scope: !4210)
!4345 = !DILocation(line: 300, column: 46, scope: !4210)
!4346 = !DILocation(line: 303, column: 52, scope: !4210)
!4347 = !DILocation(line: 303, column: 65, scope: !4210)
!4348 = !DILocation(line: 303, column: 71, scope: !4210)
!4349 = !DILocation(line: 303, column: 64, scope: !4210)
!4350 = !DILocation(line: 303, column: 86, scope: !4210)
!4351 = !DILocation(line: 303, column: 51, scope: !4210)
!4352 = !DILocation(line: 305, column: 36, scope: !4210)
!4353 = !DILocation(line: 304, column: 46, scope: !4210)
!4354 = !DILocation(line: 305, column: 53, scope: !4210)
!4355 = !DILocation(line: 305, column: 66, scope: !4210)
!4356 = !DILocation(line: 305, column: 72, scope: !4210)
!4357 = !DILocation(line: 305, column: 65, scope: !4210)
!4358 = !DILocation(line: 305, column: 87, scope: !4210)
!4359 = !DILocation(line: 305, column: 52, scope: !4210)
!4360 = !DILocation(line: 306, column: 46, scope: !4210)
!4361 = !DILocation(line: 319, column: 40, scope: !4207)
!4362 = !DILocation(line: 319, column: 33, scope: !4207)
!4363 = !DILocation(line: 312, column: 53, scope: !4207)
!4364 = !DILocation(line: 312, column: 49, scope: !4207)
!4365 = !DILocation(line: 312, column: 44, scope: !4207)
!4366 = !DILocation(line: 312, column: 33, scope: !4207)
!4367 = !DILocation(line: 313, column: 33, scope: !4207)
!4368 = !DILocation(line: 361, column: 33, scope: !4199)
!4369 = !DILocation(line: 361, column: 27, scope: !4199)
!4370 = !DILocation(line: 328, column: 37, scope: !4199)
!4371 = !DILocation(line: 329, column: 35, scope: !4212)
!4372 = !DILocation(line: 329, column: 21, scope: !4214)
!4373 = !DILocation(line: 329, column: 35, scope: !4216)
!4374 = !DILocation(line: 329, column: 25, scope: !4216)
!4375 = !DILocation(line: 329, column: 25, scope: !4218)
!4376 = !DILocation(line: 329, column: 26, scope: !4216)
!4377 = !DILocation(line: 329, column: 26, scope: !4220)
!4378 = !DILocation(line: 329, column: 29, scope: !4216)
!4379 = !DILocation(line: 329, column: 29, scope: !4220)
!4380 = !DILocation(line: 330, column: 31, scope: !4220)
!4381 = !DILocation(line: 330, column: 25, scope: !4220)
!4382 = !DILocation(line: 347, column: 37, scope: !4220)
!4383 = !DILocation(line: 331, column: 34, scope: !4220)
!4384 = !DILocation(line: 331, column: 34, scope: !4223)
!4385 = !DILocation(line: 333, column: 41, scope: !4223)
!4386 = !DILocation(line: 333, column: 49, scope: !4223)
!4387 = !DILocation(line: 333, column: 33, scope: !4223)
!4388 = !DILocation(line: 335, column: 42, scope: !4223)
!4389 = !DILocation(line: 338, column: 37, scope: !4223)
!4390 = !DILocation(line: 338, column: 43, scope: !4223)
!4391 = !DILocation(line: 338, column: 59, scope: !4223)
!4392 = !DILocation(line: 335, column: 39, scope: !4223)
!4393 = !DILocation(line: 336, column: 37, scope: !4223)
!4394 = !DILocation(line: 336, column: 43, scope: !4223)
!4395 = !DILocation(line: 336, column: 59, scope: !4223)
!4396 = !DILocation(line: 335, column: 33, scope: !4223)
!4397 = !DILocation(line: 341, column: 36, scope: !4223)
!4398 = !DILocation(line: 341, column: 51, scope: !4223)
!4399 = !DILocation(line: 341, column: 57, scope: !4223)
!4400 = !DILocation(line: 343, column: 36, scope: !4223)
!4401 = !DILocation(line: 342, column: 46, scope: !4223)
!4402 = !DILocation(line: 1, column: 1, scope: !4223)
!4403 = !DILocation(line: 343, column: 52, scope: !4223)
!4404 = !DILocation(line: 343, column: 58, scope: !4223)
!4405 = !DILocation(line: 345, column: 44, scope: !4223)
!4406 = !DILocation(line: 345, column: 33, scope: !4223)
!4407 = !DILocation(line: 344, column: 46, scope: !4223)
!4408 = !DILocation(line: 353, column: 44, scope: !4220)
!4409 = !DILocation(line: 353, column: 37, scope: !4220)
!4410 = !DILocation(line: 349, column: 57, scope: !4220)
!4411 = !DILocation(line: 349, column: 53, scope: !4220)
!4412 = !DILocation(line: 349, column: 48, scope: !4220)
!4413 = !DILocation(line: 349, column: 37, scope: !4220)
!4414 = !DILocation(line: 1, column: 1, scope: !4216)
!4415 = !DILocation(line: 390, column: 29, scope: !4199)
!4416 = !DILocation(line: 362, column: 27, scope: !4199)
!4417 = !DILocation(line: 362, column: 27, scope: !4227)
!4418 = !DILocation(line: 362, column: 30, scope: !4199)
!4419 = !DILocation(line: 362, column: 30, scope: !4227)
!4420 = !DILocation(line: 363, column: 36, scope: !4227)
!4421 = !DILocation(line: 366, column: 41, scope: !4227)
!4422 = !DILocation(line: 366, column: 34, scope: !4227)
!4423 = !DILocation(line: 364, column: 42, scope: !4227)
!4424 = !DILocation(line: 365, column: 42, scope: !4227)
!4425 = !DILocation(line: 365, column: 57, scope: !4227)
!4426 = !DILocation(line: 370, column: 40, scope: !4230)
!4427 = !DILocation(line: 370, column: 36, scope: !4230)
!4428 = !DILocation(line: 364, column: 57, scope: !4227)
!4429 = !DILocation(line: 370, column: 35, scope: !4230)
!4430 = !DILocation(line: 370, column: 29, scope: !4232)
!4431 = !DILocation(line: 371, column: 56, scope: !4232)
!4432 = !DILocation(line: 371, column: 50, scope: !4232)
!4433 = !DILocation(line: 375, column: 56, scope: !4232)
!4434 = !DILocation(line: 1, column: 1, scope: !4230)
!4435 = !DILocation(line: 374, column: 57, scope: !4232)
!4436 = !DILocation(line: 372, column: 40, scope: !4232)
!4437 = !DILocation(line: 372, column: 40, scope: !4237)
!4438 = !DILocation(line: 372, column: 57, scope: !4237)
!4439 = !DILocation(line: 373, column: 40, scope: !4232)
!4440 = !DILocation(line: 373, column: 40, scope: !4239)
!4441 = !DILocation(line: 373, column: 57, scope: !4239)
!4442 = !DILocation(line: 374, column: 49, scope: !4232)
!4443 = !DILocation(line: 374, column: 77, scope: !4232)
!4444 = !DILocation(line: 371, column: 30, scope: !4232)
!4445 = !DILocation(line: 371, column: 30, scope: !4234)
!4446 = !DILocation(line: 371, column: 43, scope: !4232)
!4447 = !DILocation(line: 384, column: 45, scope: !4234)
!4448 = !DILocation(line: 384, column: 31, scope: !4234)
!4449 = !DILocation(line: 384, column: 25, scope: !4234)
!4450 = !DILocation(line: 373, column: 49, scope: !4239)
!4451 = !DILocation(line: 373, column: 77, scope: !4232)
!4452 = !DILocation(line: 372, column: 49, scope: !4237)
!4453 = !DILocation(line: 372, column: 77, scope: !4232)
!4454 = !DILocation(line: 385, column: 40, scope: !4234)
!4455 = !DILocation(line: 385, column: 40, scope: !4241)
!4456 = !DILocation(line: 385, column: 53, scope: !4241)
!4457 = !DILocation(line: 385, column: 49, scope: !4241)
!4458 = !DILocation(line: 393, column: 20, scope: !4225)
!4459 = !DILocation(line: 393, column: 26, scope: !4225)
!4460 = !DILocation(line: 393, column: 17, scope: !4225)
!4461 = !DILocation(line: 386, column: 40, scope: !4234)
!4462 = !DILocation(line: 386, column: 40, scope: !4243)
!4463 = !DILocation(line: 386, column: 59, scope: !4243)
!4464 = !DILocation(line: 386, column: 55, scope: !4243)
!4465 = !DILocation(line: 387, column: 56, scope: !4234)
!4466 = !DILocation(line: 1, column: 1, scope: !4227)
!4467 = !DILocation(line: 386, column: 49, scope: !4243)
!4468 = !DILocation(line: 386, column: 68, scope: !4234)
!4469 = !DILocation(line: 236, column: 48, scope: !4181)
!4470 = distinct !DISubprogram(name: "{closure#0}", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix28_$u7b$$u7b$closure$u7d$$u7d$17h549e94cd41e03766E", scope: !3094, file: !908, line: 236, type: !4471, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4473)
!4471 = !DISubroutineType(types: !4472)
!4472 = !{!3086, !3093, !1294}
!4473 = !{!4474, !4475}
!4474 = !DILocalVariable(name: "src", scope: !4470, file: !908, line: 228, type: !383, align: 8)
!4475 = !DILocalVariable(arg: 2, scope: !4470, file: !908, line: 236, type: !1294)
!4476 = !DILocation(line: 228, column: 31, scope: !4470)
!4477 = !DILocation(line: 236, column: 49, scope: !4470)
!4478 = !DILocation(line: 237, column: 34, scope: !4470)
!4479 = !DILocation(line: 237, column: 66, scope: !4470)
!4480 = !DILocation(line: 237, column: 31, scope: !4470)
!4481 = !DILocation(line: 237, column: 51, scope: !4470)
!4482 = !DILocation(line: 236, column: 52, scope: !4470)
!4483 = !DILocation(line: 238, column: 22, scope: !4470)
!4484 = distinct !DISubprogram(name: "slice_shift_char", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix16slice_shift_char17h5f449bc64c8d58c9E", scope: !3094, file: !908, line: 256, type: !4133, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4485)
!4485 = !{!4486, !4487, !4489}
!4486 = !DILocalVariable(name: "src", arg: 1, scope: !4484, file: !908, line: 256, type: !383)
!4487 = !DILocalVariable(name: "chars", scope: !4488, file: !908, line: 257, type: !317, align: 8)
!4488 = distinct !DILexicalBlock(scope: !4484, file: !908, line: 257, column: 21)
!4489 = !DILocalVariable(name: "ch", scope: !4490, file: !908, line: 258, type: !306, align: 4)
!4490 = distinct !DILexicalBlock(scope: !4488, file: !908, line: 258, column: 28)
!4491 = !DILocation(line: 256, column: 37, scope: !4484)
!4492 = !DILocation(line: 257, column: 25, scope: !4488)
!4493 = !DILocation(line: 257, column: 37, scope: !4484)
!4494 = !DILocation(line: 258, column: 39, scope: !4488)
!4495 = !DILocation(line: 258, column: 28, scope: !4488)
!4496 = !DILocation(line: 258, column: 33, scope: !4488)
!4497 = !DILocation(line: 258, column: 33, scope: !4490)
!4498 = !DILocation(line: 259, column: 35, scope: !4488)
!4499 = !DILocation(line: 261, column: 25, scope: !4488)
!4500 = !DILocation(line: 258, column: 21, scope: !4488)
!4501 = !DILocation(line: 263, column: 18, scope: !4484)
!4502 = !DILocation(line: 259, column: 30, scope: !4488)
!4503 = !DILocation(line: 259, column: 25, scope: !4488)
!4504 = distinct !DISubprogram(name: "pow", linkageName: "_ZN39_$LT$f64$u20$as$u20$num_traits..Num$GT$14from_str_radix3pow17hdb862993927a2550E", scope: !3094, file: !908, line: 379, type: !4505, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !14, templateParams: !4, retainedNodes: !4507)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!525, !525, !109}
!4507 = !{!4508, !4509}
!4508 = !DILocalVariable(name: "base", arg: 1, scope: !4504, file: !908, line: 379, type: !525)
!4509 = !DILocalVariable(name: "exp", arg: 2, scope: !4504, file: !908, line: 379, type: !109)
!4510 = !DILocation(line: 379, column: 32, scope: !4504)
!4511 = !DILocation(line: 379, column: 42, scope: !4504)
!4512 = !DILocation(line: 380, column: 47, scope: !4504)
!4513 = !DILocation(line: 380, column: 29, scope: !4504)
!4514 = !DILocation(line: 381, column: 26, scope: !4504)
